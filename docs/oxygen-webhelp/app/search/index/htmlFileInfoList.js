define(function () {
return ["GUID-00113BB0-63B1-4D54-9D52-DA918CB5088B.html@@@1.2.1.19.3.8 SNMP_START_OF_VAR Macro@@@#define SNMP_START_OF_VAR (0) This Macro is used for both SNMP SET and GET Variable processing to indicate the start of SNMP variable processing. For multi byte data request, the first byte will be...","GUID-001B34EC-903E-4448-863C-256B62C95F53.html@@@1.2.1.19.3.42 TCPIP_SNMP_TrapSendFlagGet Function@@@void TCPIP_SNMP_TrapSendFlagGet( bool * trapNotify ); This function is used to get the trap send flag details and this is used only when user is trying to send more than one varbind in a single PDU...","GUID-001E5E58-B454-4492-AEDC-707190DDE737.html@@@1.2.5.4.3.6 DRV_ENCX24J600_EventAcknowledge Function@@@bool DRV_ENCX24J600_EventAcknowledge(DRV_HANDLE hMac, TCPIP_MAC_EVENT macEvents); true - if successful false - if not successful ENCX24J600 Acknowledge Event This function acknowledges an event. The...","GUID-002A700C-5870-4F0A-BAEA-CA3A79E0FEE4.html@@@1.2.1.13.1 Abstraction Model@@@HTTP Net Features The HTTP Net module is a HTTP server module that works using the Networking Presentation Layer of the MPLAB Harmony framework. This allows it to support both encrypted and plain text...","GUID-00731900-7B6C-42F1-A7BD-F9F7450D3600.html@@@1.2.1.23.3.12 TCPIP_TFTPS_HandlerDeRegister Function@@@bool TCPIP_TFTPS_HandlerDeRegister(TCPIP_TFTPS_HANDLE hTftps); true - if the call succeeds false - if no such handler is registered This function de-registers the TFTP server module event handler. The...","GUID-008B6CD0-A768-4201-B068-1EBA909B9260.html@@@1.2.3.1.3.55 TCPIP_TCP_StringPut Function@@@const uint8_t* TCPIP_TCP_StringPut( TCP_SOCKET hTCP, const uint8_t* Data ); This function writes a null-terminated string to a TCP socket. The null-terminator is not copied to the socket. TCP is...","GUID-008EECE5-9E49-408E-9D25-6EC020D3BBA2.html@@@1.2.1.2.3.86 sockaddr_in Structure@@@struct sockaddr_in { short sin_family; uint16_t sin_port; struct in_addr sin_addr; char sin_zero[8]; }; In the Internet address family. Members Description sin_family Address family; must be AF_INET...","GUID-009455EE-D3AD-4A81-B6CA-AF56F01B426E.html@@@1.2.1.16.2 TCPIP Reboot Configurations@@@Reboot Specific User Configurations Allow Only Same Subnet: For improved security, you might want to limit reboot capabilities to only users on the same IP subnet. Defining this symbol enables this...","GUID-00FB632B-9A9E-40C2-ACD7-9B27D19A02EF.html@@@1.2.1.2.3.9 AF_INET6 Macro@@@#define AF_INET6 10 // Internet Address Family - IPv6 Internet Address Family - IPv6...","GUID-010C57FD-E0AA-4ACD-B266-4E88CACE7E12.html@@@1.2.4.5.3.3 IPV4_OPTION_FIELD Structure@@@typedef struct { struct { uint8_t optNumber : 5; uint8_t optClass : 2; uint8_t optCopied : 1; } uint8_t optLength; uint16_t optData[]; } IPV4_OPTION_FIELD; IPv4 packet option definition. This is the...","GUID-01176052-ADEA-46EC-B40E-DA11F594DEA2.html@@@1.2.1.19.3.12 SNMP_V3 Macro@@@#define SNMP_V3 (3) This macro is used for SNMP version 3 with authentication and privacy...","GUID-011B6632-AE0D-4E6F-879A-7D08C2A8B2AD.html@@@1.2.5.8.4.15 DRV_ETHPHY_INTERFACE_INDEX Enumeration@@@typedef enum { DRV_ETHPHY_INF_IDX_ALL_EXTERNAL, DRV_ETHPHY_INF_IDX_PORT_0, DRV_ETHPHY_INF_IDX_PORT_1, DRV_ETHPHY_INF_IDX_PORT_2, DRV_ETHPHY_INF_IDX_PORT_3, DRV_ETHPHY_INF_IDX_PORT_4...","GUID-013CEB2E-02C0-4A8D-82B8-CA9B1D22DFA3.html@@@1.2.1.18.1 Abstraction Model@@@...","GUID-0141B187-105A-4CF6-9968-4E989A0F774C.html@@@1.2.1.2.3.69 SO_BROADCAST Macro@@@#define SO_BROADCAST 6 //Enables the Socket for sending broadcast data Enables the socket for sending broadcast data...","GUID-014B6D41-C8F4-42E2-9F09-4A5F9FD1111B.html@@@1.2.1.19.3.22 TCPIP_SNMP_ClientGetNet Function@@@TCPIP_NET_HANDLE TCPIP_SNMP_ClientGetNet( int * netIx, TCPIP_NET_HANDLE hNet ); This function is used to get a network interface to transmit SNMP trap. The SNMP module should be initialized...","GUID-0160A87C-BE6B-4735-A05B-E1DEC439ACDD.html@@@1.2.3.2.3.44 TCPIP_UDP_SocketsNumberGet Function@@@int TCPIP_UDP_SocketsNumberGet(); The number of UDP sockets This function returns the number of created UDP sockets. This is the maximum number of sockets that can be opened at any moment as it&apos;s been...","GUID-01A0A1D8-EC9B-4EFF-B8E4-D154B555FEF2.html@@@1.2 MPLAB\u00AE Harmony TCP/IP Library@@@MPLAB\u00AE Harmony TCP/IP Library includes implementation of various network protocols. Each of these modules belongs to one of the layers of TCP/IP model: Application, Presentation, Transport, Network...","GUID-025D2A2B-D021-435E-B34E-55689F75B189.html@@@1.2.5.3.3.26 DRV_ENC28J60_Tasks Function@@@void DRV_ENC28J60_Tasks(SYS_MODULE_OBJ object); None. ENC28J60 Tasks This function will execute the main state machine for the ENC28J60 driver. The driver had to be successfully initialized with...","GUID-0274D9A9-AC80-43E3-B3D7-2F7ACB6EF33B.html@@@1.2.3.1.3.37 TCPIP_TCP_Peek Function@@@uint8_t TCPIP_TCP_Peek( TCP_SOCKET hTCP, uint16_t wStart ); This function peaks at one byte in the TCP RX buffer/FIFO without removing it from the buffer. TCP is initialized. Parameters Description...","GUID-02895CBF-4E55-4E31-817E-11206B95FDE1.html@@@1.2.2.1.3.27 NET_PRES_SKT_ADDR_T Enumeration@@@typedef enum { NET_PRES_SKT_ADDR_UNKNOWN } NET_PRES_SKT_ADDR_T; Enumeration: NET_PRES_SKT_ADDR_T Enumeration describing all the possible NET_PRES address types None...","GUID-0294C9E1-7127-4AF0-8CCD-631E29E3C785.html@@@1.2.5.3.3.2 DRV_ENC28J60_Close Function@@@void DRV_ENC28J60_Close(DRV_HANDLE handle); None. ENC28J60 Close This function closes a handle to the driver. If it is the last client open, the driver will send an RX Disable command to the ENC...","GUID-02A694CF-88A5-4ADA-8785-7EEEC62D66EA.html@@@Worldwide Sales and Service@@@AMERICAS ASIA/PACIFIC ASIA/PACIFIC EUROPE Corporate Office 2355 West Chandler Blvd. Chandler, AZ 85224-6199 Tel: 480-792-7200 Fax: 480-792-7277 Technical Support: www.microchip.com/support Web...","GUID-0303C1A0-F9D1-44B6-A8DC-A3C82369CD36.html@@@1.2.1.13.3.20 TCPIP_HTTP_NET_ConnectionFlush Function@@@uint16_t TCPIP_HTTP_NET_ConnectionFlush( TCPIP_HTTP_NET_CONN_HANDLE connHandle ); This function calls the transport layer&apos;s flush function. connHandle - a valid HTTP connection. Parameters Description...","GUID-0318BF37-F1D9-4AE0-8BD4-8A2F5096747A.html@@@1.2.4.5.3.24 TCPIP_IPV4_PacketOptionGet Function@@@int TCPIP_IPV4_PacketOptionGet( TCPIP_MAC_PACKET* pRxPkt, TCPIP_IPV4_OPTION_TYPE optType, IPV4_OPTION_FIELD* pOptField, int optSize ); This function is a helper to allow retrieving a specific option...","GUID-0325ABD8-E25A-47BD-90BB-4498EE81522C.html@@@1.2.5.6.3.4 MAC_DRVR_Deinitialize Function@@@void MAC_DRVR_Deinitialize( SYS_MODULE_OBJ object ); None This function supports tear down of the Ethernet MAC. This is the opposite of set up and is used by tcpip_module_manager. This function...","GUID-03AFA467-86F9-4F5A-A106-7129B71494FE.html@@@1.2.4.6.3.67 TCPIP_IPV6_UniqueLocalUnicastAddressAdd Function@@@IPV6_ULA_RESULT TCPIP_IPV6_UniqueLocalUnicastAddressAdd( TCPIP_NET_HANDLE netH, uint16_t subnetID, IPV6_ULA_FLAGS genFlags, IP_MULTI_ADDRESS* ntpAddress ); This function starts the process of adding a...","GUID-03F0FC1F-4D34-404C-A5D5-A286B61DC7A3.html@@@1.2.1.5.3.15 TCPIP_DHCPS_LEASE_SET Structure@@@typedef struct { IPV4_ADDR ipAddress; uint32_t leaseTime; uint8_t leaseState; uint8_t clientIdLen; uint8_t clientId[]; }TCPIP_DHCPS_LEASE_SET; Structure: TCPIP_DHCPS_LEASE_SET DHCP Server module lease...","GUID-0426D2AB-6BC8-4C20-AE04-F43D7CC56D56.html@@@1.2.5.10 PPP Driver Library@@@The Point-to-Point Protocol (PPP) is implemented as a driver object that provides APIs for: Notifying of an PPP request operation result Sending an PPP echo request containing user supplied data...","GUID-0456E933-FD75-4871-A854-4851F634D17F.html@@@1.2.1.22 TFTP Client Module@@@The TCP/IP Stack Library Trivial File Transfer Protocol (TFTP) module is a simple protocol used to transfer files. The TFTP client module supports reading and writing of files (or mail) from/to a...","GUID-045814CB-0269-4B52-A4DD-AADA86648D1B.html@@@1.2.4.5.3.11 TCPIP_IPV4_OPTION_DCPT Structure@@@typedef struct { TCPIP_IPV4_OPTION_TYPE optionType; int optionSize; } TCPIP_IPV4_OPTION_DCPT; Descriptor for the IPv4 options. This is a data structure describing options that are part of an IPv4...","GUID-047F93C4-9886-4C91-861E-9D01730FB5D2.html@@@1.2.1.4.2 Dynamic Host Configuration Protocol (DHCPS) Configurations@@@DHCPS Specific User Configurations Maximum Number of Entries in the Lease Table: The Maximum Number of entries in the lease table Default total number of entries for all the the interface Default...","GUID-04B7E0DA-96EF-4F1D-8496-83C5DEF57318.html@@@1.2.5.8.4.32 DRV_ETHPHY_RESET_FUNCTION Type@@@typedef void (* DRV_ETHPHY_RESET_FUNCTION)(const struct DRV_ETHPHY_OBJECT_BASE_TYPE* pBaseObj); None Pointer to Function: typedef void (* DRV_ETHPHY_RESET_FUNCTION) ( const struct...","GUID-04F08455-8018-4546-BBC6-9DE9B22EE6B1.html@@@1.2.1.16.3.2 TCPIP_REBOOT_TASK Function@@@void TCPIP_REBOOT_Task(); This function performs Reboot server module tasks in the TCP/IP stack. The Reboot server module should have been initialized. None. None...","GUID-05117C73-29E9-4EAD-847C-07F8848E637D.html@@@1.2.3.1.3.52 TCPIP_TCP_SocketsNumberGet Function@@@int TCPIP_TCP_SocketsNumberGet(); This function returns the number of created TCP sockets. This is the maximum number of sockets that can be opened at any moment as it&apos;s been passed as parameter when...","GUID-055CF601-37B7-43DF-AA7D-6A55C687FE49.html@@@1.2.6.1.1.3.16 TCPIP_Helper_MACAddressToString Function@@@bool TCPIP_Helper_MACAddressToString( const TCPIP_MAC_ADDR* macAddr, char* buff, size_t buffSize ); This function will convert a MAC address to a string representation. None. Parameters Description...","GUID-05688223-4365-4430-8F45-21B54F07FFB5.html@@@1.2.1.23.3.4 TCPIP_TFTPS_DEFAULT_FILESIZE Macro@@@#define TCPIP_TFTPS_DEFAULT_FILESIZE (64000) The maximum size for a file in bytes to be accepted.TFTP Opcode defined by RFC 2347...","GUID-05D1A6F5-39B8-4726-B6AA-C20DB2C696AE.html@@@1.2.6.1.1.3.20 TCPIP_Helper_ntohll Macro@@@#define TCPIP_Helper_ntohll(ll) TCPIP_Helper_htonll(ll) This is macro TCPIP_Helper_ntohll...","GUID-05D345E2-2F63-444B-ADE3-980C9EDF3C60.html@@@1.2.5.8.4.26 DRV_ETHPHY_Open Function@@@DRV_HANDLE DRV_ETHPHY_Open(const SYS_MODULE_INDEX drvIndex, const DRV_IO_INTENT intent); valid open-instance handle if successful (a number identifying both the caller and the module instance)...","GUID-05ED5A83-621B-4753-9A98-747A4B51D0ED.html@@@1.2.1.21.3.9 TCPIP_TELNET_MODULE_CONFIG Structure@@@typedef struct { uint16_t nConnections; uint16_t sktTxBuffSize; uint16_t sktRxBuffSize; uint16_t listenPort; uint16_t configFlags; } TCPIP_TELNET_MODULE_CONFIG; Structure: TCPIP_TELNET_MODULE_CONFIG...","GUID-05F1C6C9-DEA3-4A98-AA37-BE58E0FD8548.html@@@1.2.1.12.2.38 TCPIP_HTTP_FileInclude Function@@@void TCPIP_HTTP_FileInclude( HTTP_CONN_HANDLE connHandle, const uint8_t* cFile ); This function allows an entire file to be included as a dynamic variable, providing a basic templating system for HTML...","GUID-06287551-3A6E-45AC-9C23-A05694E3730E.html@@@1.2.1.2.3.2 __SS_PADSIZE Macro@@@#define _SS_PADSIZE (_SS_SIZE - (2 * sizeof (__ss_aligntype))) This is macro __SS_PADSIZE...","GUID-064A17CA-590A-4801-920B-45577E646EC4.html@@@1.2.1.20.3.15 TCPIP_SNTP_TimeStampGet Function@@@TCPIP_SNTP_RESULT TCPIP_SNTP_TimeStampGet( TCPIP_SNTP_TIME_STAMP* pTStamp, uint32_t* pLastUpdate ); This function gets the last valid timestamp obtained from a NTP server. The TCP/IP Stack should have...","GUID-06574BF0-661A-4802-A770-7C85265616AB.html@@@1.2.1.7 DNS Module@@@The Domain Name Service associates host names (i.e., www.microchip.com) with IP addresses (i.e., 10.0.54.2). The DNS Client module provides DNS resolution capabilities to the stack. As illustrated in...","GUID-0685830F-E0EB-43BA-ACFB-25787AE89853.html@@@1.2.4.2.1 Abstraction Model@@@...","GUID-0696A50E-0F15-4741-A89F-79D38695C280.html@@@1.2.3.1.2 Transmission Control Protocol (TCP) Configurations@@@TCP Specific User Configurations Maximum TX Segment Size: TCP Maximum Segment Size for TX. The TX maximum segment size is actually governed by the remote node MSS option advertised during connection...","GUID-06C76B30-B783-4FFA-A770-1DED1FDF2D86.html@@@1.2.5.8.4.35 DRV_ETHPHY_SETUP Structure@@@typedef struct { int phyAddress; TCPIP_ETH_OPEN_FLAGS openFlags; DRV_ETHPHY_CONFIG_FLAGS configFlags; TCPIP_ETH_PAUSE_TYPE macPauseType; DRV_ETHPHY_RESET_FUNCTION resetFunction; } DRV_ETHPHY_SETUP...","GUID-06DC2E4B-E5B4-46D1-9655-5C783EFA4F11.html@@@1.2.5.9.3.8 DRV_MIIM_DeregisterCallback Function@@@DRV_MIIM_RESULT DRV_MIIM_DeregisterCallback(DRV_HANDLE handle, DRV_MIIM_CALLBACK_HANDLE cbHandle); DRV_MIIM_RES_OK if the operation succeeded. an error code otherwise This function deregisters a...","GUID-06EA623C-5A27-4AA8-BD11-3AAD59833715.html@@@1.2.1.2.3.64 recv Function@@@int recv( SOCKET s, char* buf, int len, int flags ); This function is used to reveive incoming data that has been queued for a socket. This function can be used with both datagram and stream socket...","GUID-06EB7E2C-E72B-4633-94E2-B8330020A036.html@@@1.2.6.1.1.3.43 TCPIP_STACK_HEAP_CONFIG Structure@@@typedef struct { TCPIP_STACK_HEAP_TYPE heapType; TCPIP_STACK_HEAP_FLAGS heapFlags; TCPIP_STACK_HEAP_USAGE heapUsage; void* (* malloc_fnc)(size_t bytes); void* (* calloc_fnc)(size_t nElems, size_t...","GUID-06EC5166-673E-443F-908E-244EE9857629.html@@@1.2.5.8.4.20 DRV_ETHPHY_NEG_INIT_TMO Macro@@@#define DRV_ETHPHY_NEG_INIT_TMO (1) Ethernet PHY Negotiation Initiation time out This definition sets the time out of the PHY negotiation initiation, in ms. None...","GUID-06EF50DE-6188-426E-90FE-9CA7BC8D7114.html@@@1.2.2.1.3.34 NET_PRES_SocketClose Function@@@void NET_PRES_SocketClose(NET_PRES_SKT_HANDLE_T handle); None. This function calls the encryption provider&apos;s close function and then calls the close function of the transport layer for the socket and...","GUID-0727B400-CC9C-4F2B-87C8-1FC91E4C62F8.html@@@1.2.2.1.3.58 NET_PRES_SocketWriteIsReady Function@@@uint16_t NET_PRES_SocketWriteIsReady(NET_PRES_SKT_HANDLE_T handle, uint16_t reqSize, uint16_t minSize); The number of bytes available in the TX buffer: &gt;= reqSize - If the requested space is available...","GUID-0744D225-DBCC-460A-BBD9-5CC7B00686E2.html@@@1.2.1.12.2.41 TCPIP_HTTP_PostExecute Function@@@HTTP_IO_RESULT TCPIP_HTTP_PostExecute( HTTP_CONN_HANDLE connHandle ); This function is implemented by the application developer. Its purpose is to aprse the data received from POST forms and perform...","GUID-0761CBDB-640F-47E5-9E91-A7B90B83295C.html@@@1.2.1.17.2.7 TCPIP_SMTP_Put Function@@@bool TCPIP_SMTP_Put( char c ); This function writes a single byte to the SMTP client. TCPIP_SMTP_UsageBegin() returned true on a previous call. Parameters Description c The byte to be written. None...","GUID-077C63BB-3BEF-4AD0-912B-54F67EFCD6F3.html@@@1.2.4.4.3.3 TCPIP_IGMP_ExcludeSource Function@@@TCPIP_IGMP_RESULT TCPIP_IGMP_ExcludeSource( UDP_SOCKET socket, TCPIP_NET_HANDLE hNet, IPV4_ADDR mcastAddress, IPV4_ADDR sourceAddress ); This function performs the unsubscription of a UDP socket to...","GUID-07985EED-D525-413B-AEFE-78B563328687.html@@@Quality Management System@@@For information regarding Microchip\u2019s Quality Management Systems, please visit www.microchip.com/quality...","GUID-079F091B-9D66-4E75-8600-092EDC9EB19E.html@@@1.2.6.1.1.3.75 TCPIP_STACK_NetAliasNameGet Function@@@int TCPIP_STACK_NetAliasNameGet( TCPIP_NET_HANDLE netH, char* nameBuffer, int buffSize ); This function returns the alias name associated with the interface handle. The TCP/IP stack should have been...","GUID-082D9EB1-DD48-4638-A6D7-B09FAD68CFD1.html@@@1.2.3.1.3.56 TCPIP_TCP_Task Function@@@void TCPIP_TCP_Task(); This function performs TCP module tasks in the TCP/IP stack. The TCP module should have been initialized. None. None...","GUID-0848A8D1-F2A5-4B53-94C1-1E78F7FB5E24.html@@@1.2.6.1.1.3.66 TCPIP_STACK_NetAddressDnsPrimary Function@@@uint32_t TCPIP_STACK_NetAddressDnsPrimary( TCPIP_NET_HANDLE netH ); If interface is enabled then the function will return the IPv4 address of the primary DNS of the network interface. The...","GUID-088770E9-EA3A-4AEA-A328-D70523609360.html@@@1.2.1.4.3.1 TCPIP_DHCPS_ADDRESS_CONFIG Structure@@@typedef struct { int interfaceIndex; const char* serverIPAddress; const char* startIPAddRange; const char* ipMaskAddress; const char* priDNS; const char* secondDNS; bool poolEnabled; }...","GUID-08E039FC-538F-40F5-85D1-987205EDA6D6.html@@@1.2.4.1.3.7 TCPIP_ARP_EntryRemove Function@@@TCPIP_ARP_RESULT TCPIP_ARP_EntryRemove( TCPIP_NET_HANDLE hNet, IPV4_ADDR* ipAdd ); This function removes an existent mapping from the selected interface cache. The ARP module should have been...","GUID-08FBA7C3-98EE-43B2-B6CE-54B88FFFD70B.html@@@1.2.2.1.3.74 NET_PRES_TransRead Type@@@typedef uint16_t (* NET_PRES_TransRead)(uintptr_t transHandle, uint8_t* buffer, uint16_t count); The number of data bytes copied by the transport channel into the buffer. Presentation Layer Transport...","GUID-0924570F-F980-46E8-AC04-3891920C141E.html@@@1.2.1.23.3.8 TCPIP_TFTPS_EVENT_HANDLER Type@@@typedef void (* TCPIP_TFTPS_EVENT_HANDLER)(TCPIP_NET_HANDLE hNet, TCPIP_TFTPS_EVENT_TYPE evType, const char* name, const void* param); Type: TCPIP_TFTPS_EVENT_HANDLER The format of a notification...","GUID-09409820-BC3E-4F11-9616-8063B9D35079.html@@@1.2.1.10.3.18 TCPIP_FTPC_Disconnect Function@@@TCPIP_FTPC_RETURN_TYPE TCPIP_FTPC_Disconnect(TCPIP_FTPC_CONN_HANDLE_TYPE ftpcHandle); TCPIP_FTPC_RET_OK - if successfully disconnected control socket TCPIP_FTPC_RET_BUSY - could not execute the...","GUID-0944056F-A528-4B3D-878A-38F5D91904C1.html@@@1.2.5.9.3.26 DRV_MIIM_Scan Function@@@DRV_MIIM_OPERATION_HANDLE DRV_MIIM_Scan(DRV_HANDLE handle, unsigned int rIx, unsigned int phyAdd, DRV_MIIM_OPERATION_FLAGS opFlags, DRV_MIIM_RESULT* pOpResult); A not NULL DRV_MIIM_OPERATION_HANDLE if...","GUID-096BD038-3679-419D-88EE-3A928934E41E.html@@@1.2.5.9.3.30 DRV_MIIM_Tasks Function@@@void DRV_MIIM_Tasks(SYS_MODULE_OBJ object); None This function is used to maintain the driver&apos;s internal state machine. This function is normally not called directly by an application. It is called by...","GUID-09E89594-CEE4-416C-AA22-94163ADC3288.html@@@1.2.1.6.3.1 TCPIP_DHCPV6_CLIENT_INFO Structure@@@typedef struct { TCPIP_DHCPV6_CLIENT_STATE clientState; int nIanas; int nIatas; int nFreeIas; uint32_t dhcpTime; TCPIP_DHCPV6_SERVER_STATUS_CODE lastStatusCode; void* statusBuff; size_t...","GUID-09EF2F19-F47A-479E-9BDC-245F47156017.html@@@1.2.1.22.3.3 TCPIP_TFTPC_EVENT_HANDLER Type@@@typedef void (* TCPIP_TFTPC_EVENT_HANDLER)(TCPIP_NET_HANDLE hNet, TCPIP_TFTPC_EVENT_TYPE evType,void *buf,uint32_t bufLen, const void* param); Type: TCPIP_TFTPC_EVENT_HANDLER. Prototype of a TFTPC...","GUID-0A3EFD43-F2CF-4057-8AAF-E8C18636D1A1.html@@@1.2.3.1.3.46 TCPIP_TCP_SIGNAL_TYPE Enumeration@@@typedef enum { TCPIP_TCP_SIGNAL_TX_DONE = 0x0001, TCPIP_TCP_SIGNAL_TX_DATA_DONE = 0x0002, TCPIP_TCP_SIGNAL_TX_SPACE = 0x0004, TCPIP_TCP_SIGNAL_TX_RST = 0x0008, TCPIP_TCP_SIGNAL_ESTABLISHED = 0x0100...","GUID-0A7F51B2-4D28-427F-8636-6B6DD984B60D.html@@@1.2.4.4.1 Abstraction Model@@@IGMP Software Abstraction Block Diagram...","GUID-0A8F0C6F-E657-4BEF-8D1C-37488FFEA9BF.html@@@1.2.5.7.3.1 DRV_ETHMAC_INDEX_0 Macro@@@#define DRV_ETHMAC_INDEX_0 0 #define DRV_ETHMAC_INDEX_1 1 Ethernet Driver Module Index Numbers These constants provide Ethernet driver index definitions. These constants should be used in place of...","GUID-0ABA3B87-C37C-49F9-A042-67FCEBE28854.html@@@1.2.4.5.3.28 TCPIP_IPV4_SelectSourceInterface Function@@@TCPIP_NET_HANDLE TCPIP_IPV4_SelectSourceInterface( TCPIP_NET_HANDLE netH, const IPV4_ADDR* pDestAddress, IPV4_ADDR* pSrcAddress, bool srcSet ); Updates the pSrcAddress and returns the needed...","GUID-0AC195CC-AEA5-4BC7-AE1F-36C2A8091348.html@@@1.2.5.4.3.3 DRV_ENCX24J600_ConfigGet Function@@@size_t DRV_ENCX24J600_ConfigGet(DRV_HANDLE hMac, void* configBuff, size_t buffSize, size_t* pConfigSize); Number of bytes copied to the buffer ENCX24J600 Get Configuration Gets the current...","GUID-0AEBD81D-40E3-4A79-B822-F14422D72883.html@@@1.2.1.2.3.83 SOCK_STREAM Macro@@@#define SOCK_STREAM 100 //Connection based byte streams. Use TCP for the Internet address family. Connection based byte streams. Use TCP for the Internet address family...","GUID-0B22E607-0077-4838-8920-8CA7DC7EEC31.html@@@1.2.5.2.42 TCPIP_MAC_POWER_MODE Enumeration@@@typedef enum { TCPIP_MAC_POWER_NONE, TCPIP_MAC_POWER_FULL, TCPIP_MAC_POWER_LOW, TCPIP_MAC_POWER_DOWN } TCPIP_MAC_POWER_MODE; TCP/IP MAC Power Mode. List of supported MAC power modes. Members...","GUID-0B38F2BB-4B54-4FFD-A7CC-4AAD732CB4F7.html@@@1.2.1.2.3.75 SO_RCVBUF Macro@@@#define SO_RCVBUF 8 //Receive Buffer Size (TCP only) Receive buffer size (TCP only)...","GUID-0B60C5DD-9B61-49A7-83B2-7792F425BEF6.html@@@1.2.5.2.61 TCPIP_MODULE_MAC_ID Enumeration@@@typedef enum { TCPIP_MODULE_MAC_NONE = 0x1000, TCPIP_MODULE_MAC_ENCJ60 = 0x1010, TCPIP_MODULE_MAC_ENCJ60_0 = 0x1010, TCPIP_MODULE_MAC_ENCJ600 = 0x1020, TCPIP_MODULE_MAC_ENCJ600_0 = 0x1020...","GUID-0B7ADACD-E078-4FE5-BC6A-B7CABFE390D3.html@@@1.2.1.6.3 Library Interface@@@Name Description Macros TCPIP_DHCPV6_CLIENT_DUID_TYPE Default DUID type to be used by the client TCPIP_DHCPV6_CLIENT_PORT Clients listen for DHCP messages on UDP port: TCPIP_DHCPV6_DNS_SERVERS_NO...","GUID-0BA795A7-6D48-48CF-A925-30288A33D19C.html@@@1.2.4.6.3.51 TCPIP_IPV6_MulticastListenerRemove Function@@@void TCPIP_IPV6_MulticastListenerRemove( TCPIP_NET_HANDLE netH, IPV6_ADDR * address ); This function removes a multicast listener from a given interface. TCPIP_IPV6_Initialize() should be called...","GUID-0BACDF8E-626D-4123-A257-F504D698660F.html@@@1.2.5.2.30 TCPIP_MAC_PACKET_RX_STAT Union@@@typedef union { TCPIP_MAC_PACKET_RX_STAT_PIC32INT rxStatPIC32INT; TCPIP_MAC_PACKET_RX_STAT_PIC32C rxStatPIC32C; } TCPIP_MAC_PACKET_RX_STAT; MAC Received Packet Status. This structure contains the...","GUID-0BF7C3CF-EA19-4530-9286-8EAB871978E7.html@@@1.2.1.5.1 Abstraction Model@@@This module provides software abstraction of the DHCP Server module existent in any TCP/IP Stack implementation. It removes the overhead of address configuration from all other clients on the local...","GUID-0C1AF471-66D4-472F-84AF-212E9E18B21D.html@@@1.2.5.2 MAC Driver Module@@@In the seven-layer OSI model of computer networking, media access control (MAC) data communication protocol is a sub-layer of the data link_layer, which itself is layer_2. The MAC sub-layer provides...","GUID-0C213E95-1D72-4D87-A542-8C403169905A.html@@@1.2.1.21.3.7 TCPIP_TELNET_FLAGS Enumeration@@@typedef enum { TCPIP_TELNET_FLAG_NONE = 0x0000, TCPIP_TELNET_FLAG_NO_DELAY = 0x0001, TCPIP_TELNET_FLAG_PASS_CONTROL_CHARS = 0x0002 } TCPIP_TELNET_FLAGS; Enumeration: TCPIP_TELNET_FLAGS. Flags for the...","GUID-0C4247BD-FE52-4439-8BA5-AC0DB82C8A2C.html@@@1.2.3.1.3.39 TCPIP_TCP_PacketHandlerRegister Function@@@TCPIP_TCP_PROCESS_HANDLE TCPIP_TCP_PacketHandlerRegister( TCPIP_TCP_PACKET_HANDLER pktHandler, const void* handlerParam ); This function registers a new packet processing handler. The caller can use...","GUID-0C4D983F-50CF-4CFD-8FFB-CA51C091820D.html@@@1.2.3.2.3.1 TCPIP_UDP_ArrayGet Function@@@uint16_t TCPIP_UDP_ArrayGet(UDP_SOCKET hUDP, uint8_t * cData, uint16_t wDataLen); The number of bytes successfully read from the UDP buffer. If this value is less than wDataLen, then the buffer was...","GUID-0C5C3BCE-72E8-4053-B164-937B308F8E26.html@@@1.2.4.2.3.4 TCPIP_ICMP_CallbackDeregister Function@@@bool TCPIP_ICMP_CallbackDeregister( ICMP_HANDLE hIcmp ); This function notifies a stack client to remove its former registered notification handler. After this operation the client will no longer be...","GUID-0C9F3261-AB84-44F4-88C6-DE1B62F1ECCC.html@@@1.2.5.2.26 TCPIP_MAC_Open Function@@@DRV_HANDLE TCPIP_MAC_Open( const SYS_MODULE_INDEX drvIndex, const DRV_IO_INTENT intent ); This is the function that opens an instance of the MAC. Once a MAC client handle is obtained all the MAC...","GUID-0CB358FC-2147-431A-B631-5D317979902F.html@@@1.2.1.10.3.6 TCPIP_FTPC_Connect Function@@@TCPIP_FTPC_CONN_HANDLE_TYPE TCPIP_FTPC_Connect(TCPIP_FTPC_CTRL_CONN_TYPE * pftpcConn, TCPIP_FTPC_CTRL_EVENT_CALLBACK_TYPE ctrlCallback, TCPIP_FTPC_RETURN_TYPE* pResult); a valid handle (!= 0) - if...","GUID-0CD0B980-1595-4B23-90C9-8CDD654F99C5.html@@@1.2.5.5.3.12 DRV_GMAC_PacketTx Function@@@TCPIP_MAC_RES DRV_GMAC_PacketTx(DRV_HANDLE hMac, TCPIP_MAC_PACKET * ptrPacket); TCPIP_MAC_RES_OK if success a TCPIP_MAC_RES error value if failed This is the MAC transmit function. Using this function...","GUID-0CD251C3-2AFD-4D4E-826C-B9E51A356765.html@@@1.2.1.20 SNTP Module@@@The SNTP module implements the Simple Network Time Protocol. The module updates its internal time periodically using a pool of public global time servers. It then calculates reference times on any...","GUID-0CE302A6-E1F4-46EF-A764-843B91ADD7F2.html@@@1.2.5.4.2 ENCx24J600 MAC (ENCx24J600) Configurations@@@ENCx24J600 Specific User Configurations ENCX24J600 Instance Number: The current ENCx24J600 hardware instance Note: This value is currently read-only Default value: 0 Symbol INDEX Number of Client...","GUID-0CF05471-81CB-4011-9B42-18B51811C9AA.html@@@1.2.5.8.4.45 DRV_ETHPHY_VendorSMIReadStart Function@@@DRV_ETHPHY_RESULT DRV_ETHPHY_VendorSMIReadStart(DRV_HANDLE handle, uint16_t rIx, int phyAddress); DRV_ETHPHY_RES_OK - the vendor transaction is started DRV_ETHPHY_VendorSMIReadResultGet() needs to be...","GUID-0CF7A0B0-BDFA-4B6C-AE1E-7F61E9CFA6FA.html@@@1.2.3.2.3.52 TCPIP_UDP_USE_RX_CHECKSUM Macro@@@#define TCPIP_UDP_USE_RX_CHECKSUM Check incoming packets to have proper checksum...","GUID-0D2E65B8-EE01-4CE7-BA12-3A7355A87596.html@@@1.2.4.1.3.10 TCPIP_ARP_EntrySet Function@@@TCPIP_ARP_RESULT TCPIP_ARP_EntrySet( TCPIP_NET_HANDLE hNet, IPV4_ADDR* ipAdd, TCPIP_MAC_ADDR* hwAdd, bool perm ); This function will add an entry to the selected interface cache. The entry can be...","GUID-0DC53074-8D51-497A-9132-C40FCFE9DB10.html@@@1.2.1.14.1 Using Iperf@@@Iperf is a networking tool that helps to measure networking bandwidth and performance. The Iperf module can act as both a client and server for testing. Iperf has the ability to test both UDP and TCP...","GUID-0E27BF3F-0F22-406F-B8BF-A06BB82B0681.html@@@1.2.1.7.3.1 TCPIP_DNS_CLIENT_ADDRESS_TYPE Macro@@@#define TCPIP_DNS_CLIENT_ADDRESS_TYPE IP_ADDRESS_TYPE_IPV4 This parameter can be used to choose ithe type of IP connection for the DNS client: IPv4 or IPv6. Currently only IPv4 is supported and this...","GUID-0E293EBD-6A94-44B6-9917-EBA8F444F9DF.html@@@1.2.1.7.3.10 TCPIP_DNS_CLIENT_MAX_HOSTNAME_LEN Macro@@@#define TCPIP_DNS_CLIENT_MAX_HOSTNAME_LEN (64) Max DNS host name size Use an appropriate value, depending on the names that need to be solved...","GUID-0E6D3607-9921-44C7-8B68-E85554C80801.html@@@1.2.1.19.3.35 TCPIP_SNMP_RecordIDValidation Function@@@bool TCPIP_SNMP_RecordIDValidation( uint8_t snmpVersion, bool idPresent, uint16_t varId, uint8_t * oidValuePtr, uint8_t oidLen ); This is a callback function called by SNMP module. SNMP user must...","GUID-0F26FB06-082B-49F7-A822-BF9F1D0E5414.html@@@1.2.4.5.3.17 TCPIP_IPV4_PacketFilterSet Function@@@TCPIP_IPV4_FILTER_TYPE TCPIP_IPV4_PacketFilterSet( TCPIP_IPV4_FILTER_TYPE filtType ); The function will set the IPv4 packet filters. The filters that are present in the mask will be set. Other filters...","GUID-0F56AEC4-82A7-4A8A-98BB-B988B9A062BA.html@@@1.2.4.6.3.44 TCPIP_IPV6_HandlerDeregister Function@@@bool TCPIP_IPV6_HandlerDeregister( IPV6_HANDLE hIpv6 ); This function deregisters a previously registered IPv6 event handler callback function. The IPv6 stack is initialized and the interface is up...","GUID-0F65B3A4-D24C-4138-A517-F010AF8AADFD.html@@@1.2.1.20.3.4 TCPIP_SNTP_EVENT_HANDLER Type@@@typedef void (* TCPIP_SNTP_EVENT_HANDLER)(TCPIP_SNTP_EVENT evType, const void* evParam); Prototype of a SNTP event handler. Clients can register a handler with the SNTP service. Once an SNTP event...","GUID-0F97E7D9-ED50-45F3-AEA3-3C0B2F7E2E79.html@@@1.2.1.6.3.19 TCPIP_DHCPV6_USER_NOTIFICATION Macro@@@#define TCPIP_DHCPV6_USER_NOTIFICATION false Allow DHCPV6 client user notification if enabled, the TCPIP_DHCPV6_HandlerRegister()/TCPIP_DHCPV6_HandlerDeRegister() functions exist and can be used...","GUID-0FA47FC0-56FB-4142-8D30-1DCF4630822C.html@@@1.2.1.22.3.4 TCPIP_TFTPC_EVENT_TYPE Enumeration@@@typedef enum { TFTPC_EVENT_NONE = 0, TFTPC_EVENT_PUT_REQUEST = 0x0001, TFTPC_EVENT_GET_REQUEST = 0x0002, TFTPC_EVENT_ACKED = 0x0004, TFTP_EVENT_DATA_RECEIVED = 0x0008, TFTPC_EVENT_DECLINE = 0x0010...","GUID-0FA985FE-0D89-43F2-B84D-A75A26F89EC1.html@@@1.2.1.12.2.25 TCPIP_HTTP_CurrentConnectionSMSet Function@@@void TCPIP_HTTP_CurrentConnectionSMSet( HTTP_CONN_HANDLE connHandle, uint8_t stat ); This function set the HTTP current connection state Machine. None. Parameters Description connHandle HTTP...","GUID-0FB3F908-88EE-45CE-94F5-E97AF9049C9B.html@@@Microchip Information@@@...","GUID-0FD40D52-5201-447A-A339-76D717612BEE.html@@@1.2.5.8.4.4 DRV_ETHPHY_CLIENTS_NUMBER Macro@@@#define DRV_ETHPHY_CLIENTS_NUMBER 1 Ethernet PHY Maximum Number of Clients This definition select the maximum number of clients that the Ethernet PHY driver can support at run time. Not defining it...","GUID-0FE405EA-6425-404B-9681-A09DD4974FB0.html@@@1.2.1.10.3.14 TCPIP_FTPC_DATA_SKT_RX_BUFF_SIZE_DFLT Macro@@@#define TCPIP_FTPC_DATA_SKT_RX_BUFF_SIZE_DFLT (0) Specify the Default Receive Buffer Size for the FTP Client Data Socket if 0, the TCP Socket Receive buffer size will be used by FTPC data socket...","GUID-10455BA3-2082-4058-923C-B15397D8799C.html@@@1.2.1.8.3.17 TCPIP_DNSS_Task Function@@@void TCPIP_DNSS_Task(); This function performs DNSS module tasks in the TCP/IP stack. The DNSS module should have been initialized. None. None...","GUID-10534810-0762-4960-AE26-56DE1D7DD789.html@@@1.2.1.6.3.7 TCPIP_DHCPV6_HANDLE Type@@@typedef const void* TCPIP_DHCPV6_HANDLE; A DHCPv6 handle...","GUID-1063D7A8-FA74-4F24-815B-FB44CC5F88BF.html@@@1.2.6.1.1.3.83 TCPIP_STACK_NetGetType Function@@@TCPIP_NETWORK_TYPE TCPIP_STACK_NetGetType( TCPIP_NET_HANDLE hNet ); This function returns the network interface type: primary or alias. The TCP/IP stack should have been initialized by...","GUID-1076C2EA-7DC5-419E-A3E7-BBA92CFF5CFB.html@@@1.2.1.24.3 Library Interface@@@Name Description Multicast DNS Functions TCPIP_MDNS_ServiceDeregister DNS Service Discovery function for end-user to deregister a service advertisement, which was previously registered with the...","GUID-10D2DC81-88D8-4ECF-96A0-7CF6C01FD388.html@@@1.2.4.6.3.36 TCPIP_IPV6_ArrayPutHelper Function@@@unsigned short TCPIP_IPV6_ArrayPutHelper( IPV6_PACKET * pkt, const void * dataSource, uint8_t dataType, unsigned short len ); This is a helper function for writing data to a packet...","GUID-10FF60D8-3CB1-45C2-A2ED-D638B2839331.html@@@1.2.2.1.3.37 NET_PRES_SocketDisconnect Function@@@bool NET_PRES_SocketDisconnect(NET_PRES_SKT_HANDLE_T handle); true - Indicates success false - Indicates failure This function calls the transport layer&apos;s disconnect function directly, if it exists. A...","GUID-11351408-A186-4464-B00D-D711D33FC0F5.html@@@1.2.3.2.3.9 TCPIP_UDP_DestinationPortSet Function@@@bool TCPIP_UDP_DestinationPortSet(UDP_SOCKET s, UDP_PORT remotePort); true - Indicates success false - Indicates an invalid socket This function sets the destination port, which allows changing the...","GUID-116454BB-4CFC-454C-8A9F-78F592665C35.html@@@1.2.1.9.3.5 DDNSClient Variable@@@DDNS_POINTERS DDNSClient; Global DDNS Configuration parameters...","GUID-12045D71-B016-41AD-A0FA-28ACF7850FC6.html@@@1.2.1.19.3.58 TCPIP_SNMPV3_TARGET_ENTRY_CONFIG Structure@@@typedef struct { const char * secname; STD_BASED_SNMP_SECURITY_MODEL mp_model; STD_BASED_SNMP_SECURITY_MODEL sec_model; STD_BASED_SNMPV3_SECURITY_LEVEL sec_level; } TCPIP_SNMPV3_TARGET_ENTRY_CONFIG...","GUID-12304D77-B2B9-43F2-A9F4-DE2D817C7943.html@@@2.1.10 MCC Code Generation@@@When all the required Harmony components are added to the project and configured, it is time to generate the source files. Click Generate button in Project Resources window on left pane. Verify the...","GUID-123BF979-9342-48FD-BAFA-65AF224C4EF5.html@@@1.2.1.19.3.48 TCPIP_SNMP_TRAPv1Notify Function@@@bool TCPIP_SNMP_TRAPv1Notify( SNMP_ID var, SNMP_VAL val, SNMP_INDEX index, SNMP_TRAP_IP_ADDRESS_TYPE eTrapMultiAddressType ); This function creates SNMP trap PDU and sends it to previously specified...","GUID-124DD3FE-D90D-4A58-88B0-1DC07D07E79E.html@@@1.2.1.10.3.13 TCPIP_FTPC_DATA_REP_TYPE Enumeration@@@typedef enum { TCPIP_FTPC_DATA_REP_ASCII, TCPIP_FTPC_DATA_REP_EBCDIC, TCPIP_FTPC_DATA_REP_IMAGE, TCPIP_FTPC_DATA_REP_UNSUPPORTED } TCPIP_FTPC_DATA_REP_TYPE; Enumeration: TCPIP_FTPC_DATA_REP_TYPE...","GUID-125F1A93-76CC-4BD7-BACA-01844FBD5F4F.html@@@Legal Notice@@@This publication and the information herein may be used only with Microchip products, including to design, test, and integrate Microchip products with your application. Use of this information in any...","GUID-1296ADD5-28BD-4482-A85F-B0DC62C24C9C.html@@@1.2.1.12.2.2 HTTP_FILE_TYPE Enumeration@@@typedef enum { HTTP_TXT = 0u, HTTP_HTM, HTTP_HTML, HTTP_CGI, HTTP_XML, HTTP_CSS, HTTP_GIF, HTTP_PNG, HTTP_JPG, HTTP_JS, HTTP_JAVA, HTTP_WAV, HTTP_UNKNOWN } HTTP_FILE_TYPE; File type definitions...","GUID-12A479F7-B8AD-42B6-8E62-D188E3688AB2.html@@@1.2.2.1.3.75 NET_PRES_TransReady Type@@@typedef uint16_t (* NET_PRES_TransReady)(uintptr_t transHandle); true - The presentation layer can read or write to the transport layer false - The transport layer is busy and cannot accept reads or...","GUID-12AFD1A8-67FB-418E-96BC-11417FD22D51.html@@@1.2.1.18 SMTPC Module@@@The SMTPC module in the TCP/IP Stack lets applications send e-mails to any recipient worldwide. These message could include status information or important alerts. Using the e-mail to SMS gateways...","GUID-12D00113-ED56-4D92-AEE9-3C4A304712BB.html@@@1.2.4.5.2 Internet Protocol (IP) Configurations@@@IPv4 Specific User Configurations Enable Console Commands: Enable the IPv4 TCP/IP Console Commands Default value: false Symbol: TCPIP_IPV4_COMMANDS_ENABLE, TCPIP_IPV4_COMMANDS Number of ARP Requests...","GUID-12D0A16F-A3EB-49E2-B710-8C30734C6275.html@@@1.2.1.13.3.54 TCPIP_HTTP_NET_SSIVariableSet Function@@@bool TCPIP_HTTP_NET_SSIVariableSet( const char* varName, TCPIP_HTTP_DYN_ARG_TYPE varType, const char* strValue, int32_t intValue ); This function sets the new values for an SSI variable. If a variable...","GUID-12FE1022-BB7D-4268-A36C-D30F79A6D5F5.html@@@1.2.4.6.3.10 IPV6_EVENT_HANDLER Type@@@typedef void (* IPV6_EVENT_HANDLER)(TCPIP_NET_HANDLE hNet, IPV6_EVENT_TYPE evType, const void* evParam, const void* usrParam); Type: IPV6_EVENT_HANDLER. Once an IPv6 event occurs, the IPv6 service...","GUID-1334BC43-35EF-48EF-877B-770E61118974.html@@@1.2.2.1.3.8 NET_PRES_EncProviderInit Type@@@typedef bool (* NET_PRES_EncProviderInit)(struct _NET_PRES_TransportObject * transObject); true - Initialization succeeded false - Initialization did not succeed Presentation Encryption Provider...","GUID-1339D3C8-2300-49CC-8764-D48BA075046E.html@@@1.2.5.2.33 TCPIP_MAC_PacketTx Function@@@TCPIP_MAC_RES TCPIP_MAC_PacketTx( DRV_HANDLE hMac, TCPIP_MAC_PACKET * ptrPacket ); This is the MAC transmit function. Using this function a packet is submitted to the MAC driver for transmission...","GUID-13542F9F-FB82-4857-A222-F39F35DA80C7.html@@@1.2.1.24.3.6 TCPIP_ZCLL_Disable Function@@@bool TCPIP_ZCLL_Disable( TCPIP_NET_HANDLE hNet ); This API is used by end-user application to disable zero configuration on a specific interface. The TCP/IP stack must be initialized before calling...","GUID-138CB8E2-7A8E-499D-96E0-207D64309281.html@@@1.2.1.2.3.47 IPPROTO_ICMPV6 Macro@@@#define IPPROTO_ICMPV6 58 // Indicates IPv6 ICMP Protocol Options Indicates IPv6 ICMP protocol options...","GUID-139944A2-E205-4723-B424-24F7E5319CBB.html@@@1.2.3.1.3.32 TCPIP_TCP_MODULE_CONFIG Structure@@@typedef struct { int nSockets; uint16_t sktTxBuffSize; uint16_t sktRxBuffSize; } TCPIP_TCP_MODULE_CONFIG; Structure: TCPIP_TCP_MODULE_CONFIG. This structure defines TCP module run-time...","GUID-142C96D7-5850-49D7-A472-A6476E209175.html@@@1.2.6.1.1.3.82 TCPIP_STACK_NetDown Function@@@bool TCPIP_STACK_NetDown( TCPIP_NET_HANDLE netH ); This function performs the deinitialization of a net interface. As part of this process, the corresponding MAC driver is deinitialized. The TCP/IP...","GUID-143522CF-551B-4BFF-82D6-83E3AD55F0B6.html@@@1.2.5.8.4.36 DRV_ETHPHY_Status@@@SYS_STATUS DRV_ETHPHY_Status(SYS_MODULE_OBJ object); SYS_STATUS_READY - Indicates that any previous module operation for the specified module has completed SYS_STATUS_BUSY - Indicates that a previous...","GUID-1455B1B0-4DD6-4D0C-979A-B59E5251D8FA.html@@@1.2.1.17.2.6 TCPIP_SMTP_MailSend Function@@@void TCPIP_SMTP_MailSend( TCPIP_SMTP_CLIENT_MESSAGE* smtpClientMessage ); This function starts the state machine that performs the actual transmission of the message. Call this function after all the...","GUID-14572904-72C8-4FEA-9C5C-55F4A7794723.html@@@1.2.1.13.3.37 TCPIP_HTTP_NET_ConnectionSocketGet Function@@@NET_PRES_SKT_HANDLE_T TCPIP_HTTP_NET_ConnectionSocketGet( TCPIP_HTTP_NET_CONN_HANDLE connHandle ); The function returns the network transport socket of the specified HTTP connection. The user gets...","GUID-1477C704-4A26-476C-8E70-7514FAF123F4.html@@@1.2.1.18.3 Library Interface@@@Name Description Macros SMTPC_CONFIG_H This is macro SMTPC_CONFIG_H . TCPIP_SMTPC_CLIENT_ADDR_BUFFER_SIZE size of a buffer that can hold an email address: user@domain.smth...","GUID-14875BD4-5F0C-41F8-A790-3B9A91786FF2.html@@@1.2.1.10.3.22 TCPIP_FTPC_Get_WorkingDir Function@@@TCPIP_FTPC_RETURN_TYPE TCPIP_FTPC_Get_WorkingDir(TCPIP_FTPC_CONN_HANDLE_TYPE ftpcHandle); TCPIP_FTPC_RET_OK - if successfully scheduled function TCPIP_FTPC_RET_BUSY - could not schedule function as...","GUID-1491B842-4921-4322-AB69-E29C7B1790C5.html@@@1.2.2.1.3.51 NET_PRES_SocketRead Function@@@uint16_t NET_PRES_SocketRead(NET_PRES_SKT_HANDLE_T handle, void * buffer, uint16_t size); The number of bytes read from the socket. If less than len, the RX FIFO buffer became empty or the socket is...","GUID-14BB0D8F-F47E-45B7-B70B-DA689313D9D7.html@@@1.2.1.4.3.8 TCPIP_DHCPS_LeaseEntryGet Function@@@TCPIP_DHCPS_LEASE_HANDLE TCPIP_DHCPS_LeaseEntryGet( TCPIP_NET_HANDLE netH, TCPIP_DHCPS_LEASE_ENTRY* pLeaseEntry, TCPIP_DHCPS_LEASE_HANDLE leaseHandle ); This function returns a lease entry for the...","GUID-14D7AEBA-1091-4B1E-B659-BC43A542CD7B.html@@@1.2.1.19.3.14 SNMP_VENDOR_SPECIFIC_TRAP_NOTIFICATION_TYPE Enumeration@@@typedef enum { VENDOR_TRAP_DEFAULT = 0x0, BUTTON_PUSH_EVENT = 0x1, POT_READING_MORE_512 = 0x2 } SNMP_VENDOR_SPECIFIC_TRAP_NOTIFICATION_TYPE; Enumeration: SNMP_VENDOR_SPECIFIC_TRAP_NOTIFICATION_TYPE...","GUID-1507EBE8-7AAB-4E0A-9216-593F2B134C6D.html@@@1.2.5.8.4.42 DRV_ETHPHY_VendorDataGet Function@@@DRV_ETHPHY_RESULT DRV_ETHPHY_VendorDataGet(DRV_HANDLE handle, uint32_t* pVendorData); DRV_ETHPHY_RES_OK - if the vendor data is stored at the pVendorData address DRV_ETHPHY_RES_HANDLE_ERR - handle...","GUID-1532C09B-053B-48E5-A98E-FE60E8210E2C.html@@@1.2.3.1.3.30 TCPIP_TCP_IsConnected Function@@@bool TCPIP_TCP_IsConnected( TCP_SOCKET hTCP ); This function determines if a socket has an established connection to a remote node. Call this function after calling...","GUID-15B2929A-D9FD-4BE9-B460-EACF37CB766A.html@@@1.2.1.21.3.10 TCPIP_TELNET_STATE Enumeration@@@typedef enum { TCPIP_TELNET_IDLE = 0, TCPIP_TELNET_GET_LOGIN, TCPIP_TELNET_GET_PASSWORD, TCPIP_TELNET_AUTHENTICATED, TCPIP_TELNET_CONNECTED } TCPIP_TELNET_STATE; Enumeration: TCPIP_TELNET_STATE...","GUID-15DCD471-0066-4EEA-A08A-E2CA14AD4045.html@@@1.2.1.2.3.37 INVALID_TCP_PORT Macro@@@#define INVALID_TCP_PORT (0L) //Invalid TCP port Invalid TCP port...","GUID-16262C6E-46B3-47F5-A6DB-23BC83862AAF.html@@@1.2.4.2.3.8 TCPIP_ICMP_EchoRequest Function@@@ICMP_ECHO_RESULT TCPIP_ICMP_EchoRequest( TCPIP_ICMP_ECHO_REQUEST* pEchoRequest, TCPIP_ICMP_REQUEST_HANDLE* pHandle ); This function allows a stack client to send an ICMP query message to a remote...","GUID-165BD4D4-0C5E-408B-952F-D187D37CBE98.html@@@1.2.1.21.1 Abstraction Model@@@Currently, the Telnet TCP/IP Library runs in the background as a server and does not expose any API functions. It serves incoming connections by sending the received data string to the command...","GUID-167AA3C2-FBDF-4BC6-9FA1-9AA9391A3B77.html@@@1.2.1.18.3.6 TCPIP_SMTPC_MAIL_FLAGS Enumeration@@@typedef enum { TCPIP_SMTPC_MAIL_FLAG_USE_IPV6 = 0x0001, TCPIP_SMTPC_MAIL_FLAG_BODY_TYPE_BINARY = 0x0002, TCPIP_SMTPC_MAIL_FLAG_BODY_ENCODE_ASCII = 0x0004, TCPIP_SMTPC_MAIL_FLAG_CONNECT_TLS = 0x0010...","GUID-16B4A259-34BD-456B-86B8-5CAE110FAB01.html@@@1.2.1.10.1 Abstraction Model@@@How The Library Works Files are transferred via the data connection. The control connection is used for the transfer of commands and the replies to these commands. Several commands are concerned with...","GUID-16E9830E-54F2-4688-B1E4-9B92F761DC5E.html@@@1.2.2.1.3.3 NET_PRES_CertStoreGetServerCert Function@@@bool NET_PRES_CertStoreGetServerCert(const uint8_t ** serverCertPtr, int32_t * serverCertSize, const uint8_t ** serverKeyPtr, int32_t * serverKeySize, uint8_t certIndex); true - Indicates success...","GUID-16F5A03B-47F0-4952-A3F9-305ED76E2118.html@@@1.2.1.11.2.1 TCPIP_FTP_MODULE_CONFIG Structure@@@typedef struct { uint16_t cmdPort; uint16_t dataPort; uint16_t nConnections; uint16_t dataSktTxBuffSize; uint16_t dataSktRxBuffSize; const char* mountPath; char * userName; char * password; }...","GUID-16F762D1-2759-4C6F-A805-980CD344C1FC.html@@@1.2.5.8.4.24 DRV_ETHPHY_OBJECT Structure@@@typedef struct { DRV_ETHPHY_VENDOR_MII_CONFIGURE miiConfigure; DRV_ETHPHY_VENDOR_MDIX_CONFIGURE mdixConfigure; DRV_ETHPHY_VENDOR_SMI_CLOCK_GET smiClockGet; DRV_ETHPHY_VENDOR_WOL_CONFIGURE...","GUID-1755D520-0F8D-474E-A3C8-F3C962CBE635.html@@@1.2.5.7.3.5 DRV_ETHMAC_PIC32MACEventAcknowledge Function@@@bool DRV_ETHMAC_PIC32MACEventAcknowledge(DRV_HANDLE hMac, TCPIP_MAC_EVENT tcpAckEv); true if events acknowledged false if no events to be acknowledged This function acknowledges and re-enables...","GUID-179D1BD0-148E-43B1-BCC7-D1C0357A3EBA.html@@@1.2.1.24.2 Zero Configuration Link Local (ZCLL) Configurations@@@ZCLL Specific User Configurations MDNS/Bonjour Specific User Configurations ZCLL Task Rate (in msec): ZCLL task processing rate, in milliseconds. The ZCLL module will process a timer event with this...","GUID-17EAEBB4-16A8-46C6-9DA2-41774C5023FC.html@@@1.2.3.1.3.16 TCPIP_TCP_ClientOpen Function@@@TCP_SOCKET TCPIP_TCP_ClientOpen( IP_ADDRESS_TYPE addType, TCP_PORT remotePort, IP_MULTI_ADDRESS* remoteAddress ); Provides a unified method for opening TCP client sockets. Sockets are created at the...","GUID-17ECBC22-66EA-4544-B1EB-4ADD77C15F73.html@@@1.2.5.2.55 TCPIP_MAC_SYNCH_REQUEST Enumeration@@@typedef enum { TCPIP_MAC_SYNCH_REQUEST_NONE = 0, TCPIP_MAC_SYNCH_REQUEST_OBJ_CREATE, TCPIP_MAC_SYNCH_REQUEST_OBJ_DELETE, TCPIP_MAC_SYNCH_REQUEST_OBJ_LOCK, TCPIP_MAC_SYNCH_REQUEST_OBJ_UNLOCK...","GUID-18086776-3675-461A-8E20-1C1824C48A90.html@@@1.2.3.1.3.15 TCPIP_TCP_Bind Function@@@bool TCPIP_TCP_Bind( TCP_SOCKET hTCP, IP_ADDRESS_TYPE addType, TCP_PORT localPort, IP_MULTI_ADDRESS* localAddress ); This function is meant for unconnected server and client sockets. It is similar to...","GUID-181D54DB-9EBE-4C42-9E49-B77B4A15D186.html@@@2.1.13 Testing the Application@@@The functions of TCP/IP Client are tested using console commands. The console is the virtual COM port enumerated when a micro-USB cable connected to the DEBUG USB port on SAM E70 Xplained Ultra board...","GUID-183098A3-E597-4781-A793-F1E8F6BDE55C.html@@@1.2.5.6.3.8 MAC_DRVR_PacketTx Function@@@TCPIP_MAC_RES MAC_DRVR_PacketTx(DRV_HANDLE hMac, TCPIP_MAC_PACKET * ptrPacket); TCPIP_MAC_RES_OK if success a TCPIP_MAC_RES error value if failed This is the MAC transmit function. Using this function...","GUID-18319F8A-E30C-4BD0-B85B-F66B70C1EB51.html@@@1.2.6.1.1.3.8 TCPIP_Helper_htonl Function@@@TCPIP_Helper_htonl( uint32_t hLong ); This is function TCPIP_Helper_htonl...","GUID-183424BF-E237-4B6B-8D3D-E556A2B28AC4.html@@@1.2.1.10.2 FTP Client Configurations@@@FTP Client Specific User Configurations Maximum number of simultaneous client: Specify the maximum number of supported simultaneous FTP client connections. Default value: 3 Symbol Maximum number of...","GUID-1884C1BD-2859-4F9B-8930-2563FC2D5806.html@@@1.2.1.22.3.1 __TFTPC_H Macro@@@#define __TFTPC_H This is macro __TFTPC_H...","GUID-188B85D5-4D34-431D-952F-DEB7B8E5C7FA.html@@@1.2.1.15.3.2 TCPIP_NBNS_Task Function@@@void TCPIP_NBNS_Task(); This function performs NBNS module tasks in the TCP/IP stack. The NBNS module shoul have been initialized. None. None...","GUID-1892D05F-4E46-4A63-8D3F-37FD6BFF051E.html@@@1.2.1.11.2.3 TCPIP_FTPS_TASK_TICK_RATE Macro@@@#define TCPIP_FTPS_TASK_TICK_RATE 33 The FTP server task rate, in milliseconds. The default value is 33 milliseconds. The lower the rate (higher the frequency) the higher the FTP server priority and...","GUID-1898B92C-FB85-462A-A0E7-17213981E7E5.html@@@1.2.6.1.1.3.52 TCPIP_STACK_HEAP_POOL_CONFIG Structure@@@typedef struct { TCPIP_STACK_HEAP_TYPE heapType; TCPIP_STACK_HEAP_FLAGS heapFlags; TCPIP_STACK_HEAP_USAGE heapUsage; void* (* malloc_fnc)(size_t bytes); void* (* calloc_fnc)(size_t nElems, size_t...","GUID-18A082A5-9260-4B1B-8364-967857B88A37.html@@@1.2.3.2.3.50 TCPIP_UDP_TxPutIsReady Function@@@uint16_t TCPIP_UDP_TxPutIsReady(UDP_SOCKET hUDP, unsigned short count); The number of bytes that can be written to this socket. This function returns the number of bytes that can be written to the...","GUID-18AFB3BA-C9CD-4F3A-ADCA-2B80AFE88533.html@@@1.2.1.7.3.15 TCPIP_DNS_CLIENT_USER_NOTIFICATION Macro@@@#define TCPIP_DNS_CLIENT_USER_NOTIFICATION false Allow DNS client user notification if enabled, the TCPIP_DNS_HandlerRegister/TCPIP_DNS_HandlerDeRegister functions exist and can be used...","GUID-18EE021F-87DD-4DF8-B023-2346755E0BBE.html@@@1.2.1.2.3.17 EAI_FAMILY Macro@@@#define EAI_FAMILY -6 /* `ai_family&apos; not supported. */ &apos;ai_family&apos; no supported...","GUID-1918E767-2F03-49ED-9BF7-29333064426C.html@@@1.2.5.9.3.20 DRV_MIIM_OPERATION_HANDLE Type@@@typedef const void* DRV_MIIM_OPERATION_HANDLE; Type: DRV_MIIM_OPERATION_HANDLE A handle that identifies an operation started by a client. This handle can be used by the client to query the operation...","GUID-192B7F3D-20C7-485D-874D-0407D3628458.html@@@1.2.6.1.1.3.101 TCPIP_STACK_PacketHandlerRegister Function@@@TCPIP_STACK_PROCESS_HANDLE TCPIP_STACK_PacketHandlerRegister( TCPIP_NET_HANDLE hNet, TCPIP_STACK_PACKET_HANDLER pktHandler, const void* handlerParam ); This function registers a new packet processing...","GUID-19673432-24DA-469F-AE16-91B60B020DD0.html@@@1.2.3.1.3.17 TCPIP_TCP_Close Function@@@bool TCPIP_TCP_Close( TCP_SOCKET hTCP ); Graceful Option Set: If the graceful option is set for the socket (default), a TCPIP_TCP_Disconnect will be tried. If the linger option is set (default) the...","GUID-19749A72-2807-4F85-8A5E-7233683ADF4E.html@@@1.2.1.6.3.15 TCPIP_DHCPV6_IaInfoGet Function@@@bool TCPIP_DHCPV6_IaInfoGet( TCPIP_NET_HANDLE hNet, int iaIx, TCPIP_DHCPV6_IA_INFO* pIaInfo ); IA status reporting...","GUID-1980D629-290B-40FF-9F0B-53EFB5590951.html@@@1.2.5.2.47 TCPIP_MAC_RES Enumeration@@@typedef enum { TCPIP_MAC_RES_OK = 0, TCPIP_MAC_RES_PENDING = 1, TCPIP_MAC_RES_TYPE_ERR = -1, TCPIP_MAC_RES_IS_BUSY = -2, TCPIP_MAC_RES_INIT_FAIL = -3, TCPIP_MAC_RES_PHY_INIT_FAIL = -4...","GUID-19CA1625-9912-4247-BC29-1346DB85056C.html@@@1.2.1.13.3.12 TCPIP_HTTP_NET_ConnectionByteCountSet Function@@@void TCPIP_HTTP_NET_ConnectionByteCountSet( TCPIP_HTTP_NET_CONN_HANDLE connHandle, uint32_t byteCount ); This function sets the current value of the counter showing the number of bytes available to be...","GUID-19FF5031-AB25-40D0-B80A-A5FBBCD53284.html@@@1.2.5.8.4.44 DRV_ETHPHY_VendorSMIReadResultGet Function@@@DRV_ETHPHY_RESULT DRV_ETHPHY_VendorSMIReadResultGet(DRV_HANDLE handle, uint16_t* pSmiRes); DRV_ETHPHY_RES_OK - transaction complete and result deposited at pSmiRes. DRV_ETHPHY_RES_PENDING - if the...","GUID-1A2A6D25-8F46-4DCB-806C-18384140A6BC.html@@@1.2.5.5.3.18 DRV_GMAC_RxFilterHashTableEntrySet Function@@@TCPIP_MAC_RES DRV_GMAC_RxFilterHashTableEntrySet(DRV_HANDLE hMac, const TCPIP_MAC_ADDR* DestMACAddr); TCPIP_MAC_RES_OK if success a TCPIP_MAC_RES error value if failed This function sets the MAC hash...","GUID-1A4F0B14-A85A-4C9F-AC0A-D688F09C7E86.html@@@1.2.6.1.1.3.10 TCPIP_Helper_htons Function@@@TCPIP_Helper_htons( uint16_t hShort ); This is function TCPIP_Helper_htons...","GUID-1ABC7F69-88BA-4F38-9006-04D20631CAC1.html@@@1.2.1.12.2.18 TCPIP_HTTP_CurrentConnectionHasArgsGet Function@@@uint8_t TCPIP_HTTP_CurrentConnectionHasArgsGet( HTTP_CONN_HANDLE connHandle ); The function will get the value of the &quot;cookies or get arguments&quot; that are present. None. Parameters Description...","GUID-1ACCD0A5-886F-4EDC-AA64-CE28D24B1B05.html@@@1.2.4.5.3.8 TCPIP_IPV4_MacPacketTransmit Function@@@bool TCPIP_IPV4_MacPacketTransmit( TCPIP_MAC_PACKET* pPkt, TCPIP_NET_HANDLE hNet, IPV4_ADDR* pDestAddress ); The function is a helper to transmit a fully constructed MAC packet over an interface. The...","GUID-1B22C37F-DAF3-4601-A589-6092A2778448.html@@@1.2.1.10 FTP Client Module@@@The File Transfer Protocol (FTP) Client module will allow your application to upload the files to, and download the files from, any FTP server. This protocol enables transfer of data reliably and...","GUID-1B433A94-8264-4250-B59C-CA1CBCDA1A29.html@@@1.2.5.2.25 TCPIP_MAC_MODULE_CTRL Structure@@@typedef struct { TCPIP_MAC_HEAP_MallocF mallocF; TCPIP_MAC_HEAP_CallocF callocF; TCPIP_MAC_HEAP_FreeF freeF; TCPIP_MAC_HEAP_HANDLE memH; TCPIP_MAC_PKT_AllocF pktAllocF; TCPIP_MAC_PKT_FreeF pktFreeF...","GUID-1BD5A6AB-D264-41FF-9F78-D9677F7A4586.html@@@1.2.5.10.3.16 PPP_EventHandlerDeregister Function@@@bool PPP_EventHandlerDeregister(DRV_HANDLE hMac, PPP_EVENT_HANDLE hPPP); true - if the call succeeds false - if no such handler is registered This function deregisters the PPP event handler. This API...","GUID-1BD642EC-B24E-4589-9473-BF0EB35C1FCC.html@@@1.2.5.2.48 TCPIP_MAC_RX_FILTER_TYPE Enumeration@@@typedef enum { TCPIP_MAC_RX_FILTER_TYPE_BCAST_ACCEPT, TCPIP_MAC_RX_FILTER_TYPE_MCAST_ACCEPT, TCPIP_MAC_RX_FILTER_TYPE_UCAST_ACCEPT, TCPIP_MAC_RX_FILTER_TYPE_UCAST_OTHER_ACCEPT...","GUID-1BF25707-B518-4BD3-8F5A-69B0EBB387D1.html@@@1.2.1.2.3.80 SO_SNDLOWAT Macro@@@#define SO_SNDLOWAT 19 //Send Low Water mark - Not yet supported Send low water mark. Not yet supported...","GUID-1C6C58A7-003E-4C91-8385-E762D4CA7F79.html@@@1.2.5.2.63 TCPIP_MODULE_MAC_PIC32INT_CONFIG Structure@@@typedef struct { uint16_t nTxDescriptors; uint16_t rxBuffSize; uint16_t nRxDescriptors; uint16_t nRxDedicatedBuffers; uint16_t nRxInitBuffers; uint16_t rxLowThreshold; uint16_t rxLowFill; uint16_t...","GUID-1C75AA10-811B-4F46-A428-19F9A50F4F57.html@@@1.2.4.2.3.7 TCPIP_ICMP_ECHO_REQUEST_RESULT Enumeration@@@typedef enum { TCPIP_ICMP_ECHO_REQUEST_RES_OK = 0, TCPIP_ICMP_ECHO_REQUEST_RES_TMO = -1 } TCPIP_ICMP_ECHO_REQUEST_RESULT; A result code for an echo request callback (as a result of an ICMP...","GUID-1CBBD46A-55BE-423A-A8DC-153D7CD6830F.html@@@1.2.5.3.3.10 DRV_ENC28J60_INSTANCES_NUMBER Macro@@@#define DRV_ENC28J60_INSTANCES_NUMBER 1 enc28j60 hardware instance configuration This definition selects the maximum number of hardware instances that can be supported by the dynamic driver. Mandatory...","GUID-1CC08285-019B-4577-BF6C-E21D481B41FD.html@@@1.2.1.2.3.26 gethostbyname Function@@@struct hostent * gethostbyname( char * name ); None. Parameters Description name The name of the host to be found. The hostent structure if function is successful. NULL if there is an error. This...","GUID-1D3B4DCB-0432-4236-B2AC-C0505B174FFF.html@@@1.2.5.3.3.20 DRV_ENC28J60_Reinitialize Function@@@void DRV_ENC28J60_Reinitialize(SYS_MODULE_OBJ object, const SYS_MODULE_INIT * const init); None ENC28J60 Reinitialization This function will deinitialize and initialize the driver instance. As with...","GUID-1D3D9E04-C631-448B-B130-B17523874376.html@@@1.2.1.12.2.4 HTTP_MODULE_FLAGS Enumeration@@@typedef enum { HTTP_MODULE_FLAG_DEFAULT = 0x00, HTTP_MODULE_FLAG_ADJUST_SKT_FIFOS = 0x01, HTTP_MODULE_FLAG_NO_DELAY = 0x02 } HTTP_MODULE_FLAGS; HTTP module configuration flags. Multiple flags can be...","GUID-1D426D0A-D57A-499D-A7B0-7950B1FF306F.html@@@1.2.4.6.3.18 IPV6_NO_UPPER_LAYER_CHECKSUM Macro@@@#define IPV6_NO_UPPER_LAYER_CHECKSUM (0xFFFFu) // Value flag for no upper layer checksum Value flag for no upper layer checksum...","GUID-1D82343A-EDA2-4CC2-846D-B3C993D55731.html@@@2.1.1 Software Prerequisites@@@The instructions in this tutorial assume that you have already installed the following software. MPLAB\u00AE X Integrated Development Environment MPLAB\u00AE XC32/32++ C Compiler MPLAB\u00AE Code Configurator MPLAB\u00AE...","GUID-1D86B51A-D2EA-46F5-84F2-AB8F8CE4AE87.html@@@1.2.1.18.3.3 TCPIP_SMTPC_ATTACH_FILE Structure@@@typedef struct { TCPIP_SMTPC_ATTACH_TYPE attachType; TCPIP_SMTPC_ENCODE_TYPE attachEncode; const char* fileName; } TCPIP_SMTPC_ATTACH_FILE; Structure: TCPIP_SMTPC_ATTACH_FILE. This data structure...","GUID-1DA4FBE1-3D49-4BF9-BD6C-6B5963C0745A.html@@@1.2.1.16 Reboot Module@@@The Reboot module will allow a user to remotely reboot the MCHP device that is running the TCP/IP stack. This feature is primarily used for bootloader applications, which must reset the device to...","GUID-1E150278-093E-400D-9828-68D108F78FB8.html@@@1.2.5.2.54 TCPIP_MAC_Status Function@@@SYS_STATUS TCPIP_MAC_Status( SYS_MODULE_OBJ object ); This function provides the current status of the MAC driver module. The TCPIP_MAC_Initialize() function must have been called before calling this...","GUID-1E38C9BF-E9B6-40A5-A8B6-1D522B9C6A81.html@@@1.2.4.6.3.27 IPV6_TLV_PAD_N Macro@@@#define IPV6_TLV_PAD_N 1u IPv6 Type-length-value type code for the Pad N option...","GUID-1E4CCA85-AF3B-43B7-9161-D6243C918736.html@@@1.2.4.6.3.45 TCPIP_IPV6_HandlerRegister Function@@@IPV6_HANDLE TCPIP_IPV6_HandlerRegister( TCPIP_NET_HANDLE hNet, IPV6_EVENT_HANDLER handler, const void* hParam ); This function is used to register a notification handler with the IPv6 module. The IPv6...","GUID-1E5FB57F-5ACC-4FAC-8A9E-C8D6387A91FD.html@@@1.2.5.6.3.9 MAC_DRVR_EventMaskSet Function@@@bool MAC_DRVR_EventMaskSet( DRV_HANDLE hMac, TCPIP_MAC_EVENT macEvents, bool enable ); Always true, operation succeeded. This is a function that enables or disables the events to be reported to the...","GUID-1E64BC34-AD66-494E-B1DD-CB0B4715145A.html@@@1.2.1.4.3.7 TCPIP_DHCPS_LEASE_HANDLE Type@@@typedef const void* TCPIP_DHCPS_LEASE_HANDLE; Type: TCPIP_DHCPS_LEASE_HANDLE. A handle that server is using to provide the index of a lease entry. This handle is used by command handler to get the...","GUID-1E6ACF42-8F3E-4A77-9989-9771A1236357.html@@@1.2.3.2.3.49 TCPIP_UDP_TxOffsetSet Function@@@bool TCPIP_UDP_TxOffsetSet(UDP_SOCKET hUDP, uint16_t wOffset, bool relative); true - if the offset was valid and the write pointer has been moved false - if the offset was not valid This function...","GUID-1E9FBEFE-AB48-4348-A53B-035ACA2FCA79.html@@@1.2.2.1.3.47 NET_PRES_SocketOpen Function@@@NET_PRES_SKT_HANDLE_T NET_PRES_SocketOpen(NET_PRES_INDEX index, NET_PRES_SKT_T socketType, NET_PRES_SKT_ADDR_T addrType, NET_PRES_SKT_PORT_T port, NET_PRES_ADDRESS * addr, NET_PRES_SKT_ERROR_T*...","GUID-1EE89A71-63B4-4674-B669-A8726597917D.html@@@1.2.2.1.3.16 NET_PRES_EncProviderWrite Type@@@typedef int32_t (* NET_PRES_EncProviderWrite)(void * providerData, const uint8_t * buffer, uint16_t size); The number of bytes transferred. Presentation Encryption Provider Write Function Pointer...","GUID-1EFF8A7F-F61B-483C-922D-A90479736453.html@@@1.2.4.6.3.11 IPV6_EVENT_TYPE Enumeration@@@typedef enum { IPV6_EVENT_ADDRESS_ADDED = 1, IPV6_EVENT_ADDRESS_REMOVED, IPV6_EVENT_ULA_ADDRESS_GENERATED, IPV6_EVENT_ULA_ADDRESS_FAILED } IPV6_EVENT_TYPE; Enumeration: IPV6_EVENT_TYPE. These events...","GUID-1F0A9F83-78A5-4F0F-A957-379861E2AEFA.html@@@1.2.4.6.3.3 IPV6_ADDRESS_PREFERENCE Enumeration@@@typedef enum { IPV6_PREFER_PUBLIC_ADDRESSES = 0, IPV6_PREFER_TEMPORARY_ADDRESSES } IPV6_ADDRESS_PREFERENCE; Enumeration: IPV6_ADDRESS_PREFERENCE. None. None...","GUID-1F44223B-4338-4643-8820-4E67D79BB857.html@@@1.2.1.2.3.65 recvfrom Function@@@int recvfrom( SOCKET s, char* buf, int len, int flags, struct sockaddr* from, int* fromlen ); The revfrom() function is used to receive incoming data that has been queued for a socket. This function...","GUID-1FA5838C-581F-4339-9DC4-12A37FBEA43F.html@@@1.2.5.10.3.5 PPP_REQUEST_HANDLE Type@@@typedef const void* PPP_REQUEST_HANDLE; A handle that a client can use after the event handler has been registered...","GUID-1FCEF5D4-22F5-414B-BF0F-E07E8A6122CF.html@@@1.2.4.6.3.41 TCPIP_IPV6_DestAddressSet Function@@@void TCPIP_IPV6_DestAddressSet( IPV6_PACKET * p, const IPV6_ADDR * addr ); This API is used to configure the destination address for an IPv6 packet. TCPIP_IPV6_Initialize() should be called...","GUID-201304B8-6206-4A91-AEBA-CF217ED66D36.html@@@1.2.1.18.3.16 TCPIP_SMTPC_MessageQuery Function@@@TCPIP_SMTPC_MESSAGE_RESULT TCPIP_SMTPC_MessageQuery( TCPIP_SMTPC_MESSAGE_HANDLE messageHandle, TCPIP_SMTPC_MESSAGE_QUERY* pQuery ); This function allows the query of a mail message at run time. SMTPC...","GUID-201C1000-E273-4BB9-BFD9-446B81D266C7.html@@@1.2.1.13.3.50 TCPIP_HTTP_NET_READ_STATUS Enumeration@@@typedef enum { TCPIP_HTTP_NET_READ_OK = 0, TCPIP_HTTP_NET_READ_TRUNCATED, TCPIP_HTTP_NET_READ_INCOMPLETE } TCPIP_HTTP_NET_READ_STATUS; Result states for TCPIP_HTTP_NET_ConnectionPostNameRead...","GUID-204D92AD-4B7A-4F86-ACC7-D685A54835DB.html@@@1.2.1.13.3.10 TCPIP_HTTP_NET_ConnectionByteCountDec Function@@@void TCPIP_HTTP_NET_ConnectionByteCountDec( TCPIP_HTTP_NET_CONN_HANDLE connHandle, uint32_t byteCount ); This function decrements the current value of the counter showing the number of bytes available...","GUID-20567716-31DC-461C-B196-A643797C90DB.html@@@1.2.2.1.3.10 NET_PRES_EncProviderMaxOutputSize Type@@@typedef int32_t (* NET_PRES_EncProviderMaxOutputSize)(void * providerData); Upon success, the maximum output size will be returned. Upon error, 0 is returned: invalid function argument if the SSL/TLS...","GUID-2064EE48-95D8-4992-996D-4279F6E5C32F.html@@@1.2.1.8.3.9 TCPIP_DNSS_Enable Function@@@bool TCPIP_DNSS_Enable( TCPIP_NET_HANDLE hNet ); This function enables the DNS Server for the specified interface, if it is disabled. If it is already enabled, nothing is done. The DNS server must be...","GUID-2071F4F5-5A43-4A5B-9843-0175A50C48F8.html@@@1.2.5.5.1 Abstraction Model@@@The Ethernet Controller provides the modules needed to implement a 10/100 Mbps Ethernet node using an external Ethernet PHY chip. The PHY chip provides a digital-analog interface as part of the...","GUID-20C3F443-5880-4DC7-BC60-D32CC338D577.html@@@1.2.1.7.3.19 TCPIP_DNS_Enable Function@@@bool TCPIP_DNS_Enable( TCPIP_NET_HANDLE hNet, TCPIP_DNS_ENABLE_FLAGS flags ); This function enables the DNS Client name resolution for the specified interface. The additional flags give better control...","GUID-21001124-9CE0-4D32-B195-ED3B69AEF28A.html@@@1.2.1.4.3.5 TCPIP_DHCPS_IsEnabled Function@@@bool TCPIP_DHCPS_IsEnabled( TCPIP_NET_HANDLE hNet ); This function returns the current state of the DHCP Server on the specified interface. The DHCP server module should have been initialized...","GUID-21013906-295C-497D-8ADA-FA529C958C51.html@@@1.2.1.10.3.29 TCPIP_FTPC_MODULE_CONFIG_TYPE Structure@@@typedef struct { int nMaxClients; uint32_t ftpcTmo; uint16_t data_tx_buffsize_dflt; uint16_t data_rx_buffsize_dflt; } TCPIP_FTPC_MODULE_CONFIG_TYPE; Members Description int nMaxClients; maximum number...","GUID-210A7C6E-CF7A-4B06-893A-0CD7C74B8DE2.html@@@1.2.5.10.3.19 PPP_StatHandlerDeregister Function@@@bool PPP_StatHandlerDeregister(DRV_HANDLE hMac, PPP_STAT_HANDLE hPPP); true - if the call succeeds false - if no such handler is registered This function deregisters the PPP statistics handler. This...","GUID-215936A1-6B64-4BE0-A869-C855B77F456E.html@@@1.2.1.3.3.3 TCPIP_DHCP_EVENT_HANDLER Type@@@typedef void (* TCPIP_DHCP_EVENT_HANDLER)(TCPIP_NET_HANDLE hNet, TCPIP_DHCP_EVENT_TYPE evType, const void* param); Type: TCPIP_DHCP_EVENT_HANDLER. Prototype of a DHCP event handler. Clients can...","GUID-21750586-F9F2-4E33-87FB-8F2994BF4744.html@@@Trademarks@@@The Microchip name and logo, the Microchip logo, Adaptec, AVR, AVR logo, AVR Freaks, BesTime, BitCloud, CryptoMemory, CryptoRF, dsPIC, flexPWR, HELDO, IGLOO, JukeBlox, KeeLoq, Kleer, LANCheck, LinkMD...","GUID-21A8F8C9-91C3-45AE-B61D-F1BD242CC08D.html@@@1.2.1.12.2.35 TCPIP_HTTP_CurrentConnectionUserDataGet Function@@@const void* TCPIP_HTTP_CurrentConnectionUserDataGet( HTTP_CONN_HANDLE connHandle ); This function returns the user data value for the current HTTP connection. This data belongs to the user and is not...","GUID-21CF9F9F-F67F-4388-94AE-D77E1D631214.html@@@1.2.4.5.3.26 TCPIP_IPV4_PacketTransmit Function@@@bool TCPIP_IPV4_PacketTransmit( IPV4_PACKET* pPkt ); The IPv4 packet is sent to the MAC for transmission. pPkt should have been properly formatted with TCPIP_IPV4_PacketFormatTx(). The packet...","GUID-2213BD36-E72F-4059-A024-CEAC0ECF1375.html@@@1.2.4.6.1 Abstraction Model@@@This module provides software abstraction of the IP module existent in any TCP/IP Stack implementation. It provide raw datagram service to other modules in the stack...","GUID-22734096-CC4D-4780-B175-EB65DBE280A6.html@@@1.2.1.2.3.10 Berkeley_MODULE_CONFIG Structure@@@typedef struct { uint8_t maxSockets; } BERKELEY_MODULE_CONFIG; Berkeley API module configuration structure. Members Description maxSockets Maximum number of sockets supported...","GUID-227A05EB-3744-4516-8DAD-E3BCC78691B5.html@@@1.2.6.1.1.3.86 TCPIP_STACK_NetIPv6AddressGet Function@@@IPV6_ADDR_HANDLE TCPIP_STACK_NetIPv6AddressGet( TCPIP_NET_HANDLE netH, IPV6_ADDR_TYPE addType, IPV6_ADDR_STRUCT* pAddStruct, IPV6_ADDR_HANDLE addHandle ); This function allows the listing of the IPv6...","GUID-228CD50D-67DE-41BE-BD4D-D877D5667C9C.html@@@1.2.1.21.3.11 TCPIP_TELNET_Task Function@@@void TCPIP_TELNET_Task(); This function performs Telnet module tasks in the TCP/IP stack. The Telnet module should have been initialized. None. None...","GUID-229F2A7B-50AF-4F9F-AD23-47824A8B773B.html@@@1.2.4.6.3.21 IPV6_RX_FRAGMENT_BUFFER Structure@@@typedef struct _IPV6_RX_FRAGMENT_BUFFER { struct _IPV6_RX_FRAGMENT_BUFFER * next; uint8_t * ptrPacket; uint32_t identification; uint16_t bytesInPacket; uint16_t packetSize; uint16_t...","GUID-22EEE12A-8095-4263-A16B-6EB1BE211BFC.html@@@1.2.1.13.3.3 TCPIP_HTTP_DYN_ARG_TYPE Enumeration@@@typedef enum { TCPIP_HTTP_DYN_ARG_TYPE_INVALID = 0, TCPIP_HTTP_DYN_ARG_TYPE_INT32, TCPIP_HTTP_DYN_ARG_TYPE_STRING } TCPIP_HTTP_DYN_ARG_TYPE; Enumeration: TCPIP_HTTP_DYN_ARG_TYPE This enumeration...","GUID-232CB98E-5626-48E1-9036-6C695B6E23F1.html@@@1.2.5.8.4.28 DRV_ETHPHY_PhyAddressGet Function@@@DRV_ETHPHY_RESULT DRV_ETHPHY_PhyAddressGet(DRV_HANDLE handle, DRV_ETHPHY_INTERFACE_INDEX portIndex, int* pPhyAddress); DRV_ETHPHY_RES_OK - operation successful and the PHY address stored at...","GUID-234477DB-5BB9-4A5D-8765-9B295575F9D8.html@@@1.2.6.1.1.3.87 TCPIP_STACK_NetIsLinked Function@@@bool TCPIP_STACK_NetIsLinked( TCPIP_NET_HANDLE hNet ); This function returns the network interface link status. The TCP/IP stack should have been initialized by TCPIP_STACK_Initialize() and the...","GUID-234EC358-0CE1-43BF-BA84-993715DE198D.html@@@1.2.4.1.3.3 TCPIP_ARP_ENTRY_QUERY Structure@@@typedef struct { TCPIP_ARP_ENTRY_TYPE entryType; IPV4_ADDR entryIpAdd; TCPIP_MAC_ADDR entryHwAdd; } TCPIP_ARP_ENTRY_QUERY; Structure: TCPIP_ARP_ENTRY_QUERY. Data structure for an ARP query. Members...","GUID-23D21B7F-0C49-4545-967B-8B5C733E6130.html@@@1.2.3.1.3.28 TCPIP_TCP_Get Function@@@uint16_t TCPIP_TCP_Get( TCP_SOCKET hTCP, uint8_t* byte ); This function retrieves a single byte to a TCP socket. TCP socket should have been opened with TCPIP_TCP_ServerOpen()/TCPIP_TCP_ClientOpen()...","GUID-240EA42B-16F1-4F79-B8D1-BDF5EA8C39D4.html@@@1.2.1.10.3.28 TCPIP_FTPC_MAX_NUM_CLIENT Macro@@@#define TCPIP_FTPC_MAX_NUM_CLIENT (3) Specify the maximum number of supported simultaneous FTP client connections...","GUID-240F79CF-4468-4AB3-9D4E-E23C2E281EBC.html@@@1.2.5.2.10 TCPIP_MAC_EventF Type@@@typedef void (* TCPIP_MAC_EventF)(TCPIP_MAC_EVENT event, const void* eventParam); Event notification Function: typedef void (*TCPIP_MAC_EventF)(TCPIP_MAC_EVENT event, const void* eventParam); This...","GUID-241A3E46-D4D6-4380-A754-1FFAE8BF89D5.html@@@1.2.1.13.3.30 TCPIP_HTTP_NET_ConnectionPostReadPair Macro@@@#define TCPIP_HTTP_NET_ConnectionPostReadPair(connHandle, cData, wLen) \\ TCPIP_HTTP_NET_ConnectionPostValueRead(connHandle, cData, wLen) Reads a name and value pair from a URL encoded string in the...","GUID-243E1FD7-D220-4F22-A76F-1C6467C973BF.html@@@1.2.1.19.3.46 TCPIP_SNMP_TrapTimeGet Function@@@uint32_t TCPIP_SNMP_TrapTimeGet(); This function returns a uint32_t time(snmpTrapTimer) which is used to time out a SNMP TRAP notification for a HOST. snmpTrapTimer is initialized when there is UDP...","GUID-2446C06E-6837-4E6C-8C7B-F62C758D480E.html@@@1.2.1.12.2.39 TCPIP_HTTP_GetExecute Function@@@HTTP_IO_RESULT TCPIP_HTTP_GetExecute( HTTP_CONN_HANDLE connHandle ); This function is implemented by the application developer. Its purpose is to parse the data received from URL parameters (GET...","GUID-2486F77B-B4BA-45A3-8294-C85F434ACF2E.html@@@1.2.1.2.3.50 IPPROTO_TCP Macro@@@#define IPPROTO_TCP 6 // Indicates TCP level options Indicates TCP level options...","GUID-24C32539-9847-4830-B5FF-D2D02A6C052A.html@@@1.2.4.5.3.23 TCPIP_IPV4_PacketOptionFieldSet Function@@@IPV4_OPTION_FIELD* TCPIP_IPV4_PacketOptionFieldSet( IPV4_PACKET* pPkt, uint16_t optionLen, bool firstOption ); This function is a helper to allow setting a specific option into an IPv4 packet that...","GUID-24D38A62-4632-4530-8DFA-B39ADBEC5A3D.html@@@1.2.3.2.3.5 TCPIP_UDP_ClientOpen Function@@@UDP_SOCKET TCPIP_UDP_ClientOpen(IP_ADDRESS_TYPE addType, UDP_PORT remotePort, IP_MULTI_ADDRESS* remoteAddress); INVALID_SOCKET - No sockets of the specified type were available to be opened. A...","GUID-24FC9E41-3466-48F6-A06D-D8EE58E41449.html@@@1.2.6.1.1.3.12 TCPIP_Helper_IPv6AddressToString Function@@@bool TCPIP_Helper_IPv6AddressToString( const IPV6_ADDR * addr, char* buff, size_t buffSize ); This function converts an IPV6_ADDR to a text representation of an IPv6 address. None. Parameters...","GUID-250DB789-3EBA-4CB9-9E89-A7FA70666029.html@@@1.2.5 Data Link Layer@@@This layer in MPLAB\u00AE Harmony TCP/IP Stack Architecture contains two sublayers, the media access control (MAC) sublayer and the physical sublayer. The MAC sublayer is equivalent to the data link layer...","GUID-253C4517-9A41-42CB-BE66-F8885F6FE3E8.html@@@1.2.5.3.3.22 DRV_ENC28J60_SetMacCtrlInfo Function@@@void DRV_ENC28J60_SetMacCtrlInfo(SYS_MODULE_OBJ object, TCPIP_MAC_MODULE_CTRL * init); None. ENC28J60 Set MAC Control Information This function is used to pass in the TCPIP_MAC_CONTROL_INIT...","GUID-2561DB16-7947-4C02-97DC-A0BFC17070C9.html@@@1.2.1.1.3 Library Interface@@@This section describes the Application Programming Interface (API) functions of the Announce module. Refer to each section for a detailed description. Name Description Functions...","GUID-25796438-FB77-4094-AAA4-E161F18FEBB9.html@@@1.2.5.3.3.11 DRV_ENC28J60_LinkCheck Function@@@bool DRV_ENC28J60_LinkCheck(DRV_HANDLE hMac); true - if the link is active false - all other times ENC28J60 Link Check This function checks the status of the link and returns it to the caller. The...","GUID-25A4CF50-2F8F-47E7-A90C-ABFA52814459.html@@@1.2.1.12.2 Library Interface@@@Name Description Macros TCPIP_STACK_USE_BASE64_DECODE Authentication requires Base64 decoding Enable basic authentication support HTTP_CONFIG_H This is macro HTTP_CONFIG_H . TCPIP_HTTP_CACHE_LEN Max...","GUID-25CE1982-3A3C-4B85-9E3D-AA4B7E4B6FB4.html@@@1.2.1.7.3.22 TCPIP_DNS_EntryQuery Function@@@TCPIP_DNS_RESULT TCPIP_DNS_EntryQuery( TCPIP_DNS_ENTRY_QUERY * pDnsQuery, int queryIndex ); This function is used to query the DNS client for a specified entry. The entry to be queried is selected by...","GUID-25D5E0C9-3A18-432E-9C34-D93E8812A38D.html@@@2.1.9 Pin Configuration@@@Start Pin Configuration from Plugins drop-down menu Configure the pins for USART1 as shown below. Configure the pins for GMAC . Refer to the SAME70 Xplained Ultra board schematic for the GMAC pins...","GUID-25D92FD5-DB0E-4812-B93B-54D91FE4F8F7.html@@@1.2.1.2.3.87 SOCKADDR_IN Type@@@typedef struct sockaddr_in SOCKADDR_IN; In the Internet address family...","GUID-25ED6322-BD3C-4EA5-A164-ECCB425E5FFB.html@@@1.1.5 Getting Help@@@The TCP/IP Stack is supported through Microchip&apos;s standard support channels. If you encounter difficulties, you may submit ticket requests at Microchip Technical Support Portal. The Microchip forums...","GUID-2607797F-B898-48D2-87BF-F41312C0C255.html@@@1.2.4.6.3.19 IPV6_PACKET Structure@@@typedef struct _IPV6_PACKET { struct _IPV6_PACKET * next; unsigned short payloadLen; unsigned short headerLen; unsigned short upperLayerHeaderLen; unsigned short upperLayerChecksumOffset; unsigned...","GUID-261D3A77-3851-4DA2-8CD7-5E5420F6E71F.html@@@1.2.6.1.1.3.19 TCPIP_Helper_ntohll Function@@@TCPIP_Helper_ntohll( uint64_t nLLong ); This is a function TCPIP_Helper_ntohll...","GUID-261FDEEA-4939-4E47-AFFC-2FBAD980A114.html@@@1.2.1.19.3.30 TCPIP_SNMP_NextIndexGet Function@@@bool TCPIP_SNMP_NextIndexGet( SNMP_ID var, SNMP_INDEX* index ); This is a callback function called by SNMP module. This function contents are modified by the application developer with the new MIB...","GUID-2637DA0B-1EF0-4C66-B28A-E1A7622E7A0C.html@@@1.2.5.4.3.11 DRV_ENCX24J600_LinkCheck Function@@@bool DRV_ENCX24J600_LinkCheck(DRV_HANDLE hMac); true - if the link is active false - all other times ENCX24J600 Link Check This function checks the status of the link and returns it to the caller. The...","GUID-265ED9D5-455D-43C3-B82A-8FDF80CEF01A.html@@@1.2.3.1.3.43 TCPIP_TCP_ServerOpen Function@@@TCP_SOCKET TCPIP_TCP_ServerOpen( IP_ADDRESS_TYPE addType, TCP_PORT localPort, IP_MULTI_ADDRESS* localAddress ); Provides a unified method for opening TCP server sockets. Sockets are created at the TCP...","GUID-26769E59-A8DD-4EC1-8D30-3E04319DFAE0.html@@@1.2.1.9.2 Dynamic Domain Name Service (DynDNS) Configurations@@@Dynamic Domain Name Service (DynDNS) Specific User Configurations Default CheckIP Server: Default CheckIP server for determining current IP address Default value: )&quot;checkip.dyndns.com&quot; Symbol...","GUID-26797AD3-8425-4762-91F2-858B7177DC4B.html@@@2.1.5 Add other Harmony modules@@@Switch to Project Graph window in MPLABX IDE. By default, the Root Layer is visible. Add SYS_CONSOLE and USART dependency. Right Click on SYS_CONSOLE dependency button on TCP/IP STACK box. Select...","GUID-268BBB55-2FB0-4FD4-962D-D4EAA703BF9B.html@@@1.2.5.10.3.22 PPP_GetRemoteIpv4Addr Function@@@uint32_t PPP_GetRemoteIpv4Addr(DRV_HANDLE hMac); Current IPv4 remote addressOr 0 if an error This function gets the PPP remote IPv4 address currently assigned for the PPP driver This is the IPv4...","GUID-26AAC335-D816-4F4B-83E3-4B902E4492CA.html@@@1.2.5.4.3.21 DRV_ENCX24J600_RxFilterHashTableEntrySet Function@@@TCPIP_MAC_RES DRV_ENCX24J600_RxFilterHashTableEntrySet(DRV_HANDLE hMac, const TCPIP_MAC_ADDR* DestMACAddr); TCPIP_MAC_RES_TYPE_ERR - if the hMac is invalid TCPIP_MAC_RES_OP_ERR - if the hMac is valid...","GUID-26B78817-65B8-44CF-A06B-E750DC067EB9.html@@@1.2.5.3 ENC28J60 Driver Library@@@The ENC28J60 External MAC and PHY is an external module connected through a Serial Peripheral Interface (SPI) to host microcontroller. This driver interfaces with the SPI driver to communicate with...","GUID-26C19D35-294B-4543-89ED-C1418AF48EB2.html@@@1.2.4.5.3.13 TCPIP_IPV4_PACKET_HANDLER Type@@@typedef bool (* TCPIP_IPV4_PACKET_HANDLER)(TCPIP_NET_HANDLE hNet, struct _tag_TCPIP_MAC_PACKET* rxPkt, const void* hParam); IPv4 packet handler pointer. Pointer to a function that will be called by...","GUID-26D1C662-730E-419D-AF20-DF083DDCCCC8.html@@@1.2.1.2.3.79 SO_SNDBUF Macro@@@#define SO_SNDBUF 7 //Send Buffer Size Send buffer size...","GUID-26EDA78F-3A2B-491C-8C31-41635D1D08F5.html@@@1.2.6.1.1.3.93 TCPIP_STACK_NetMask Function@@@uint32_t TCPIP_STACK_NetMask( TCPIP_NET_HANDLE netH ); This function returns the IPv4 address mask of the specified interface. If the interface is enabled then it returns the IP address mask of that...","GUID-26F6675F-2B57-4AAE-9982-52DE60FA97FD.html@@@1.2.2.1.3.40 NET_PRES_SocketGetTransportHandle Function@@@NET_PRES_SKT_HANDLE_T NET_PRES_SocketGetTransportHandle(NET_PRES_SKT_HANDLE_T handle); A valid transport layer handle that can be casted into the proper type. A socket needs to have been opened by...","GUID-272AB059-2FE4-4FF1-A32F-C791D4B47E36.html@@@1.2.1.12.2.10 TCPIP_HTTP_CurrentConnectionByteCountGet Function@@@uint32_t TCPIP_HTTP_CurrentConnectionByteCountGet( HTTP_CONN_HANDLE connHandle ); This function returns the current value of the counter showing the number of bytes available to be read on the...","GUID-277E5494-5371-4991-9BEB-EF1616D8BC68.html@@@1.2.3.2.3.23 TCPIP_UDP_PacketHandlerDeregister Function@@@C bool TCPIP_UDP_PacketHandlerDeregister(TCPIP_UDP_PROCESS_HANDLE pktHandle); true - if the operation succeeded false - if the operation failed This function removes a packet processing handler...","GUID-27BACF3E-053A-4EAA-9CAE-61FA0FCA18FA.html@@@2.1.7 MPU Configuration@@@The MPU (Memory Protection Unit) is for the configuration of the memory regions. Here, we are configuring a non-cacheable memory region for storing GMAC descriptors. This configuration is applicable...","GUID-27C514CD-DE28-4215-BB75-6C8EA971E12E.html@@@1.2.1.4.3 Library Interface@@@Name Description Macros TCPIP_DHCPS_DEFAULT_IP_ADDRESS_RANGE_START These below IPv4 DHCP server address details are default address and it is assigned to the network default network interface. for...","GUID-27C6EDE2-7EE7-404E-A08E-B56360F7D44D.html@@@1.2.4.2.3.10 TCPIP_ICMP_EchoRequestSend Function@@@ICMP_ECHO_RESULT TCPIP_ICMP_EchoRequestSend( TCPIP_NET_HANDLE netH, IPV4_ADDR * targetAddr, uint16_t sequenceNumber, uint16_t identifier ); This function allows a stack client to send an ICMP query...","GUID-283B4B5C-2894-4C43-B264-436B46EA69F0.html@@@1.2.6.1.1.3.3 TCPIP_NET_HANDLE Type@@@typedef const void* TCPIP_NET_HANDLE; Type: TCPIP_NET_HANDLE. Definition of the network handle, which clients use to get access to control the interfaces...","GUID-283E141E-5C2A-4977-B6E1-180215D04795.html@@@1.2.4.6.3.56 TCPIP_IPV6_PayloadSet Function@@@unsigned short TCPIP_IPV6_PayloadSet( IPV6_PACKET * pkt, uint8_t* payload, unsigned short len ); This function will allocate a data segment header and append it to the end of a chain of segments in a...","GUID-28D00DC0-BD30-4143-BB30-0FBA9F834DEF.html@@@1.2.5.9.3.18 DRV_MIIM_OPERATION_CALLBACK Type@@@typedef void (* DRV_MIIM_OPERATION_CALLBACK)(DRV_HANDLE cliHandle, DRV_MIIM_OPERATION_HANDLE opHandle, DRV_MIIM_RESULT opResult, uint16_t opData); Type: MIIM Driver Operation Complete Callback The...","GUID-28F62CB1-C360-40F6-8125-8EA43C4A063D.html@@@2.1.6 Clock Configuration@@@Start Clock Configuration from Plugins drop-down menu Verify the clock configuration. The application demo can work with default clock configuration. Verify the Processor Clock (HCLK) is 300,000,000...","GUID-294A1E08-C9B5-46B6-A6AD-3ED80AC102E0.html@@@1.2.4.5.3.1 IPV4_FRAGMENT_INFO Union@@@typedef union { uint16_t val; struct { uint16_t fragOffset : 13; uint16_t MF : 1; uint16_t DF : 1; uint16_t reserved : 1; } } IPV4_FRAGMENT_INFO; IPv4 packet fragment definition. This is the structure...","GUID-298A4190-0B65-4FC5-BEFA-8536001B4168.html@@@1.2.2.1.3.32 NET_PRES_SKT_T Enumeration@@@typedef enum { NET_PRES_SKT_CLIENT = 0x0001, NET_PRES_SKT_SERVER = 0x0002, NET_PRES_SKT_STREAM = 0x0004, NET_PRES_SKT_DATAGRAM = 0x0008, NET_PRES_SKT_UNENCRYPTED = 0x0010, NET_PRES_SKT_ENCRYPTED =...","GUID-29AE27DA-535A-437D-B901-883C884CCB58.html@@@1.2.4.6.3.14 IPV6_HEADER_OFFSET_NEXT_HEADER Macro@@@#define IPV6_HEADER_OFFSET_NEXT_HEADER (0x06u) Header offset for next header...","GUID-29B73F88-AF3C-48F4-9A52-C7B627F6CE39.html@@@1.2.1.19.3.5 SNMP_INDEX Type@@@typedef uint8_t SNMP_INDEX; Type: SNMP_INDEX. The current version limits the size of the index to 7 bits wide, meaning that such arrays can contain up to 127 entries. SequenceVar - This command is...","GUID-2A0AD6C6-F354-47C7-BBF8-FD4B8D918EAD.html@@@1.2.5.5.3.6 DRV_GMAC_EventPendingGet Function@@@TCPIP_MAC_EVENT DRV_GMAC_EventPendingGet(DRV_HANDLE hMac); The currently stack pending events. This function returns the currently pending Ethernet MAC events. Multiple events will be ORed together as...","GUID-2A105799-AAF5-4399-9E65-558D0A4EA0F5.html@@@1.2.1.20.3.16 TCPIP_SNTP_TimeStampStatus Function@@@TCPIP_SNTP_RESULT TCPIP_SNTP_TimeStampStatus(); This function gets the timestamp status as it was obtained from a NTP server. The TCP/IP Stack should have been initialized. SNTP_RES_OK - If there is a...","GUID-2A45F0EE-A52A-4143-B91C-7300A1B9156C.html@@@1.2.1.3.3.11 TCPIP_DHCP_InfoGet Function@@@bool TCPIP_DHCP_InfoGet( TCPIP_NET_HANDLE hNet, TCPIP_DHCP_INFO* pDhcpInfo ); This function returns the current state and lease info of the DHCP client on the specified interface. DHCP module must be...","GUID-2AB03677-A266-4087-B18B-A00FBE472751.html@@@1.2.3.2.3.8 TCPIP_UDP_DestinationIPAddressSet Function@@@bool TCPIP_UDP_DestinationIPAddressSet(UDP_SOCKET hUDP, IP_ADDRESS_TYPE addType, IP_MULTI_ADDRESS* remoteAddress); true - Indicates success false - Indicates failure: invalid socket invalid socket...","GUID-2B0E1923-BB7A-407E-BD41-70E2086EDCFC.html@@@1.2.1.4 DHCP Server Module@@@The DHCP Server module is used to assign IP addresses to DHCP clients from the configured IP address database. When the server receives a request from a client, the DHCP server determines the network...","GUID-2B48A7AD-86F6-4711-93E4-E9A1118EDFC0.html@@@1.2.1.7.3.20 TCPIP_DNS_ENABLE_FLAGS Enumeration@@@typedef enum { TCPIP_DNS_ENABLE_DEFAULT = 0, TCPIP_DNS_ENABLE_STRICT, TCPIP_DNS_ENABLE_PREFERRED } TCPIP_DNS_ENABLE_FLAGS; Enumeration: TCPIP_DNS_ENABLE_FLAGS. This enumeration lists the...","GUID-2B4E16B1-ABF8-474A-B4FD-DCF816BEB456.html@@@1.2.3.1.3.47 TCPIP_TCP_SignalHandlerDeregister Function@@@bool TCPIP_TCP_SignalHandlerDeregister( TCP_SOCKET s, TCPIP_TCP_SIGNAL_HANDLE hSig ); This function deregisters the TCP socket signal handler. hSig valid TCP handle. Parameters Description s The TCP...","GUID-2B618A85-3129-4B5D-9D7E-57914A20F94D.html@@@1.2.5.9.3.27 DRV_MIIM_SETUP Structure@@@C typedef struct { uint32_t hostClockFreq; uint32_t maxBusFreq; DRV_MIIM_SETUP_FLAGS setupFlags; } DRV_MIIM_SETUP; Members Description uint32_t hostClockFreq; The clock frequency on which this MIIM...","GUID-2B79AD6C-CBD1-4FBD-A8AF-C2606E6B90DE.html@@@1.2.3.2.3.33 TCPIP_UDP_SIGNAL_TYPE Enumeration@@@typedef enum { TCPIP_UDP_SIGNAL_TX_DONE = 0x0001, TCPIP_UDP_SIGNAL_RX_DATA = 0x0100, TCPIP_UDP_SIGNAL_IF_DOWN = 0x2000, TCPIP_UDP_SIGNAL_IF_CHANGE = 0x4000 } TCPIP_UDP_SIGNAL_TYPE; Members Description...","GUID-2B8CFDE8-2E18-48B2-A291-091F5C596CFD.html@@@1.2.1.13.3.1 _HTTP_NET_H Macro@@@#define __HTTP_NET_H_ This is macro __HTTP_NET_H_...","GUID-2B94D8DC-F66E-42B0-A5F1-B1B08B4AB4FC.html@@@1.2.1.6.3.4 TCPIP_DHCPV6_CONFIG_FLAGS Enumeration@@@typedef enum { TCPIP_DHCPV6_FLAG_NONE = 0, TCPIP_DHCPV6_FLAG_START_ENABLE = 0x01, TCPIP_DHCPV6_FLAG_DAD_DISABLE = 0x02, TCPIP_DHCPV6_FLAG_IA_IGNORE_RENEW_LTIME = 0x04...","GUID-2B9B587D-5018-4CA9-AA8D-2395A2D004A5.html@@@1.2.1.17.2 Library Interface@@@Name Description Macros TCPIP_SMTP_MAX_WRITE_SIZE the max size of data to be written in a discrete string/array email operation: TCPIP_SMTP_StringPut/TCPIP_SMTP_ArrayPut. Excess characters will be...","GUID-2BA71B3F-6EAF-44A6-808C-51E49243D0F2.html@@@1.2.1.2.3.100 TCPIP_BSD_Task Function@@@void TCPIP_BSD_Task(); This function performs BSD module tasks in the TCP/IP stack. BSD module should have been initialized. None. None...","GUID-2BD782B1-B532-41BD-B4A7-6BC09C717E9F.html@@@1.2.1.5.3.13 TCPIP_DHCPS_IsEnabled Function@@@bool TCPIP_DHCPS_IsEnabled(TCPIP_NET_HANDLE hNet) Determines if the DHCP Server is enabled on the specified interface. This function returns the current state of the DHCP Server on the specified...","GUID-2C181088-4DF0-4203-AE99-7A724E9A17B5.html@@@1.2.1.11 FTP Server Module@@@An embedded File Transfer Protocol (FTP) server is an excellent addition to any network-enabled device. FTP server capability facilitates the uploading of files to, and downloading of files from, an...","GUID-2C33D70C-FEB0-4467-BBDD-91FABD33F0F8.html@@@1.2.2.1.3.14 NET_PRES_EncProviderRead Type@@@typedef int32_t (* NET_PRES_EncProviderRead)(void * providerData, uint8_t * buffer, uint16_t size); The number of bytes transferred. Presentation Encryption Provider Read Function Pointer Prototype...","GUID-2C68C719-82B4-46CC-A8D8-5B9205D81E6F.html@@@1.2.4.4.3.18 TCPIP_IGMP_Task Function@@@void TCPIP_IGMP_Task(); This function performs IGMP module tasks in the TCP/IP stack. The IGMP module must be initialized. None. None...","GUID-2CB40EFF-DCB6-4D23-9EFB-402861EF9FC6.html@@@1.2.1.19.3.29 TCPIP_SNMP_MODULE_CONFIG Structure@@@typedef struct { bool trapEnable; bool snmp_trapv2_use; bool snmpv3_trapv1v2_use; const char* snmp_bib_file; TCPIP_SNMP_COMMUNITY_CONFIG * read_community_config; TCPIP_SNMP_COMMUNITY_CONFIG *...","GUID-2CE2DE56-547A-4F35-8240-592D03786853.html@@@1.2.1.19.3.24 TCPIP_SNMP_ExactIndexGet Function@@@bool TCPIP_SNMP_ExactIndexGet( SNMP_ID var, SNMP_INDEX * index ); This is a callback function called by SNMP module. This function contents are modified by the application developer with the new MIB...","GUID-2CFA45A0-F069-4AA0-830A-C5844311C281.html@@@1.2.5.8.4.11 DRV_ETHPHY_INDEX_COUNT Macro@@@#define DRV_ETHPHY_INDEX_COUNT 1 Ethernet PHY Driver Module Index Count This constant identifies the number of valid Ethernet PHY driver indices. This constant should be used in place of hard-coded...","GUID-2D2D0BFD-B3FF-427E-BB13-BB457049436C.html@@@1.2.1.5.3.28 TCPIP_DHCPS_StatisticsDataGet Function@@@TCPIP_DHCPS_RES TCPIP_DHCPS_StatisticsDataGet(TCPIP_NET_HANDLE netH, TCPIP_DHCPS_STATISTICS_DATA* pStatData); Returns the DHCPS statistics data This function is used to return the DHCPS statistics...","GUID-2D2E1AE8-AEC5-4CD4-9F65-E871C14090AE.html@@@1.2.2.1.3.68 NET_PRES_TransHandlerRegister Type@@@typedef NET_PRES_SIGNAL_HANDLE (* NET_PRES_TransHandlerRegister)(NET_PRES_SKT_HANDLE_T handle, uint16_t sigMask, NET_PRES_SIGNAL_FUNCTION handler, const void* hParam); The handle of a signal handler...","GUID-2D39AA6F-29BA-4872-8AD3-5DC9686A2C12.html@@@1.2.1.18.3.18 TCPIP_SMTPC_SERVER_REPLY_CALLBACK Type@@@typedef void (* TCPIP_SMTPC_SERVER_REPLY_CALLBACK)(TCPIP_SMTPC_MESSAGE_HANDLE messageHandle, TCPIP_SMTPC_MESSAGE_STATUS currStat, const char* serverReply); Type: TCPIP_SMTPC_SERVER_REPLY_CALLBACK Data...","GUID-2D3B8E39-56C5-4354-9971-1FF1912BCADC.html@@@1.2.1.19.3.60 TCPIP_SNMPV3_TrapTypeGet Function@@@bool TCPIP_SNMPV3_TrapTypeGet(); This function returns true if SNMP module is trying to send trap version v2 with SNMP version v3. TCPIP_SNMP_Initialize() is already called. True - SNMP3 will use trap...","GUID-2D5149C8-22BA-428B-96B1-09BF9EE665D5.html@@@1.2.5.3.1 Abstraction Model@@@The ENC28J60 Driver library has several different layers to it, as illustrated in the following figure. The interface layer has two main sections that are used the most often: The Tasks function, and...","GUID-2D680591-4A8E-454E-A661-C712EFB5E5CA.html@@@1.2.5.9.3.2 DRV_MIIM_CLIENT_OP_PROTECTION Macro@@@#define DRV_MIIM_CLIENT_OP_PROTECTION 0 MIIM client Operation Protection Because of the recirculation of the operation handles and client handles the possibility exists that a misbehaved client...","GUID-2D776C30-A0BA-4E75-B20B-36A4D2E2CA4B.html@@@1.2.6.1.1 Manager Module@@@The TCP/IP manager provides access to the stack initialization, configuration and status functions. It also process the packets received from different network interfaces (MAC drivers) and dispatches...","GUID-2DA6ABDB-5D96-4C71-B7A5-B62697F43FE8.html@@@1.2.5.10.3.15 PPP_EventHandlerRegister Function@@@PPP_EVENT_HANDLE PPP_EventHandlerRegister(DRV_HANDLE hMac, PPP_EVENT_HANDLER handler, const void* hParam); Returns a valid handle if the call succeeds, or a null handle if the call failed (out of...","GUID-2DAB11C9-7917-4265-B16B-D564E5E91624.html@@@1.2.1.20.3.10 TCPIP_SNTP_MODULE_CONFIG Structure@@@typedef struct { const char* ntp_server; const char* ntp_interface; IP_ADDRESS_TYPE ntp_connection_type; uint32_t ntp_reply_timeout; uint32_t ntp_stamp_timeout; uint32_t ntp_success_interval; uint32_t...","GUID-2DAF0DBE-3943-48A6-A38F-8C0A510B528D.html@@@1.2.4.6.3.55 TCPIP_IPV6_PacketHandlerRegister Function@@@TCPIP_IPV6_PROCESS_HANDLE TCPIP_IPV6_PacketHandlerRegister( TCPIP_IPV6_PACKET_HANDLER pktHandler, const void* handlerParam ); This function registers a new packet processing handler. The caller can...","GUID-2DEBAEA2-8E8F-4B37-B9F5-648F6D47C436.html@@@1.2.4.2.3.12 TCPIP_ICMP_REQUEST_HANDLE Type@@@typedef const void* TCPIP_ICMP_REQUEST_HANDLE; This is type TCPIP_ICMP_REQUEST_HANDLE...","GUID-2E31B416-72D7-4E99-A278-3550AE90357C.html@@@1.2.4.6.3.6 IPV6_DATA_NETWORK_FIFO Macro@@@#define IPV6_DATA_NETWORK_FIFO (0x2u) // Data to transmit is stored in the Network Controller&apos;s FIFOs Data to transmit is stored in the network controller&apos;s FIFOs...","GUID-2EB734CC-B9C6-455E-9884-2DBAB08E1EA8.html@@@1.2.5.5.3.3 DRV_GMAC_Deinitialize Function@@@void DRV_GMAC_Deinitialize(SYS_MODULE_OBJ object); None. This function supports teardown of the PIC32 Ethernet MAC (opposite of set up). Used by tcpip_module_manager. This function deinitializes the...","GUID-2EBE4199-A79F-4C93-8E07-2FAC2C6C0F3E.html@@@1.2.4.6.3.8 IPV6_DATA_PIC_RAM Macro@@@#define IPV6_DATA_PIC_RAM (0x3u) // Data to transmit is stored in PIC RAM Data to transmit is stored in PIC RAM...","GUID-2F15E45D-79E7-4621-89BD-A96670B171E4.html@@@1.2.3.2.3.27 TCPIP_UDP_PutIsReady Function@@@uint16_t TCPIP_UDP_PutIsReady(UDP_SOCKET hUDP); The number of bytes that can be written to this socket. This function determines how many bytes can be written to the specified UDP socket. This...","GUID-2F39A35D-A741-49F8-BAA9-3B3C9B665486.html@@@1.2.1.9.3 Library Interface@@@Name Description Macros TCPIP_DDNS_CHECKIP_SERVER Default CheckIP server for determining current IP address TCPIP_DDNS_TASK_TICK_RATE dynDNS task rate, ms The default value is hundreds of...","GUID-2F3E4434-0B2E-4059-AF87-A2F5B95E7938.html@@@1.2.4.1.3.5 TCPIP_ARP_EntryGet Function@@@TCPIP_ARP_RESULT TCPIP_ARP_EntryGet( TCPIP_NET_HANDLE hNet, IPV4_ADDR* ipAdd, TCPIP_MAC_ADDR* pHwAdd, bool probe ); If probe == false The function behaves identical to TCPIP_ARP_IsResolved(): If the...","GUID-2F42CC18-01BE-49A7-9B22-5A7799D26839.html@@@1.2.1.8.3.18 TCPIP_DNSS_TASK_PROCESS_RATE Macro@@@#define TCPIP_DNSS_TASK_PROCESS_RATE (33) DNS Server time out task processing rate, in milliseconds. The DNS Server module will process a timer event with this rate for processing its own state...","GUID-2F85BB10-868F-4CC7-B4DF-D8F780841490.html@@@1.2.1.19.3.51 TCPIP_SNMP_VarbindGet Function@@@bool TCPIP_SNMP_VarbindGet( SNMP_ID var, SNMP_INDEX index, uint8_t* ref, SNMP_VAL* val ); This is a callback function called by SNMP module. This function is called only when SNMP GET, GETNEXT and...","GUID-2F8F95F8-C947-4540-BD50-952613FACF05.html@@@1.2.6.1.1.3.1 _TCPIP_HELPERS_H Macro@@@#define __TCPIP_HELPERS_H_ This is macro __TCPIP_HELPERS_H_...","GUID-30247EE9-2918-44C6-89A5-06347C527C83.html@@@1.2.5.5.3.21 DRV_GMAC_Tasks Function@@@void DRV_GMAC_Tasks(SYS_MODULE_OBJ object); None This function is used to maintain the driver&apos;s internal state machine None. The DRV_GMAC_Initialize routine must have been called for the specified MAC...","GUID-30291789-B31E-4E4B-9A7A-87A139F3FB3F.html@@@1.2.5.10.1 Abstraction Model@@@The Point-to-Point Protocol (PPP) provides a standard method for transporting multi-protocol datagrams over point-to-point links. PPP is comprised of three main components: A method for encapsulating...","GUID-30DF66DB-246B-4D1C-B7D0-B71D86DE145E.html@@@1.2.1.13.3.42 TCPIP_HTTP_NET_ConnectionUserDataSet Function@@@void TCPIP_HTTP_NET_ConnectionUserDataSet( TCPIP_HTTP_NET_CONN_HANDLE connHandle, const void* uData ); This function will set the user data value for the current HTTP connection. This data belongs to...","GUID-30EBF323-A268-4755-8D7E-DF208F3CE0E3.html@@@1.2.1.17.2.2 TCPIP_SMTP_ClientTask Function@@@void TCPIP_SMTP_ClientTask(); This function performs SMTP module tasks in the TCP/IP stack. SMTP module should have been initialized. None. None...","GUID-3140AAA0-AD55-4639-9773-9953DCC3292E.html@@@1.2.1.18.3.17 TCPIP_SMTPC_MODULE_CONFIG Structure@@@typedef struct { int nMailConnections; uint32_t serverReplyTmo; uint32_t serverDataTmo; uint32_t tlsHandshakeTmo; int nMailRetries; uint32_t serverRetryTmo; uint32_t smtpcRetryTmo; uint16_t...","GUID-3155D9C2-F544-4BC5-98B7-EEC72241DFB7.html@@@1.2.3.1.3.33 TCPIP_TCP_OptionsGet Function@@@bool TCPIP_TCP_OptionsGet( TCP_SOCKET hTCP, TCP_SOCKET_OPTION option, void* optParam ); Various options can be get at the socket level. This function provides compatibility with BSD implementations...","GUID-31666506-BADF-4480-824E-431D62A5E22D.html@@@1.2.5.3.3.8 DRV_ENC28J60_EventPendingGet Function@@@TCPIP_MAC_EVENT DRV_ENC28J60_EventPendingGet(DRV_HANDLE hMac); TCPIP_MAC_EV_NONE - Returned on an error List of events - Returned on event other than an error ENC28J60 Get Events This function gets...","GUID-31B65FA8-3006-400B-8C92-CDEDE2B938FC.html@@@1.2.6.1.1.3.26 TCPIP_Helper_StringToIPv6Address Function@@@bool TCPIP_Helper_StringToIPv6Address( const char * str, IPV6_ADDR * addr ); This function parses the text representation of an IPv6 address to an IPV6_ADDR struct. The output result is big-endian...","GUID-31B86115-03F3-41B6-B2A0-77E01FE35D84.html@@@1.2.4.4.3.6 TCPIP_IGMP_GroupInfoGet Function@@@TCPIP_IGMP_RESULT TCPIP_IGMP_GroupInfoGet( TCPIP_NET_HANDLE hNet, IPV4_ADDR mcastAddress, TCPIP_IGMP_GROUP_INFO* pInfo ); This function returns current info about a multicast group status on a...","GUID-324BD12A-4C52-4EB1-9DB8-6AAF52888A22.html@@@1.2.1.13.3.60 TCPIP_HTTP_NET_USER_HANDLE Type@@@typedef const void* TCPIP_HTTP_NET_USER_HANDLE; Type: TCPIP_HTTP_NET_USER_HANDLE A handle that a client can use after the HTTP user callback has been registered...","GUID-325A1E11-D151-4FED-96DB-6445BB4FA631.html@@@1.2.1.7.2 Domain Name Service (DNS) Configurations@@@DNS Specific User Configurations Number of DNS Cache Entries: Number of DNS resolver entries Default value: 5 Symbol TCPIP_DNS_CLIENT_CACHE_ENTRIES DNS Connection Type: This parameter can be used to...","GUID-326795EA-FDDC-4363-B867-C433491D0411.html@@@1.2.1.2.3.7 addrinfo Structure@@@struct addrinfo { int ai_flags; int ai_family; int ai_socktype; int ai_protocol; size_t ai_addrlen; struct sockaddr * ai_addr; char * ai_canonname; struct addrinfo * ai_next; }; This is record...","GUID-326BE6E8-7109-48AF-87ED-2F766BFB5934.html@@@1.2.3.1.3.31 TCPIP_TCP_IsReady Function@@@bool TCPIP_TCP_IsReady(); This function returns the current status of the TCP module. If the TCP quiet time has elapsed (or it was not enabled when TCP was built) then the TCP module is ready for...","GUID-32CEAFDF-9937-4EAA-80F8-4582953EB286.html@@@1.2.1.7.3.5 TCPIP_DNS_CLIENT_CACHE_PER_IPV4_ADDRESS Macro@@@#define TCPIP_DNS_CLIENT_CACHE_PER_IPV4_ADDRESS 5 Maximum and default number of IPv4 answers to be considered while processing DNS response from server for a query...","GUID-33131955-19BD-40F4-8C4A-F18AD4452302.html@@@1.2.5.8.4.30 DRV_ETHPHY_Reset Function@@@DRV_ETHPHY_RESULT DRV_ETHPHY_Reset(DRV_HANDLE handle, bool waitComplete); DRV_ETHPHY_RES_PENDING for ongoing, in progress operation DRV_ETHPHY_RES_OPERATION_ERR - invalid parameter or operation in the...","GUID-3327D2C7-8C69-48E0-817A-65C7282FFFDF.html@@@1.2.6.1.1.3.88 TCPIP_STACK_NetIsReady Function@@@bool TCPIP_STACK_NetIsReady( TCPIP_NET_HANDLE hNet ); This function returns the network interface configuration status. The TCP/IP stack should have been initialized by TCPIP_STACK_Initialize() and...","GUID-335910C4-6B4E-44F1-9B89-20F9E98448B5.html@@@1.2.5.10.3.11 PPP_STATISTICS Structure@@@typedef struct { uint32_t lcpPkts; uint32_t ipcpPkts; uint32_t ipPkts; uint32_t tcpPkts; uint32_t pppQueued; uint32_t netQueued; uint32_t echoReqFree; uint32_t echoReqQueued; uint32_t echoDiscardPkts...","GUID-33601DD6-2869-4D23-9621-4C9FA0A5F41D.html@@@1.2.3.1.3.11 TCPIP_TCP_ArrayFind Function@@@uint16_t TCPIP_TCP_ArrayFind( TCP_SOCKET hTCP, const uint8_t* cFindArray, uint16_t wLen, uint16_t wStart, uint16_t wSearchLen, bool bTextCompare ); This function finds the first occurrence of an array...","GUID-337C22DB-C00E-42C9-8BB2-876D36A7B5AD.html@@@1.2.2.1 Network Presentation Layer@@@The MPLAB Harmony Networking Presentation Layer is an abstracted middleware layer that provides an encrypted channel. There are three interfaces for the layer: Client - this interface starts a network...","GUID-338BE6D4-6407-4074-804F-803059F7212B.html@@@1.2.1.14.3 Library Interface@@@Name Description Macros TCPIP_IPERF_RX_BUFFER_SIZE Default size of the Iperf RX buffer The default value is 4KB. The performance of a socket is highly dependent on the size of its buffers so it&apos;s a...","GUID-3397515B-6907-4293-81E2-F7537E379709.html@@@1.2.5.1.1 NETCONFIG Configurations@@@NETCONFIG User Configurations Number of Instances: TCPIP Stack Network Interface Count Default value: 1 (Auto-incremented for every new instance is added) The count of network interfaces configured by...","GUID-33995F70-A1AE-47BC-9678-034DEFF6B2FD.html@@@1.2.1.21.2 Telnet Server Configurations@@@Telnet Specific User Configurations Maximum Connections: Maximum number of Telnet connections Default value: 2 Symbol TCPIP_TELNET_MAX_CONNECTIONS Default Socket TX Buffer Size: Size of the telnet...","GUID-33D0C8D6-8824-4440-A3A8-E418A64B524B.html@@@1.2.3.2.3.47 TCPIP_UDP_Task Function@@@void TCPIP_UDP_Task(); None. This function performs UDP module tasks in the TCP/IP stack. None. The UDP module should have been initialized...","GUID-3447E5F3-4B4F-4BCB-B899-C7DC2903D957.html@@@1.2.6.1.1.3.54 TCPIP_STACK_HEAP_RES Enumeration@@@typedef enum { TCPIP_STACK_HEAP_RES_OK = 0, TCPIP_STACK_HEAP_RES_INIT_ERR = -1, TCPIP_STACK_HEAP_RES_CREATE_ERR = -2, TCPIP_STACK_HEAP_RES_SYNCH_ERR = -3, TCPIP_STACK_HEAP_RES_BUFF_SIZE_ERR = -4...","GUID-34A17DC8-525C-494B-8706-4E93C2A0EBE4.html@@@1.2.1.20.3.7 TCPIP_SNTP_HandlerDeRegister Function@@@bool TCPIP_SNTP_HandlerDeRegister( TCPIP_SNTP_HANDLE hSntp ); This function deregisters the SNTP event handler. The SNTP module must be initialized. Parameters Description hSntp A handle returned by a...","GUID-34C8E0E9-2425-480C-9FF0-72C5E55B3F34.html@@@1.2.5.2.51 TCPIP_MAC_SEGMENT_FLAGS Enumeration@@@typedef enum { TCPIP_MAC_SEG_FLAG_STATIC = 0x0001, TCPIP_MAC_SEG_FLAG_TX = 0x0002, TCPIP_MAC_SEG_FLAG_RX_STICKY = 0x0004, TCPIP_MAC_SEG_FLAG_USER_PAYLOAD = 0x0008, TCPIP_MAC_SEG_FLAG_ACK_REQUIRED =...","GUID-34E051F1-4921-449A-A1BA-E1EF1692CC94.html@@@1.2.1.2.3.38 IP_ADD_MEMBERSHIP Macro@@@#define IP_ADD_MEMBERSHIP 35 //Join a multicast group - Not yet supported Join a multicast group. Not yet supported...","GUID-34F80898-63A3-46F7-B5EC-669CC0A89DAE.html@@@1.2.1.23.3.15 TCPIP_TFTPS_MODULE_CONFIG Structure@@@typedef struct { const char* mountPath; } TCPIP_TFTPS_MODULE_CONFIG; Members Description const char* mountPath; The TFTP server will access files located under this top directory. No access is...","GUID-3555C6B6-C107-4BF6-A32C-F8058B608078.html@@@1.2.4.3.3.3 TCPIP_ICMPV6_EchoRequestSend Function@@@bool TCPIP_ICMPV6_EchoRequestSend(TCPIP_NET_HANDLE netH, IPV6_ADDR * targetAddr, uint16_t sequenceNumber, uint16_t identifier, uint32_t packetSize); true - if the query request was successfully sent...","GUID-35B61D12-0656-4FB6-A5F3-E0BC4C83E2D3.html@@@1.2.4.6.3.39 TCPIP_IPV6_DefaultRouterGet Function@@@const IPV6_ADDR* TCPIP_IPV6_DefaultRouterGet( TCPIP_NET_HANDLE netH ); This function returns the current router address for a specified interface. The IPv6 stack is initialized and the interface is up...","GUID-35E80DC1-C40F-40AE-88AB-4316ADEF228A.html@@@1.2.1.7.3.16 TCPIP_DNS_ClientInfoGet Function@@@TCPIP_DNS_RESULT TCPIP_DNS_ClientInfoGet( TCPIP_DNS_CLIENT_INFO* pClientInfo ); This function is used to get the current settings of the DNS client. The DNS client module must be initialized...","GUID-36039969-6CCF-43E3-A21F-5EBACAE1705F.html@@@1.2.5.10.3.3 PPP_ECHO_RESULT Enumeration@@@typedef enum { PPP_ECHO_OK = 0, PPP_ECHO_TRUNCATED, PPP_ECHO_BAD_MAC_HANDLE = -1, PPP_ECHO_NOT_READY = -2, PPP_ECHO_ALLOC_ERROR = -3, PPP_ECHO_TRANSMIT_ERROR = -4, PPP_ECHO_PARAMETER_ERROR = -5...","GUID-3613ADD7-0BA4-4D9D-84EE-79EF9DA6A91B.html@@@1.2.6.2.2 Library Interface@@@Name Description Macros __TCPIP_COMMANDS_H This is macro __TCPIP_COMMANDS_H Types TCPIP_COMMAND_MODULE_CONFIG TCP/IP command configuration/initialization. Functions TCPIP_COMMAND_Task Standard TCP/IP...","GUID-3622A87D-7DEC-4649-87E7-2375CE78BB13.html@@@1.2.1.2.3.49 IPPROTO_IPV6 Macro@@@#define IPPROTO_IPV6 41 // Indicates IP v6 Header options Indicates IP v6 header options...","GUID-36437C8B-F52A-4073-80EB-BF0BDCE50D0A.html@@@1.2.1.13.3.59 TCPIP_HTTP_NET_USER_CALLBACK Structure@@@typedef struct _tag_TCPIP_HTTP_NET_USER_CALLBACK { TCPIP_HTTP_NET_IO_RESULT (* getExecute)(TCPIP_HTTP_NET_CONN_HANDLE connHandle, const struct _tag_TCPIP_HTTP_NET_USER_CALLBACK* pCBack)...","GUID-3677FC08-B717-4AF7-A6F7-0255D4A37ECB.html@@@1.2.4.4.3.5 TCPIP_IGMP_GROUP_INFO Structure@@@typedef struct { int listSize; IPV4_ADDR* sourceList; int presentSources; TCPIP_IGMP_FILTER_TYPE filterType; } TCPIP_IGMP_GROUP_INFO; Structure: TCPIP_IGMP_GROUP_INFO. This structure provides IGMP...","GUID-3683D24F-0241-45AC-9BA8-690E53014E18.html@@@1.2.1.17.1 Abstraction Model@@@SMTP Client Short Message Example The SMTP client API is simplified when messages can be buffered entirely in RAM. This example sends a brief e-mail message indicating the current status of the...","GUID-36D5D72A-D963-4A8C-8012-D552407D8AB0.html@@@1.2.2.1.3.6 NET_PRES_EncProviderConnectionClose Type@@@typedef NET_PRES_EncSessionStatus (* NET_PRES_EncProviderConnectionClose)(void * providerData); NET_PRES_ENC_SS_CLOSING - Connection is closing, function must be called again to pump the close...","GUID-36E840AE-2F60-4B71-856A-67B737A6AD9C.html@@@1.2.5.6.3.16 MAC_DRVR_Process Function@@@TCPIP_MAC_RES MAC_DRVR_Process( DRV_HANDLE hMac ); TCPIP_MAC_RES_OK if all processing went on OK a TCPIP_MAC_RES error code if processing failed for some reason This is a function that allows for...","GUID-37320533-479F-47F8-85CB-B079A77F78C5.html@@@1.2.1.18.3.11 TCPIP_SMTPC_MESSAGE_QUERY Structure@@@typedef struct { TCPIP_SMTPC_MESSAGE_STATUS messageStat; TCPIP_SMTPC_MESSAGE_WARNING messageWarn; int messageRetries; NET_PRES_SKT_HANDLE_T messageSkt; } TCPIP_SMTPC_MESSAGE_QUERY; Structure...","GUID-379E8A57-2BF6-41A8-8311-BF809E290BED.html@@@1.2.1.9.3.3 DDNS_SERVICES Enumeration@@@typedef enum { DYNDNS_ORG = 0u, NO_IP_COM, DNSOMATIC_COM } DDNS_SERVICES; Dynamic DNS Services. Must support the DynDNS API (Auxlang) and correspond to ddnsServiceHosts and ddnsServicePorts in...","GUID-37AC4203-D5E1-4E87-B655-96976074EB8E.html@@@1.2.3.1.3.3 TCP_OPTION_KEEP_ALIVE_DATA Structure@@@typedef struct { bool keepAliveEnable; uint16_t keepAliveTmo; uint8_t keepAliveUnackLim; } TCP_OPTION_KEEP_ALIVE_DATA; Structure: TCP_OPTION_KEEP_ALIVE_DATA. This structure defines socket keep alive...","GUID-37B0B645-1F9E-4705-8666-626A7FFDED10.html@@@1.2.1.8.3.14 TCPIP_DNSS_MODULE_CONFIG Structure@@@typedef struct { bool deleteOldLease; bool replyBoardAddr; size_t IPv4EntriesPerDNSName; size_t IPv6EntriesPerDNSName; } TCPIP_DNSS_MODULE_CONFIG; Structure: TCPIP_DNSS_MODULE_CONFIG. DNS Server...","GUID-37CA74FB-74AF-4615-B089-1902901AAD3D.html@@@1.2.5.3.3.4 DRV_ENC28J60_Configuration Type@@@typedef struct _DRV_ENC28J60_Configuration DRV_ENC28J60_Configuration; ENC28J60 Driver Initialization Data This data type defines the data required to initialize or reinitialize the ENC28J60 driver...","GUID-3806976C-025D-4412-BB7F-DD4D8E0339C8.html@@@1.2.5.4.3.4 DRV_ENCX24J600_Configuration Type@@@typedef struct _DRV_ENCX24J600_Configuration DRV_ENCX24J600_Configuration; ENCX24J600 Driver Initialization Data This data type defines the data required to initialize or reinitialize the ENCX24J600...","GUID-384F35CF-99A6-4E65-A1ED-555DAFF690E2.html@@@1.2.5.7.3.19 DRV_ETHMAC_PIC32MACStatisticsGet Function@@@TCPIP_MAC_RES DRV_ETHMAC_PIC32MACStatisticsGet(DRV_HANDLE hMac, TCPIP_MAC_RX_STATISTICS* pRxStatistics, TCPIP_MAC_TX_STATISTICS* pTxStatistics); TCPIP_MAC_RES_OK if all processing went on OK...","GUID-38561CC8-76E8-48BA-93B5-B308EBC5D409.html@@@1.2.1.13.3.34 TCPIP_HTTP_NET_ConnectionRead Function@@@uint16_t TCPIP_HTTP_NET_ConnectionRead( TCPIP_HTTP_NET_CONN_HANDLE connHandle, void * buffer, uint16_t size ); This function reads an array of data bytes from the connection RX buffer. The data is...","GUID-385B0867-B937-48D7-A881-83FE2681238D.html@@@1.2.1.2.3.61 listen Function@@@int listen( SOCKET s, int backlog ); This function sets the specified socket in a listen mode. Calling the listen function indicates that the application is ready to accept connection requests...","GUID-389D1A67-F892-4990-87E8-7E1C06C09CCB.html@@@1.2.3.2.3.26 TCPIP_UDP_Put Function@@@uint16_t TCPIP_UDP_Put(UDP_SOCKET hUDP, uint8_t v); This function writes a single byte to the UDP socket, while incrementing the socket write pointer. TCPIP_UDP_PutIsReady could be used before calling...","GUID-38D8B7F7-F948-49E9-ADC6-58D7EC45CA41.html@@@1.2.5.2.59 TCPIP_MAC_TYPE Enumeration@@@typedef enum { TCPIP_MAC_TYPE_NONE = 0, TCPIP_MAC_TYPE_ETH, TCPIP_MAC_TYPE_WLAN, TCPIP_MAC_TYPES } TCPIP_MAC_TYPE; MAC Types. List of specific MAC types that indicate to the user of the MAC (TCP/IP...","GUID-39087128-B789-43C2-9051-FF6B16C602D8.html@@@1.2.1.23.3.2 TCPIP_TFTPS_ClientsNumber Function@@@uint8_t TCPIP_TFTPS_ClientsNumber(); number of active clients This function determines the number of active clients running for this TFTP server. The maximum possible clients will be as per the value...","GUID-391BB945-3CE5-41D7-8678-43CA3010FF3D.html@@@1.2.5.2.40 TCPIP_MAC_PKT_FreeF Type@@@typedef void (* TCPIP_MAC_PKT_FreeF)(TCPIP_MAC_PACKET* pPkt); Packet Allocation Function: typedef void (*TCPIP_MAC_PKT_FreeF)(TCPIP_MAC_PACKET* pPkt); This function is used by the MAC to free a...","GUID-3946508C-D64E-4555-BAC7-982960434F86.html@@@1.2.5.10.3.4 PPP_EVENT Enumeration@@@typedef enum { PPP_EVENT_NONE = 0, PPP_EVENT_UP, PPP_EVENT_DOWN, PPP_EVENT_OPEN, PPP_EVENT_CLOSE, PPP_EVENT_TMO_P, PPP_EVENT_TMO_N, PPP_EVENT_RCR_P, PPP_EVENT_RCR_N_NAK, PPP_EVENT_RCR_N_REJ...","GUID-395EDA67-22AD-40AC-AF69-BFA3D8B61F6F.html@@@1.2.5.2.58 TCPIP_MAC_TX_STATISTICS Structure@@@typedef struct { int nTxOkPackets; int nTxPendBuffers; int nTxErrorPackets; int nTxQueueFull; } TCPIP_MAC_TX_STATISTICS; MAC TX Statistics Data. This structure defines the TX statistics data for the...","GUID-3A0DFD6E-F6BC-4FE9-BAE4-BE22C34C21C0.html@@@2.2 Migrate MHC based TCP/IP Demos to TCP/IP Configurator@@@Follow the steps to migrate existing TCP/IP application demo to work with TCP/IP Configurator. Open TCP/IP application demo to migrate, in MPLAB X IDE Ensure that the project uses the latest toolchain...","GUID-3AC113E5-F369-44CF-B126-C38669674C51.html@@@1.2.1.22.3.8 TCPIP_TFTPC_HandlerRegister Function@@@TCPIP_TFTPC_HANDLE TCPIP_TFTPC_HandlerRegister( TCPIP_NET_HANDLE hNet, TCPIP_TFTPC_EVENT_HANDLER handler, const void* hParam ); This function registers a TFTPC event handler. The TFTP client module...","GUID-3AC795BB-D083-4D56-8E63-97B913264136.html@@@1.2.4.6 IPv6 Module@@@IPv6 is the workhorse protocol of the TCP/IP protocol suite. All TCP, UDP, ICMP, and IGMP data gets transmitted as IP datagrams. IP provides an unreliable, connectionless datagram delivery service...","GUID-3AD3867B-D9DE-42C2-885E-C8CF0E03F6D7.html@@@1.2.4.3.3.2 TCPIP_ICMPV6_CallbackRegister Function@@@ICMPV6_HANDLE TCPIP_ICMPV6_CallbackRegister(void (*callback)(TCPIP_NET_HANDLE hNetIf, uint8_t type, const IPV6_ADDR * localIP, const IPV6_ADDR * remoteIP, void * header)); ICMPV6_HANDLE Success...","GUID-3B3A4A57-7E7D-4FE9-8838-B9C0CB9816CC.html@@@1.2.5.2.27 TCPIP_MAC_PACKET Type@@@typedef struct _tag_TCPIP_MAC_PACKET TCPIP_MAC_PACKET; MAC Packet forward reference. Forward reference needed in the MAC packet acknowledge function. None. Name Description _tag_TCPIP_MAC_PACKET A...","GUID-3B616A02-D750-4527-8DEE-F2813CFF7E6C.html@@@1.2.1.22.3.6 TCPIP_TFTPC_HANDLE Type@@@typedef const void* TCPIP_TFTPC_HANDLE; Type: TCPIP_TFTPC_HANDLE. A handle that a client can use after the event handler has been registered...","GUID-3B965ED0-98F5-4D8C-BB55-9338298ABDDA.html@@@1.2.1.2.3.31 HOST_NOT_FOUND Macro@@@#define HOST_NOT_FOUND 1 // Authoritative Answer host not found Authoritative Answer host not found...","GUID-3B98E7AD-FA02-4354-B414-567671FF81C8.html@@@1.2.4.5.3.6 TCPIP_IPV4_FILTER_TYPE Enumeration@@@typedef enum { TCPIP_IPV4_FILTER_NONE = 0x00, TCPIP_IPV4_FILTER_UNICAST = 0x01, TCPIP_IPV4_FILTER_BROADCAST = 0x02, TCPIP_IPV4_FILTER_MULTICAST = 0x04 } TCPIP_IPV4_FILTER_TYPE; IPv4 packet filters...","GUID-3C993F99-405E-49EB-931F-2BB94DD0E8E7.html@@@1.2.1.2.3.94 SOCKET_DISCONNECTED Macro@@@#define SOCKET_DISCONNECTED (-3) //Socket disconnected Socket disconnected...","GUID-3CB70D90-B644-4EAC-8FF1-7620A2ADD8BF.html@@@1.2.1.2.3.55 IPV6_MULTICAST_HOPS Macro@@@#define IPV6_MULTICAST_HOPS 18 //Set the hop limit for multicast IPv6 packets - Not yet supported Set the hop limit for multicast IPv6 packets. Not yet supported...","GUID-3D0BA10F-4BC9-4755-9042-7B7A1861E748.html@@@1.2.1.7.3.39 TCPIP_DNS_Send_Query Function@@@TCPIP_DNS_RESULT TCPIP_DNS_Send_Query( const char* hostName, TCPIP_DNS_RESOLVE_TYPE type ); This function attempts to send a query packet for the supplied host name and DNS type. The DNS client module...","GUID-3D127332-A8D5-479B-A16B-B6ACD00F86FF.html@@@1.2.3.1.3.13 TCPIP_TCP_ArrayPeek Function@@@uint16_t TCPIP_TCP_ArrayPeek( TCP_SOCKET hTCP, uint8_t * vBuffer, uint16_t wLen, uint16_t wStart ); This function reads a specified number of data bytes from the TCP RX FIFO without removing them from...","GUID-3D759948-B4AF-4C19-A9CA-384C5F78489B.html@@@1.2.5.7.3.4 DRV_ETHMAC_PIC32MACDeinitialize Function@@@void DRV_ETHMAC_PIC32MACDeinitialize(SYS_MODULE_OBJ object); None. This function supports teardown of the PIC32 Ethernet MAC (opposite of set up). Used by tcpip_module_manager. This function...","GUID-3D7BA57F-823F-46C0-9F35-1FDCFD750061.html@@@1.2.2.1.3.64 NET_PRES_TransBind Type@@@typedef bool (* NET_PRES_TransBind)(NET_PRES_SKT_HANDLE_T handle, NET_PRES_TRANS_ADDRESS_TYPE addType, NET_PRES_SKT_PORT_T port, NET_PRES_ADDRESS * address); true - Indicates success false - Indicates...","GUID-3DCBDC86-05C6-47C7-B751-ADCC6A61A4BF.html@@@1.2.5.3.3.19 DRV_ENC28J60_RegisterStatisticsGet Function@@@TCPIP_MAC_RES DRV_ENC28J60_RegisterStatisticsGet(DRV_HANDLE hMac, TCPIP_MAC_STATISTICS_REG_ENTRY* pRegEntries, int nEntries, int* pHwEntries); TCPIP_MAC_RES_TYPE_ERR - if the hMac is invalid...","GUID-3DCBF1EB-5623-4419-B244-DDD9B01704EE.html@@@1.2.4.1.3 Library Interface@@@Name Description Macros ARP_CACHE_DELETE_OLD On initialization, delete the old cache if still in place Else don&apos;t re-initialize Default should be 1 TCPIP_ARP_CACHE_ENTRIES Number of entries in the...","GUID-3E259486-C4B1-4D6A-B5CC-D9BDE11599E8.html@@@1.2.5.10.3.14 PPP_EchoRequestCancel Function@@@PPP_ECHO_RESULT PPP_EchoRequestCancel (PPP_REQUEST_HANDLE pppHandle); PPP_ECHO_OK - Indicates the cancel request was successful PPP_ECHO_BAD_REQ_HANDLE - No such request is currently scheduled Invalid...","GUID-3E4E680B-B263-4F0A-B68B-578D2A1EC74C.html@@@1.2.5.3.3.18 DRV_ENC28J60_Process Function@@@TCPIP_MAC_RES DRV_ENC28J60_Process(DRV_HANDLE hMac); TCPIP_MAC_RES_TYPE_ERR - if the hMac is invalid TCPIP_MAC_RES_OP_ERR - if the hMac is valid ENC28J60 Process This function does additional...","GUID-3E71CAB9-E090-497F-8688-5EB3A9925A14.html@@@1.2.5.3.3.24 DRV_ENC28J60_StatisticsGet Function@@@TCPIP_MAC_RES DRV_ENC28J60_StatisticsGet(DRV_HANDLE hMac, TCPIP_MAC_RX_STATISTICS* pRxStatistics, TCPIP_MAC_TX_STATISTICS* pTxStatistics); TCPIP_MAC_RES_TYPE_ERR - if the hMac is invalid...","GUID-3EB90173-AE2B-4B3F-BE07-7BA9E443A82C.html@@@1.2.1.13.3.6 TCPIP_HTTP_DYN_VAR_FLAGS Enumeration@@@typedef enum { TCPIP_HTTP_DYN_VAR_FLAG_NONE = 0, TCPIP_HTTP_DYN_VAR_FLAG_NAME_TRUNCATED = 0x01, TCPIP_HTTP_DYN_VAR_FLAG_ARG_NAME_TRUNCATED = 0x02, TCPIP_HTTP_DYN_VAR_FLAG_ARG_NO_TRUNCATED = 0x04 }...","GUID-3ED7B96E-A9A1-4459-A472-92E365DF153F.html@@@1.2.1.6.3.11 TCPIP_DHCPV6_IA_INFO Structure@@@typedef struct { TCPIP_DHCPV6_IA_TYPE iaType; TCPIP_DHCPV6_IA_STATE iaState; TCPIP_DHCPV6_IA_SUBSTATE iaSubState; int iaIndex; uint32_t iaId; uint32_t tAcquire; uint32_t t1; uint32_t t2; IPV6_ADDR...","GUID-3EF78452-3F4A-4D80-8100-8AF7E15C89BE.html@@@1.2.2.1.3.65 NET_PRES_TransBool Type@@@typedef bool (* NET_PRES_TransBool)(NET_PRES_SKT_HANDLE_T handle); The result is passed directly through from the transport layer to the application. The meaning of the return is dependent on the...","GUID-3F20C5BB-4A7B-4F1E-892A-F37A6261BCA2.html@@@1.2.5.6.3.13 MAC_DRVR_Tasks Function@@@void MAC_DRVR_Tasks( SYS_MODULE_OBJ object ); None This function is used to maintain the driver&apos;s internal state machine. None The MAC_DRVR_Initialize() routine must have been called for the specified...","GUID-3F29431E-56A5-49C6-9321-E844E214FF3B.html@@@1.2.1.19.3.15 SNMPV3_HMAC_HASH_TYPE Enumeration@@@typedef enum { SNMPV3_HMAC_MD5 = 0u, SNMPV3_HMAC_SHA1, SNMPV3_NO_HMAC_AUTH } SNMPV3_HMAC_HASH_TYPE; Enumeration: SNMPV3_HMAC_HASH_TYPE. The following authentication types are supported by the SNMPv3...","GUID-3F7A7AD0-BF6D-4D89-8EA3-CD8F046E3DF1.html@@@1.2.5.3.3.23 DRV_ENC28J60_StackInitialize Function@@@SYS_MODULE_OBJ DRV_ENC28J60_StackInitialize(SYS_MODULE_INDEX index, const SYS_MODULE_INIT * const init); Returns a valid handle to the driver instance - If successful SYS_MODULE_OBJ_INVALID - If...","GUID-3FB194B0-D981-437C-A414-589E2F6AA6B1.html@@@1.2.4.4.3.4 TCPIP_IGMP_FILTER_TYPE Enumeration@@@typedef enum { TCPIP_IGMP_FILTER_NONE, TCPIP_IGMP_FILTER_INCLUDE, TCPIP_IGMP_FILTER_EXCLUDE } TCPIP_IGMP_FILTER_TYPE; Enumeration: TCPIP_IGMP_FILTER_TYPE. These filters are currently supported by...","GUID-3FB7E1A3-E2CF-43D2-B8BB-8E306C170FF3.html@@@1.2.1.11.2 Library Interface@@@Name Description Macros TCPIP_FTP_PASSWD_LEN Specifies the max length of FTP login password TCPIP_FTP_USER_NAME_LEN Specifies the max length for user name TCPIP_FTP_DATA_SKT_RX_BUFF_SIZE Define the...","GUID-3FC184D7-6862-450E-9C44-AE6C5FC000E9.html@@@1.2.5.7.3.13 DRV_ETHMAC_PIC32MACParametersGet Function@@@TCPIP_MAC_RES DRV_ETHMAC_PIC32MACParametersGet(DRV_HANDLE hMac, TCPIP_MAC_PARAMETERS* pMacParams); TCPIP_MAC_RES_OK if pMacParams updated properly a TCPIP_MAC_RES error code if processing failed for...","GUID-3FCD898D-4FBE-45F7-90AF-5AFA95E68831.html@@@1.2.5.5.3.4 DRV_GMAC_EventAcknowledge Function@@@bool DRV_GMAC_EventAcknowledge(DRV_HANDLE hMac, TCPIP_MAC_EVENT tcpAckEv); true if events acknowledged false if no events to be acknowledged This function acknowledges and re-enables processed events...","GUID-4011D1B2-FEE8-4890-A55D-45D3134C7C31.html@@@1.2.1.10.3.16 TCPIP_FTPC_DATA_STRUCT_TYPE Enumeration@@@typedef enum { TCPIP_FTPC_STRUCT_FILE = 1, TCPIP_FTPC_STRUCT_RECORD, TCPIP_FTPC_STRUCT_PAGE, TCPIP_FTPC_STRUCT_UNSUPPORTED } TCPIP_FTPC_DATA_STRUCT_TYPE; Enumeration: TCPIP_FTPC_DATA_STRUCT_TYPE...","GUID-4018B58C-FE75-4006-981F-15D77AACCE1C.html@@@1.2.1.19.1 Abstraction Model@@@SNMP Server (Agent) SNMP is an Internet protocol that was originally designed to manage different network devices, such as file servers, hubs, routers, and so on. It can also be used to manage and...","GUID-401DB0EE-4E91-43C7-B2F8-C95944BFE726.html@@@1.2.4.5.3.20 TCPIP_IPV4_PacketGetSourceAddress Function@@@TCPIP_IPV4_PacketGetSourceAddress( TCPIP_MAC_PACKET* pPkt ); The function will return a pointer to where the IPv4 source address is located in the TCPIP_MAC_PACKET. The TCPIP_MAC_PACKET is supposed to...","GUID-40F3DA06-6EB0-4FEA-AAD2-08EC8DA5DE2F.html@@@1.2.3.2.3.24 TCPIP_UDP_PacketHandlerRegister Function@@@TCPIP_UDP_PROCESS_HANDLE TCPIP_UDP_PacketHandlerRegister(TCPIP_UDP_PACKET_HANDLER pktHandler, const void* handlerParam); a valid TCPIP_UDP_PROCESS_HANDLE - if the operation succeeded NULL - if the...","GUID-412C87A5-C2E5-463A-94E3-5C2D08950144.html@@@1.2.1.5.3.19 TCPIP_DHCPS_LeaseGetInfo Function@@@TCPIP_DHCPS_RES TCPIP_DHCPS_LeaseGetInfo(TCPIP_NET_HANDLE netH, TCPIP_DHCPS_LEASE_INFO* pLeaseInfo, uint16_t leaseIx); Get the lease entry details for the requested lease index This function returns a...","GUID-4148DC28-DEDC-491C-A495-AEB5B2CA6CE5.html@@@1.2.1.20.3.1 TCPIP_SNTP_ConnectionInitiate Function@@@TCPIP_SNTP_RESULT TCPIP_SNTP_ConnectionInitiate(); This function will start a connection to the NTP server. The TCP/IP Stack should have been inititialized. SNTP_RES_OK - If the call succeeded...","GUID-4156C65D-82C8-485F-A6D1-772DCEEE0E1E.html@@@1.2.5.9.3.22 DRV_MIIM_OperationResult Function@@@DRV_MIIM_RESULT DRV_MIIM_OperationResult(DRV_HANDLE handle, DRV_MIIM_OPERATION_HANDLE opHandle, uint16_t* pOpData); DRV_MIIM_RESULT value describing the current operation result: DRV_MIIM_RES_OK for...","GUID-41573635-4285-44CF-9670-BFC3104F657B.html@@@1.2.6.1.1.3.72 TCPIP_STACK_NetAddressMac Function@@@const uint8_t* TCPIP_STACK_NetAddressMac( TCPIP_NET_HANDLE netH ); This function returns the network interface physical (MAC) address. The interface should be enabled for this function to work. The...","GUID-41997673-B586-4C0B-8D5D-F6B1F10B591C.html@@@1.1.1 Introduction@@@The MPLAB Harmony TCP/IP Stack provides a foundation for embedded network applications by handling most of the interaction required between the physical network port and the application. It includes...","GUID-42116EA0-41D4-48B6-B238-1AC394278CA9.html@@@1.2.5.3.3.15 DRV_ENC28J60_PacketTx Function@@@TCPIP_MAC_RES DRV_ENC28J60_PacketTx(DRV_HANDLE hMac, TCPIP_MAC_PACKET * ptrPacket); TCPIP_MAC_RES_OP_ERR - if the client handle is invalid TCPIP_MAC_RES_IS_BUSY - if the driver is not in the run state...","GUID-423D57AB-1732-46C4-B8B8-76A3483D6CB9.html@@@1.2.3.2.3.37 TCPIP_UDP_SOCKET_DEFAULT_TX_QUEUE_LIMIT Macro@@@#define TCPIP_UDP_SOCKET_DEFAULT_TX_QUEUE_LIMIT 3 The maximum number of TX packets that can be queued by an UDP socket at a certain time. For sockets that need to transfer a lot of data (Iperf, for...","GUID-4260D9D5-06A3-4388-9E49-AB9E449EA7B2.html@@@1.2.1.19.3.21 TCPIP_SNMP_AuthTrapFlagSet Function@@@void TCPIP_SNMP_AuthTrapFlagSet( bool sendTrap ); This function is used to set the authentication trap send flag and this is used only when user is trying to send authentication failure trap. Ex...","GUID-4288524A-F644-4AA0-9FBA-F67EA0F2060F.html@@@1.2.5.6.3.17 MAC_DRVR_StatisticsGet Function@@@TCPIP_MAC_RES MAC_DRVR_StatisticsGet( DRV_HANDLE hMac, TCPIP_MAC_RX_STATISTICS * pRxStatistics, TCPIP_MAC_TX_STATISTICS * pTxStatistics ); TCPIP_MAC_RES_OK if all processing went on OK...","GUID-42D88D3B-9B1E-4A3A-B4A8-05E33BEF3880.html@@@1.2.1.2.3.12 closesocket Function@@@int closesocket( SOCKET s ); The closesocket function closes an existing socket. This function releases the socket descriptor s. Any data buffered at the socket is discarded. If the socket s is no...","GUID-42E17488-1EC2-4F8C-9919-30CC6D0F812F.html@@@1.2.1.12.2.28 TCPIP_HTTP_CurrentConnectionStatusSet Function@@@void TCPIP_HTTP_CurrentConnectionStatusSet( HTTP_CONN_HANDLE connHandle, HTTP_STATUS stat ); Allows write access to the HTTP status of the selected HTTP connection. None. Parameters Description...","GUID-4304B523-D25B-44E8-8ED1-D8EE5041BD52.html@@@1.2.6.2.2.3 TCPIP_COMMAND_Task Function@@@void TCPIP_COMMAND_Task(void); None This function performs TCP/IP command module tasks in the TCP/IP stack. None The TCP/IP Command module should have been initialized. None...","GUID-430DEB4B-1ACE-44A6-A6CE-D220080CF2B5.html@@@1.2.1.19.3.39 TCPIP_SNMP_Task Function@@@void TCPIP_SNMP_Task(); This function performs SNMP module tasks in the TCP/IP stack. The SNMP module should have been initialized. None. None...","GUID-435E5152-700F-47EC-ABAB-B2E33D885E55.html@@@1.2.5.2.16 TCPIP_MAC_HEAP_FreeF Type@@@typedef size_t (* TCPIP_MAC_HEAP_FreeF)(TCPIP_MAC_HEAP_HANDLE heapH, const void* pBuff); Memory Allocation Function: typedef size_t (*TCPIP_MAC_HEAP_FreeF)(TCPIP_MAC_HEAP_HANDLE heapH, const void*...","GUID-437FBA33-13E8-4E89-B92F-E5E9AAFAFA90.html@@@1.2.4.6.3.26 IPV6_TLV_PAD_1 Macro@@@#define IPV6_TLV_PAD_1 0u IPv6 Type-length-value type code for the Pad 1 option...","GUID-439D69E3-ABD1-4304-BDCB-F8DBA503B7EB.html@@@1.2.5.5.3.10 DRV_GMAC_Open Function@@@DRV_HANDLE DRV_GMAC_Open(const SYS_MODULE_INDEX drvIndex, const DRV_IO_INTENT intent); DRV_HANDLE - handle (pointer) to MAC client 0 if call failed This function opens a client instance of the PIC32...","GUID-43CB853B-06D8-4F48-80BD-46E29145B2F0.html@@@1.2.2.1.3.62 NET_PRES_TRANS_ADDRESS_TYPE Enumeration@@@typedef enum { NET_PRES_ADDRT_UNKNOWN } NET_PRES_TRANS_ADDRESS_TYPE; MPLAB Harmony Networking Presentation Layer Address type Defines the enumeration for the type of address. This enumeration is not...","GUID-442B009E-B494-4058-BCC9-2671F0FFA291.html@@@1.2.1.20.3.6 TCPIP_SNTP_HANDLE Type@@@typedef const void* TCPIP_SNTP_HANDLE; A handle that a client can use after the even handler has been registered...","GUID-4442D4BA-8525-4E52-92DE-7492FEC95509.html@@@1.2.1.13.3.33 TCPIP_HTTP_NET_ConnectionPostValueRead Function@@@TCPIP_HTTP_NET_READ_STATUS TCPIP_HTTP_NET_ConnectionPostValueRead( TCPIP_HTTP_NET_CONN_HANDLE connHandle, uint8_t* cData, uint16_t wLen ); This function reads a value from a URL encoded string in the...","GUID-448D4554-6A26-4D2D-A74B-2CFF075D135F.html@@@1.2.5.9.3.14 DRV_MIIM_INSTANCE_OPERATIONS Macro@@@#define DRV_MIIM_INSTANCE_OPERATIONS 4 MIIM instance operations This definition selects the maximum number of simultaneous operations that can be supported by this driver. Note that this represents...","GUID-44B3F123-A04B-4C85-A6E4-F1E7153C1318.html@@@1.2.1.2.3.95 SOCKET_ERROR Macro@@@#define SOCKET_ERROR (-1) //Socket error Socket error...","GUID-44B4E502-12AB-42ED-80DE-226809A1A6A6.html@@@1.2.3.2.3.6 TCPIP_UDP_Close Function@@@bool TCPIP_UDP_Close(UDP_SOCKET hUDP); true - If the call succeeded false - If the call failed (no such socket) Closes a UDP socket and frees the handle. Call this function to release a socket and...","GUID-44EE1044-2000-4DDE-843F-49D8120E3A07.html@@@1.2.2.1.3.69 NET_PRES_TransIsPortDefaultSecured Type@@@typedef bool (* NET_PRES_TransIsPortDefaultSecured)(uint16_t port); true - The port is encrypted by default and the presentation layer will start negotiating encryption when it is connected. false...","GUID-450F196C-1A6C-4CFA-9C1B-EB42BD3F1E49.html@@@1.2.1.12.2.45 TCPIP_HTTP_Print_varname Function@@@void TCPIP_HTTP_Print_varname( HTTP_CONN_HANDLE connHandle, uint16_t wParam1, uint16_t wParam2, ... ); Functions in this style are implemented by the application developer. These functions generate...","GUID-452D786F-6D8D-4201-BB10-6483F678465E.html@@@1.2.2.1.3.12 NET_PRES_EncProviderOpen Type@@@typedef bool (* NET_PRES_EncProviderOpen)(uintptr_t transHandle, void * providerData); true - Create succeeded false - Create did not succeed Presentation Encryption Provider Open Connection Prototype...","GUID-455343FF-D0C5-45F1-B7C2-C566D20C8D95.html@@@1.2.1.1.3.3 TCPIP_ANNOUNCE_FIELD_PAYLOAD Enumeration@@@typedef enum { TCPIP_ANNOUNCE_FIELD_NONE = 0, TCPIP_ANNOUNCE_FIELD_TRUNCATED, TCPIP_ANNOUNCE_FIELD_MAC_ADDR, TCPIP_ANNOUNCE_FIELD_MAC_NAME, TCPIP_ANNOUNCE_FIELD_HOST_NAME...","GUID-4567539C-B19F-4DBD-A86E-031C8679AFF8.html@@@1.2.3.1.3.6 TCP_SOCKET Type@@@typedef uint16_t TCP_PORT; Type: TCP_PORT. TCP Port Number identifier...","GUID-458FCBC5-EF30-42B0-BB03-100FAB5E96FB.html@@@1.2.5.7.3.12 DRV_ETHMAC_PIC32MACPacketTx Function@@@TCPIP_MAC_RES DRV_ETHMAC_PIC32MACPacketTx(DRV_HANDLE hMac, TCPIP_MAC_PACKET * ptrPacket); TCPIP_MAC_RES_OK if success a TCPIP_MAC_RES error value if failed This is the MAC transmit function. Using...","GUID-45A57DE2-98BB-4151-984C-801E985F191D.html@@@1.2.5.4.3.17 DRV_ENCX24J600_PowerMode Function@@@bool DRV_ENCX24J600_PowerMode(DRV_HANDLE hMac, TCPIP_MAC_POWER_MODE pwrMode); false - This functionality is not supported in this version of the driver ENCX24J600 Power Mode This function sets the...","GUID-45B8A2AF-2972-467D-832A-BA1B061F993D.html@@@1.2.1.20.3.14 TCPIP_SNTP_TimeGet Function@@@TCPIP_SNTP_RESULT TCPIP_SNTP_TimeGet( uint32_t* pUTCSeconds, uint32_t* pMs ); This function obtains the current time as reported by the SNTP module. Use this value for absolute time stamping. The...","GUID-45C0E86E-9D4C-416C-80EA-B3C01158086A.html@@@1.2.4.2.3.5 TCPIP_ICMP_CallbackRegister Function@@@ICMP_HANDLE TCPIP_ICMP_CallbackRegister( void (*callback)(TCPIP_NET_HANDLE hNetIf, IPV4_ADDR * remoteIP, void * data) ); Allows a stack client to be notified of the receiving of a response from an...","GUID-45F06B75-B37F-41E2-81C1-B463535CC07D.html@@@1.2.1.1.3.1 TCPIP_ANNOUNCE_BROADCAST_TYPE Enumeration@@@typedef enum { TCPIP_ANNOUNCE_BCAST_NONE, TCPIP_ANNOUNCE_BCAST_NET_LIMITED, TCPIP_ANNOUNCE_BCAST_NET_DIRECTED } TCPIP_ANNOUNCE_BROADCAST_TYPE; Enumeration: TCPIP_ANNOUNCE_BROADCAST_TYPE - Describes...","GUID-4616AADB-34DF-45A4-9EFB-954AE15A3F90.html@@@1.2.4.5.3.12 TCPIP_IPV4_OPTION_TYPE Enumeraion@@@typedef enum { TCPIP_IPV4_OPTION_NONE = 0, TCPIP_IPV4_OPTION_ROUTER_ALERT = 20 } TCPIP_IPV4_OPTION_TYPE; IPv4 options. This is the list of the options that are supported by this IPv4 implementation...","GUID-4625117E-A939-44EE-BBF7-DBA7AD015F21.html@@@1.2.1.22.3.7 TCPIP_TFTPC_HandlerDeRegister Function@@@bool TCPIP_TFTPC_HandlerDeRegister( TCPIP_TFTPC_HANDLE hDhcp ); This function deregisters the TFTP client event handler. The TFTP client module must be initialized. The TFTP client module must be...","GUID-46322265-3A95-4FFC-8EFE-BC410F8C8A31.html@@@1.2.6.1.1.3.2 _TCPIP_MANAGER_H Macro@@@#define __TCPIP_MANAGER_H_ This is macro __TCPIP_MANAGER_H_...","GUID-4642776A-7413-4A77-9C0C-9A2E5789B1BE.html@@@1.2.1.7.3.18 TCPIP_DNS_Disable Function@@@bool TCPIP_DNS_Disable( TCPIP_NET_HANDLE hNet, bool clearCache ); This function disables the DNS Client for the specified interface. The DNS module must be initialized. Parameters Description hNet...","GUID-46507245-B606-4FAC-A271-E16B75D0AFF6.html@@@1.2.1.6.3.3 TCPIP_DHCPV6_ClientInfoGet Function@@@bool TCPIP_DHCPV6_ClientInfoGet( TCPIP_NET_HANDLE hNet, TCPIP_DHCPV6_CLIENT_INFO* pClientInfo ); Client status reporting...","GUID-466B5C12-06AE-4050-B87C-DFD1D82C1D1C.html@@@1.2.1.19.3.2 SNMP_END_OF_VAR Macro@@@#define SNMP_END_OF_VAR (0xff) This Macro is used for both SNMP SET and GET Variable processing to indicate the end of SNMP variable processing. For multi byte data request, the end byte will be...","GUID-46949337-6D5B-4851-A9C9-9544E27C439B.html@@@1.2.1.2.2 Berkeley Sockets API Configurations@@@Berkeley Sockets API Specific User Configurations Maximum Number of Simultaneous Sockets: Berkeley API max number of sockets simultaneous supported Default value: 4 Symbol MAX_BSD_SOCKETS...","GUID-469981DB-5DBF-4E8B-BFFE-6EB386F32BB2.html@@@1.2.6.1.1.3.92 TCPIP_STACK_NetMACStatisticsGet Function@@@bool TCPIP_STACK_NetMACStatisticsGet( TCPIP_NET_HANDLE netH, TCPIP_MAC_RX_STATISTICS* pRxStatistics, TCPIP_MAC_TX_STATISTICS* pTxStatistics ); This function returns the statistics data of the MAC...","GUID-469A6DE1-2F6D-4157-A352-770990EB018F.html@@@1.2.2.1.1 Abstraction Model@@@Library Overview The Library Interface routines are divided into various sub-sections, which address one of the blocks or the overall operation of the Networking Presentation Layer. Library Interface...","GUID-46C3BA25-A36F-4BA7-82B4-19DB6A5DAC82.html@@@1.2.1.7.3.36 TCPIP_DNS_Resolve Function@@@TCPIP_DNS_RESULT TCPIP_DNS_Resolve( const char* hostName, TCPIP_DNS_RESOLVE_TYPE type ); This function attempts to resolve a host name to an IP address. When called, it will attempt to send a DNS...","GUID-46FA29F7-2B23-4A12-8246-9C556FF4A702.html@@@1.2.1.10.3.5 TCPIP_FTPC_CONN_HANDLE_TYPE Type@@@typedef const void* TCPIP_FTPC_CONN_HANDLE_TYPE; Type: TCPIP_FTPC_CONN_HANDLE_TYPE Data type describing a handle that identifies a FTP connection This handle is to be used by all FTP Client APIs . A...","GUID-47111128-D371-4827-B15C-7E852623495C.html@@@1.2.1.7.3.31 TCPIP_DNS_IsEnabled Function@@@bool TCPIP_DNS_IsEnabled( TCPIP_NET_HANDLE hNet ); This function returns the current state of DNS Client on the specified interface. The DNS module must be initialized. Parameters Description hNet...","GUID-471E5DF3-2EAD-460A-B963-894E6FE9B915.html@@@1.2.1.19.3.27 TCPIP_SNMP_IsValidLength Function@@@bool TCPIP_SNMP_IsValidLength( SNMP_ID var, uint8_t len, uint8_t index ); This function is used to validate the dynamic variable data length to the variable data type. It is called before the SET...","GUID-472B1332-63C7-405D-9396-B75872D19FD7.html@@@1.2.1.12.2.37 TCPIP_HTTP_FileAuthenticate Function@@@uint8_t TCPIP_HTTP_FileAuthenticate( HTTP_CONN_HANDLE connHandle, uint8_t* cFile ); This function is implemented by the application developer. Its function is to determine if a file being requested...","GUID-474FCB42-ED87-4467-918F-826F4E11F025.html@@@1.2.1.9.3.11 TCPIP_DNSS_RESOLVE_TYPE Enumeration@@@typedef enum { TCPIP_DNSS_TYPE_A = 1, TCPIP_DNSS_TYPE_MX = 15, TCPIP_DNSS_TYPE_AAAA = 28u, TCPIP_DNSS_TYPE_ANY = 0xff } TCPIP_DNSS_RESOLVE_TYPE; Enumeration: TCPIP_DNSS_RESOLVE_TYPE This enumeration...","GUID-475EA177-97E0-48BA-9344-49A2B23E9557.html@@@1.2.1.19.3.7 SNMP_NON_MIB_RECD_INFO Structure@@@typedef struct { uint8_t oidstr[16]; uint8_t version; } SNMP_NON_MIB_RECD_INFO; Structure: SNMP_NON_MIB_RECD_INFO This structure is used to restrict access to static variables of SNMPv3 OIDs from...","GUID-487990F4-7070-4E79-9738-3A088AD13DD6.html@@@1.2.1.3.3.8 TCPIP_DHCP_HOST_NAME_CALLBACK Type@@@typedef char* (* TCPIP_DHCP_HOST_NAME_CALLBACK)(TCPIP_NET_HANDLE hNet); Type: TCPIP_DHCP_HOST_NAME_CALLBACK. Prototype of a DHCP callback function that returns the host name to be presented to the...","GUID-4882F386-766E-438D-8CDD-0F9D48F29610.html@@@1.2.5.5.3.11 DRV_GMAC_PacketRx Function@@@TCPIP_MAC_PACKET* DRV_GMAC_PacketRx(DRV_HANDLE hMac, TCPIP_MAC_RES* pRes, const TCPIP_MAC_PACKET_RX_STAT** ppPktStat); a valid pointer to an available RX packet 0 if no packet pending/available This...","GUID-48856CAB-57DC-483F-91E4-D7AFE5250775.html@@@1.2.3.2.2 User Datagram Protocol (UDP) Configurations@@@UDP Specific User Configurations Maximum number of Sockets: Maximum number of UDP sockets that can be opened simultaneously These sockets will be created when the module is initialized. Default value...","GUID-488FF282-E9CC-4548-8140-E3C76AEBEF61.html@@@1.2.6.1.1.3.50 TCPIP_STACK_HEAP_LastError Function@@@TCPIP_STACK_HEAP_RES TCPIP_STACK_HEAP_LastError( TCPIP_STACK_HEAP_HANDLE heapH ); This function returns the last error encountered in a heap operation. It clears the value of the last error variable...","GUID-48CB3F61-A4F6-4497-A547-8F85DA2D3500.html@@@1.2.1.12.2.12 TCPIP_HTTP_CurrentConnectionCallbackPosGet Function@@@uint32_t TCPIP_HTTP_CurrentConnectionCallbackPosGet( HTTP_CONN_HANDLE connHandle ); This function will return the current value of the callback position indicator for the HTTP connection identified by...","GUID-48D3AA1B-433F-4BE0-8DCA-38ADDF677E3B.html@@@1.2.5.3.3.25 DRV_ENC28J60_Status Function@@@SYS_STATUS DRV_ENC28J60_Status(SYS_MODULE_OBJ obect); SYS_STATUS_ERROR - if an invalid handle has been passed in SYS_STATUS_UNINITIALIZED - if the driver has not completed initialization...","GUID-497581E4-34BB-4CC1-A490-1B57C11F5967.html@@@1.2.5.1 TCP/IP Stack Network Configuration@@@The NETCONFIG block within the TCP/IP Stack is a configuration component that allows users/developers to set up various network parameters for their application. This component typically includes...","GUID-49B5D6B0-6CA1-4B6B-894B-88324C6E48CF.html@@@1.2.1.4.3.12 TCPIP_DHCPS_RemovePoolEntries Function@@@bool TCPIP_DHCPS_RemovePoolEntries( TCPIP_NET_HANDLE netH, TCPIP_DHCPS_POOL_ENTRY_TYPE type ); This function is used to remove the DHCP server entries from the pool as per TCPIP_DHCPS_POOL_ENTRY_TYPE...","GUID-4A533CD6-F51B-40FF-B246-4C311EF2D4E4.html@@@1.2.5.3.3.17 DRV_ENC28J60_PowerMode Function@@@bool DRV_ENC28J60_PowerMode(DRV_HANDLE hMac, TCPIP_MAC_POWER_MODE pwrMode); false - This functionality is not supported in this version of the driver ENC28J60 Power Mode This function sets the power...","GUID-4AB21673-F12D-439C-A927-7C9EA31B0FB7.html@@@1.2.1.4.1 Abstraction Model@@@This module provides software abstraction of the DHCP Server module existent in any TCP/IP Stack implementation. It removes the overhead of address resolution from all other modules in the stack How...","GUID-4AC3513B-4F4D-4D95-B2D8-52BA8CEF741B.html@@@1.2.5.10.3.8 PPP_STAT_HANDLE Type@@@typedef const void* PPP_STAT_HANDLE; A handle that a client can use after the PPP statistics handler has been registered...","GUID-4AD197E5-65ED-4509-A821-E27387114EE0.html@@@1.2.5.2.50 TCPIP_MAC_RxFilterHashTableEntrySet Function@@@TCPIP_MAC_RES TCPIP_MAC_RxFilterHashTableEntrySet( DRV_HANDLE hMac, const TCPIP_MAC_ADDR* DestMACAddr ); This function sets the MAC hash table filtering to allow packets sent to DestMACAddr to be...","GUID-4B19C888-F3A6-4680-8508-BBC4BA473F08.html@@@1.2.1.7.3.33 TCPIP_DNS_IsResolved Function@@@TCPIP_DNS_RESULT TCPIP_DNS_IsResolved( const char* hostName, IP_MULTI_ADDRESS* hostIP, IP_ADDRESS_TYPE type ); Call this function to determine if the DNS resolution of an address has been completed...","GUID-4B5D0D38-3E38-4109-A20A-66A18773B272.html@@@1.2.1.21.3.4 TCPIP_TELNET_CONN_INFO Structure@@@typedef struct { uint16_t connIx; uint16_t state; int16_t presSkt; int16_t tcpSkt; TCP_SOCKET_INFO tcpInfo; } TCPIP_TELNET_CONN_INFO; Structure: TCPIP_TELNET_CONN_INFO. Gets information about a telnet...","GUID-4B6D3FBF-37B0-4452-B11D-E9F23D830CE1.html@@@1.2.1.13.3.18 TCPIP_HTTP_NET_ConnectionDynamicDescriptors Function@@@int TCPIP_HTTP_NET_ConnectionDynamicDescriptors(); This function returns the number of the dynamic variable buffer descriptors that are allocated by the HTTP for dynamic variable processing. None. The...","GUID-4B6DA909-656C-487D-91BC-12B0AB06A672.html@@@1.2.1.12.2.26 TCPIP_HTTP_CurrentConnectionSocketGet Function@@@TCP_SOCKET TCPIP_HTTP_CurrentConnectionSocketGet( HTTP_CONN_HANDLE connHandle ); The function returns the TCP socket of the specified HTTP connection. The user gets access to the connection socket...","GUID-4B92A36F-F27E-44A4-8CA7-9CAF2B84559C.html@@@1.2.4.5.3.19 TCPIP_IPV4_PacketGetDestAddress Function@@@TCPIP_IPV4_PacketGetDestAddress( TCPIP_MAC_PACKET* pPkt ); The function will return a pointer to where the IPv4 destination address is located in the TCPIP_MAC_PACKET. The TCPIP_MAC_PACKET is supposed...","GUID-4BB37FFE-93A6-4C0B-B8C9-EC835EEAE147.html@@@1.2.1.18.3.2 TCPIP_SMTPC_ATTACH_BUFFER Structure@@@typedef struct { TCPIP_SMTPC_ATTACH_TYPE attachType; TCPIP_SMTPC_ENCODE_TYPE attachEncode; const char* attachName; const uint8_t* attachBuffer; size_t attachSize; } TCPIP_SMTPC_ATTACH_BUFFER...","GUID-4BE7A1A1-381E-4DC9-A0D4-72EA9B56165A.html@@@1.2.1.5.3.8 TCPIP_DHCPS_EVENT_HANDLER Type@@@typedef void (*TCPIP_DHCPS_EVENT_HANDLER)(TCPIP_NET_HANDLE hNet, TCPIP_DHCPS_EVENT_TYPE evType, uint32_t evInfo1, uint32_t evInfo2, const void* param); DHCP event handler prototype. Prototype of a...","GUID-4BFC71FD-058B-4267-95E7-CA41C886D179.html@@@1.2.1.13.3.58 TCPIP_HTTP_NET_URLDecode Function@@@uint8_t* TCPIP_HTTP_NET_URLDecode( uint8_t* cData ); This function parses a string from URL encoding to plain text. The following conversions are made: \u2018=\u2019 to \u20180\u2019, \u2018&\u2019 to \u20180\u2019, \u2018+\u2019 to \u2018 \u2018, and \u201C%xx\u201D to...","GUID-4C1B2C58-4567-4545-965D-58C9C5F8EA98.html@@@1.2.5.8.4.12 DRV_ETHPHY_INIT Structure@@@struct DRV_ETHPHY_INIT { SYS_MODULE_INIT moduleInit; uintptr_t ethphyId; uint16_t phyAddress; DRV_ETHPHY_CONFIG_FLAGS phyFlags; const DRV_ETHPHY_OBJECT* pPhyObject; DRV_ETHPHY_RESET_FUNCTION...","GUID-4C21649D-F597-4151-8607-5281DF9F04CC.html@@@1.2.4.3.3 Library Interface@@@Name Description Functions TCPIP_ICMPV6_CallbackDeregister Deregisters an upper-layer function from ICMPv6 callback. TCPIP_ICMPV6_Flush Flushes a ICMPv6 packet. TCPIP_ICMPV6_HeaderEchoRequestPut...","GUID-4C35C867-F0E3-426C-97DF-EC69966202B7.html@@@1.2.6.1.1.2 TCP/IP Stack Manager Configurations@@@TCP/IP Manager Specific User Configurations TCP/IP Stack State Machine Tick Rate, ms.: The TCP/IP task will require a timer event with this rate for maintaining its own state machine, processing...","GUID-4C6B8A89-9CD3-4698-BF46-0AD17288090B.html@@@1.2.1.7.3.23 TCPIP_DNS_EVENT_HANDLER Type@@@typedef void (* TCPIP_DNS_EVENT_HANDLER)(TCPIP_NET_HANDLE hNet, TCPIP_DNS_EVENT_TYPE evType, const char* name, const void* param); Type: TCPIP_DNS_EVENT_HANDLER. The format of a notification handler...","GUID-4CC6E754-D7DA-499C-81A5-20DEFFB63D25.html@@@1.2.1.7.3.6 TCPIP_DNS_CLIENT_CACHE_PER_IPV6_ADDRESS Macro@@@#define TCPIP_DNS_CLIENT_CACHE_PER_IPV6_ADDRESS 1 Maximum and default number of IPv6 answers to be considered while processing DNS response from server for a query...","GUID-4D01713E-3500-4C3B-B5BB-3D12C3FC3157.html@@@1.2.2.1.3.49 NET_PRES_SocketOptionsSet Function@@@bool NET_PRES_SocketOptionsSet(NET_PRES_SKT_HANDLE_T handle, NET_PRES_SKT_OPTION_TYPE option, void* optParam); true - Indicates success false - Indicates failure Various options can be set at the...","GUID-4D261A34-344C-4CF2-8AF9-3C32257BA720.html@@@1.2.1.7.3.12 TCPIP_DNS_CLIENT_MODULE_CONFIG Structure@@@typedef struct { bool deleteOldLease; int cacheEntries; uint32_t entrySolvedTmo; int nIPv4Entries; IP_ADDRESS_TYPE ipAddressType; int nIPv6Entries; } TCPIP_DNS_CLIENT_MODULE_CONFIG; Structure...","GUID-4D80AFEC-3292-477F-8723-54C9434853F4.html@@@1.2.3.2.3.21 TCPIP_UDP_OptionsSet Function@@@bool TCPIP_UDP_OptionsSet(UDP_SOCKET hUDP, UDP_SOCKET_OPTION option, void* optParam); true - Indicates success false - Indicates failure Various options can be set at the socket level. Changing the...","GUID-4D827C17-9623-4A0D-B3B2-9D58016C4859.html@@@1.2.6.1.1.3.70 TCPIP_STACK_NetAddressGateway Function@@@uint32_t TCPIP_STACK_NetAddressGateway( TCPIP_NET_HANDLE netH ); If interface is enabled then the function will return the IPv4 gateway address of the network interface. The TCPIP_STACK_Initialize()...","GUID-4D83D14D-F726-4FE8-B61E-17E9CB9C92AC.html@@@1.2.1.4.3.9 TCPIP_DHCPS_LeaseEntryRemove Function@@@bool TCPIP_DHCPS_LeaseEntryRemove( TCPIP_NET_HANDLE netH, TCPIP_MAC_ADDR* hwAdd ); This function is used to remove one entry from the leased HASH table with respect to the interface and the MAC...","GUID-4D93F091-C019-4DB2-B423-205D2E3B069A.html@@@1.2.5.6.3.1 MAC_DRVR_Open Function@@@DRV_HANDLE MAC_DRVR_Open( const SYS_MODULE_INDEX drvIndex, const DRV_IO_INTENT intent ); DRV_HANDLE - pointer to MAC client 0 if call failed This function opens a client instance of the PIC32 MAC...","GUID-4DF2541D-DF50-45F1-A4E8-1233E5161579.html@@@1.2.1.7.3.27 TCPIP_DNS_GetIPv6Addresses Function@@@int TCPIP_DNS_GetIPv6Addresses( const char* hostName, int startIndex, IPV6_ADDR* pIPv6Addr, int nIPv6Addresses ); This function will return IPv6 addresses for a host name if the DNS resolution has...","GUID-4E30A890-0CC4-4E0E-A104-94A01B071521.html@@@1.2.1.14.2 Iperf Configurations@@@Iperf Specific User Configurations Number of Iperf Instances: Maximum number of simultaneously running iperf instances Default value: 1 Symbol TCPIP_IPERF_MAX_INSTANCES Socket TX Buffer Size: Default...","GUID-4E370563-CACE-4BE6-8770-228A43CC6BCE.html@@@1.2.1.23.2 TFTP Server Configurations@@@TFTP Server Specific User Configurations Maximum number of Clients: The number of Clients requests will be processed for the TFTP server stack. Default value: 3 Symbol TCPIP_TFTPS_CLIENT_NUMBER...","GUID-4E3E9377-68EA-48AA-98EB-46D8991416A5.html@@@1.2.1.7.3.13 TCPIP_DNS_CLIENT_SERVER_TMO Macro@@@#define TCPIP_DNS_CLIENT_SERVER_TMO (1*60) When the DNS Client connected to the DNS Server this is the elapsed time after which an the communication is considered to have timed failed if there was no...","GUID-4E827157-E3AF-4465-92B2-BED2A2B801B4.html@@@1.2.4.6.3.53 TCPIP_IPV6_PacketFree Function@@@void TCPIP_IPV6_PacketFree( IPV6_PACKET * pkt ); This function frees a TCP/IP Packet structure from dynamic memory. TCPIP_IPV6_Initialize() is required. TCPIP_IPV6_InterfaceIsReady should be true...","GUID-4E898CC0-B8B1-4130-9FC4-86CBA68A57C1.html@@@1.2.1.7.3.32 TCPIP_DNS_IsNameResolved Function@@@TCPIP_DNS_RESULT TCPIP_DNS_IsNameResolved( const char* hostName, IPV4_ADDR* hostIPv4, IPV6_ADDR* hostIPv6 ); Call this function to determine if the DNS name resolution has been completed. This...","GUID-4EC4A087-FE22-4E4F-A1D8-A037640F4A7A.html@@@1.2.1.13.3.2 TCPIP_HTTP_DYN_ARG_DCPT Structure@@@typedef struct { uint16_t argType; uint16_t argFlags; union { int32_t argInt32; const char* argStr; } } TCPIP_HTTP_DYN_ARG_DCPT; Data structure: TCPIP_HTTP_DYN_ARG_DCPT This data type defines the...","GUID-4EE34331-4DE8-4322-AF41-210B5E7F1979.html@@@1.2.3.2.3.46 TCPIP_UDP_StringPut Function@@@const uint8_t* TCPIP_UDP_StringPut(UDP_SOCKET hUDP, const uint8_t * strData); A pointer to the byte following the last byte written. Note that this is different than the TCPIP_UDP_ArrayPut functions...","GUID-4EEA334F-2FEB-44C1-A9DF-D5ADFE6717A8.html@@@1.2.2.1.3.9 NET_PRES_EncProviderIsInitialized Type@@@typedef bool (* NET_PRES_EncProviderIsInitialized)(void); true - The provider has been initialized false - The provider has not been initialized Presentation Encryption Provider Is Initialized Pointer...","GUID-4EFEB885-ECF8-44B5-8F23-1D05952E1845.html@@@1.2.1.13.3 Library Interface@@@Name Description Macros TCPIP_HTTP_NET_CACHE_LEN Max lifetime (sec) of static responses as string TCPIP_HTTP_NET_CONFIG_FLAGS Define the HTTP module configuration flags Use 0 for default See...","GUID-4F1D1122-A9F8-4114-8BA2-343CFA6F052B.html@@@1.2.5.3.3.13 DRV_ENC28J60_Open Function@@@DRV_HANDLE DRV_ENC28J60_Open(SYS_MODULE_INDEX index, DRV_IO_INTENT intent); Returns a valid handle - If successful, INVALID_HANDLE - If unsuccessful ENC28J60 Open The client will call this function to...","GUID-4F773C2C-C548-4F4B-841F-2C2C5900FBDF.html@@@1.2.1.23.3.1 TCPIP_TFTPS_CLIENT_NUMBER Macro@@@#define TCPIP_TFTPS_CLIENT_NUMBER (2ul) The number of Clients requests will be processed for the TFTP server stack...","GUID-4F98C91D-7BB3-4806-B6BB-AE327FE987A1.html@@@1.2.5.5.3.2 DRV_GMAC_ConfigGet Function@@@size_t DRV_GMAC_ConfigGet(DRV_HANDLE hMac, void* configBuff, size_t buffSize, size_t* pConfigSize); number of bytes copied into the supplied storage buffer This function will get the current MAC...","GUID-4FA11FF3-612E-4D10-8242-377C3F6CF5E1.html@@@1.2.1.19.3.31 TCPIP_SNMP_NotifyIsReady Function@@@bool TCPIP_SNMP_NotifyIsReady( IP_MULTI_ADDRESS* remoteHost, SNMP_TRAP_IP_ADDRESS_TYPE eTrapMultiAddressType ); This function resolves given remoteHost IP address into MAC address using ARP module. If...","GUID-4FB260C5-55E6-4E39-85B4-DD70BB05B922.html@@@1.2.1.23.3.9 TCPIP_TFTPS_EVENT_TYPE Enumeration@@@typedef enum { TCPIP_TFTPS_EVENT_NONE = 0, TCPIP_TFTPS_EVENT_READ_COMPLETED = 1, TCPIP_TFTPS_EVENT_WRITE_COMPLETED = 2, TCPIP_TFTPS_EVENT_IF_ERROR = -1, TCPIP_TFTPS_EVENT_SKT_ERROR = -2...","GUID-4FC75886-D79B-4FCD-8122-4737B2FDEF8F.html@@@1.2.4.1.3.16 TCPIP_ARP_IsResolved Function@@@bool TCPIP_ARP_IsResolved( TCPIP_NET_HANDLE hNet, IPV4_ADDR* IPAddr, TCPIP_MAC_ADDR* MACAddr ); This function checks if an ARP request has been resolved yet, and if so, stores the resolved MAC address...","GUID-4FDEB3AD-E2FB-4041-B5EC-3DB621AF809B.html@@@1.2.2.1.3.18 NET_PRES_EncSessionStatus Enumeration@@@typedef enum { NET_PRES_ENC_SS_UNKNOWN, NET_PRES_ENC_SS_WAITING_TO_START_NEGOTIATION, NET_PRES_ENC_SS_CLIENT_NEGOTIATING, NET_PRES_ENC_SS_SERVER_NEGOTIATING, NET_PRES_ENC_SS_OPEN...","GUID-503C0CFA-191C-4571-A1E2-9B8E84104924.html@@@1.2.5.6.3.19 MAC_DRVR_RegisterStatisticsGet Function@@@TCPIP_MAC_RES MAC_DRVR_RegisterStatisticsGet( DRV_HANDLE hMac, TCPIP_MAC_STATISTICS_REG_ENTRY * pRegEntries, int nEntries, int * pHwEntries ); TCPIP_MAC_RES_OK if all processing went on OK...","GUID-503FC459-C2DA-4228-91D2-7C68CAB82D47.html@@@1.2.1.7.1 Abstraction Model@@@DNS is part of the Application Layer. Following is a description of how the DNS Client works and how it should be used. By default, the DNS client is enabled and included in the TCP/IP stackbuild. The...","GUID-506B8184-500A-49FB-8F29-83AD4D027EE1.html@@@1.2.1.18.3.15 TCPIP_SMTPC_MESSAGE_WARNING Enumeration@@@typedef enum { TCPIP_SMTPC_WARN_REPLY_BUFFER_SMALL = 0x0001, TCPIP_SMTPC_WARN_WRONG_FORMAT = 0x0002, TCPIP_SMTPC_WARN_UNEXPECTED_REPLY = 0x0004, TCPIP_SMTPC_WARN_FILE_NOT_FOUND = 0x0008...","GUID-5096062A-E0FC-47ED-84D7-2B89E4D066A5.html@@@1.2.4.4.3.11 TCPIP_IGMP_IncludeSource Function@@@TCPIP_IGMP_RESULT TCPIP_IGMP_IncludeSource( UDP_SOCKET socket, TCPIP_NET_HANDLE hNet, IPV4_ADDR mcastAddress, IPV4_ADDR sourceAddress ); This function performs the subscription of a UDP socket to...","GUID-5097A05F-94BE-41A9-8E92-4C81A9EF8CA4.html@@@1.2.4.6.3.61 TCPIP_IPV6_SourceAddressGet Function@@@IPV6_ADDR * TCPIP_IPV6_SourceAddressGet( IPV6_PACKET * p ); This API is used to get the source address for an IPv6 packet. TCPIP_IPV6_Initialize() is required. TCPIP_IPV6_InterfaceIsReady should be...","GUID-5098AD90-4D1B-465E-8309-45A2739325B1.html@@@1.2.5.7.3.16 DRV_ETHMAC_PIC32MACRegisterStatisticsGet Function@@@C TCPIP_MAC_RES DRV_ETHMAC_PIC32MACRegisterStatisticsGet(DRV_HANDLE hMac, TCPIP_MAC_STATISTICS_REG_ENTRY* pRegEntries, int nEntries, int* pHwEntries); TCPIP_MAC_RES_OK if all processing went on OK...","GUID-50C1896B-DB0D-40D0-A254-9CDC74F60D59.html@@@1.2.1.13.3.56 TCPIP_HTTP_NET_STATUS Enumeration@@@typedef enum { TCPIP_HTTP_NET_STAT_GET = 0u, TCPIP_HTTP_NET_STAT_POST, TCPIP_HTTP_NET_STAT_BAD_REQUEST, TCPIP_HTTP_NET_STAT_UNAUTHORIZED, TCPIP_HTTP_NET_STAT_NOT_FOUND, TCPIP_HTTP_NET_STAT_OVERFLOW...","GUID-50D5318B-86E9-4C2C-8991-900F173D26A6.html@@@1.2.1.5.3.29 TCPIP_DHCPS_Task Function@@@void TCPIP_DHCPS_Task(void) Standard TCP/IP stack module task function. This function performs DHCP Server module tasks in the TCP/IP stack. The DHCP Server module should have been initialized...","GUID-511AF571-6D83-4865-B4C5-B1A05350DD33.html@@@1.2.5.9.3.28 DRV_MIIM_SETUP_FLAGS Enumeration@@@typedef enum { DRV_MIIM_SETUP_FLAG_NONE, DRV_MIIM_SETUP_FLAG_PREAMBLE_SUPPRESSED, DRV_MIIM_SETUP_FLAG_PREAMBLE_DEFAULT, DRV_MIIM_SETUP_FLAG_SCAN_ADDRESS_INCREMENT...","GUID-51568547-54E2-4D71-BFAC-1BA189300B04.html@@@1.2.5.7.3.10 DRV_ETHMAC_PIC32MACOpen Function@@@DRV_HANDLE DRV_ETHMAC_PIC32MACOpen(const SYS_MODULE_INDEX drvIndex, const DRV_IO_INTENT intent); DRV_HANDLE - handle (pointer) to MAC client 0 if call failed This function opens a client instance of...","GUID-516D5B0D-BD25-459C-B12E-2FDDADAADBDC.html@@@1.2.4.2.3.3 ICMP_HANDLE Type@@@typedef const void* ICMP_HANDLE; A handle that a client can use after the event handler has been registered...","GUID-51877883-0A3E-4AF6-963B-F733F4FE68CD.html@@@1.2.2.1.3.78 NET_PRES_TransWrite Type@@@typedef uint16_t (* NET_PRES_TransWrite)(uintptr_t transHandle, const uint8_t* buffer, uint16_t count); The number of data bytes accepted by the transport layer. Presentation Layer Transport Layer...","GUID-51BE11D4-8D24-43BA-9300-1B1382FE077D.html@@@1.2.2.1.3.59 NET_PRES_Status Function@@@SYS_STATUS NET_PRES_Status(SYS_MODULE_OBJ object); SYS_STATUS_READY - Indicates that any previous module operation for the specified module has completed SYS_STATUS_UNINITIALIZED - Indicates the...","GUID-51E0C342-9050-40F5-9101-560645FA5950.html@@@1.2.1.2.3.52 IPV6_CHECKSUM Macro@@@#define IPV6_CHECKSUM 7 //Sets the IPv6 Checksum options - Not yet supported Sets the IPv6 checksum options. Not yet supported...","GUID-521D9159-797C-4B43-BF77-E1D2D0536CD7.html@@@1.2.4.6.3.1 IPV6_ACTION Enumeration@@@typedef enum { IPV6_ACTION_NONE = 0, IPV6_ACTION_DISCARD_SILENT, IPV6_ACTION_DISCARD_PP_0, IPV6_ACTION_DISCARD_PP_2, IPV6_ACTION_DISCARD_PP_2_NOT_MC, IPV6_ACTION_BEGIN_EX_HEADER_PROCESSING }...","GUID-524962B7-0E09-4846-8F53-7213CA71FF2D.html@@@1.2.2.1.3.21 NET_PRES_Initialize Function@@@SYS_MODULE_OBJ NET_PRES_Initialize(const SYS_MODULE_INDEX index, const SYS_MODULE_INIT * const init); Valid handle to the presentation instance - If successful SYS_MODULE_OBJ_INVALID - If unsuccessful...","GUID-52AB79BD-03EF-4668-A7B6-6DF67B773699.html@@@1.2.5.8.4.31 DRV_ETHPHY_RESET_CLR_TMO Macro@@@#define DRV_ETHPHY_RESET_CLR_TMO (500) Ethernet PHY Reset self clear time out This definition sets the time out of the PHY Reset self clear, in ms. See IEEE 802.3 Clause 22 Table 22-7 and paragraph...","GUID-52B74250-085A-4B9B-8325-4820EF5B9CF2.html@@@1.2.1.2.3.54 IPV6_LEAVE_GROUP Macro@@@#define IPV6_LEAVE_GROUP 21 //Leave an IPv6 multicast group - Not yet supported Leave an IPv6 multicast group. Not yet supported...","GUID-52BB79ED-7CC3-4194-A27A-D493A366DD19.html@@@1.2.4.6.3.65 TCPIP_IPV6_TxPacketAllocate Function@@@IPV6_PACKET * TCPIP_IPV6_TxPacketAllocate( TCPIP_NET_HANDLE netH, IPV6_PACKET_ACK_FNC ackFnc, void* ackParam ); This function dynamically allocates a packet for transmitting IP protocol data and sets...","GUID-52D042FB-F60D-4A4F-94A4-103128DEF604.html@@@1.2.1.23.3.10 TCPIP_TFTPS_FILENAME_LEN Macro@@@#define TCPIP_TFTPS_FILENAME_LEN 64 The default length of the file name is defined to 64 bytes...","GUID-52F0EA44-A824-4146-8383-583832AC286B.html@@@1.2.1.6 DHCPv6 Module@@@The DHCPv6 client module will allow your application to dynamically obtain an IPv6 address from a DHCPv6 server. Additionally, the DHCPv6 client will get other parameters, such as DNS servers and the...","GUID-5324F446-60A4-4815-82AA-571C61BA6DE9.html@@@1.1 TCP/IP Stack Library Overview@@@The MPLAB\u00AE Harmony TCP/IP Stack distribution package contain: Source files for all the network modules that are part TCP/IP Stack. It is available in the net/tcpip folder. Drivers for internal and...","GUID-532CE9B9-06B4-4D23-98EF-A4C77A6F2EA7.html@@@1.2.1.22.2 Trivial File Transfer Protocol (TFTP) Client Configurations@@@TFTP Client Specific User Configurations TFTP Client Maximum Retries: The number of attempts before declaring a TIMEOUT error. Default value: 3 Symbol TCPIP_TFTPC_MAX_RETRIES Maximum Length for File...","GUID-5358F353-839E-4D94-B6D9-FACF57A53EB2.html@@@1.2.6.1.1.3.29 TCPIP_Helper_UDPSecurePortGet Function@@@bool TCPIP_Helper_UDPSecurePortGet( uint16_t udpPort ); This function checks the internal data for detecting if the required UDP port is a secure port or not. A secure port is one that requires secure...","GUID-536CE867-03C9-4E3F-AAEB-5546F875CE0F.html@@@1.2.1.2.3.82 SOCK_DGRAM Macro@@@#define SOCK_DGRAM 110 //Connectionless datagram socket. Use UDP for the Internet address family. Connectionless datagram socket. Use UDP for the Internet address family...","GUID-53A2E18F-48FD-478F-A5AA-46C48685700C.html@@@1.2.1.19.3.52 TCPIP_SNMP_VarbindSet Function@@@bool TCPIP_SNMP_VarbindSet( SNMP_ID var, SNMP_INDEX index, uint8_t ref, SNMP_VAL val ); This is a callback function called by module for SNMP SET request. This function content is modified by the...","GUID-53BDB6A6-65FE-405C-813A-19E29863B79F.html@@@1.2.3.2.3.31 TCPIP_UDP_SIGNAL_FUNCTION Type@@@typedef void (* TCPIP_UDP_SIGNAL_FUNCTION)(UDP_SOCKET hUDP, TCPIP_NET_HANDLE hNet, TCPIP_UDP_SIGNAL_TYPE sigType, const void* param); Type: TCPIP_UDP_SIGNAL_FUNCTION Prototype of a UDP signal handler...","GUID-5406A986-55E4-493C-AFEB-EFB3EBD2A598.html@@@1.2.1.2.3.51 IPPROTO_UDP Macro@@@#define IPPROTO_UDP 17 // Indicates UDP level options Indicates UDP level options...","GUID-54143239-B038-4652-A42A-8726BC64E3D8.html@@@1.2.5.3.3.21 DRV_ENC28J60_RxFilterHashTableEntrySet Function@@@TCPIP_MAC_RES DRV_ENC28J60_RxFilterHashTableEntrySet(DRV_HANDLE hMac, const TCPIP_MAC_ADDR* DestMACAddr); TCPIP_MAC_RES_TYPE_ERR - if the hMac is invalid TCPIP_MAC_RES_OP_ERR - if the hMac is valid...","GUID-541AC75D-6255-45D5-9A7F-84CAD1A299D9.html@@@1.2.5.7.3.14 DRV_ETHMAC_PIC32MACPowerMode Function@@@bool DRV_ETHMAC_PIC32MACPowerMode(DRV_HANDLE hMac, TCPIP_MAC_POWER_MODE pwrMode); true if the call succeeded. false if the call failed This function sets the power mode for the Ethernet MAC. This...","GUID-544C3F55-CCD8-4195-BD7B-86B26C43512E.html@@@1.2.4.2.3.1 __ICMP_H Macro@@@#define __ICMP_H This is macro __ICMP_H...","GUID-54BB50C9-B5F7-4C3E-A959-89D9B6842ED8.html@@@1.2.1.9 Dynamic DNS Module@@@The Dynamic DNS Client module provides a method for updating a dynamic IP address to a public DDNS service. These services can be used to provide DNS hostname mapping to devices that behind routers...","GUID-54BFB776-2DFE-4296-9603-7760590DF59B.html@@@1.2.1.10.3.19 TCPIP_FTPC_ERROR_TYPE Enumeration@@@C typedef enum { TCPIP_FTPC_ERROR_NONE, TCPIP_FTPC_ERROR_CTRL_RESPONSE, TCPIP_FTPC_ERROR_TIMEOUT, TCPIP_FTPC_ERROR_FILE_OPEN, TCPIP_FTPC_ERROR_FILE_ACCESS, TCPIP_FTPC_ERROR_FILE_WRITE...","GUID-54C4E5DE-AFB8-4B83-95AF-215BE1947787.html@@@1.2.4.7.3.1 TCPIP_NDP_NborReachConfirm Function@@@void TCPIP_NDP_NborReachConfirm( TCPIP_NET_HANDLE netH, const IPV6_ADDR * address ); This function is used by upper-layer protocols to indicate that round-trip communications were confirmed with a...","GUID-54D967D4-38C6-42F9-AA0C-B2D20A25909F.html@@@1.2.1.19.3.19 STD_BASED_SNMPV3_SECURITY_LEVEL Enumeration@@@typedef enum { NO_AUTH_NO_PRIV = 1, AUTH_NO_PRIV, AUTH_PRIV } STD_BASED_SNMPV3_SECURITY_LEVEL; Enumeration: STD_BASED_SNMPV3_SECURITY_LEVEL. A Level of Security at which SNMPv3 messages can be sent or...","GUID-54F481A2-B7C0-4DEE-9356-D71CE48E0234.html@@@1.2.4.3.2 Internet Control Message Protocol for IPv6 (ICMPv6) Configurations@@@ICMPv6 Specific User Configurations Use ICMPv6 Server: Build the stack with the ICMPv6 Server Default value: true Symbol TCPIP_STACK_USE_ICMPV6_SERVER Use ICMPv6 Client: Build the stack with the...","GUID-55B68821-A274-44F0-B2D9-9C12D85F6F51.html@@@1.2.6.1.1.3.11 TCPIP_Helper_IPAddressToString Function@@@bool TCPIP_Helper_IPAddressToString( const IPV4_ADDR* IPAddress, char* buff, size_t buffSize ); This function converts IPV4_ADDR to a dotted-quad decimal IP address string. None. Parameters...","GUID-55CEB648-6627-45B9-A882-AC2DD80892C0.html@@@1.2.4.6.3.42 TCPIP_IPV6_Flush Function@@@int TCPIP_IPV6_Flush( IPV6_PACKET * pkt ); This function flushes an IP TX packet. Determines the link-layer address, if necessary and calculates the upper-layer checksum, if necessary...","GUID-55FA4C69-CFF5-4C45-9269-E64A9F995E5C.html@@@1.2.6.1.1.3.38 TCPIP_STACK_Deinitialize Function@@@void TCPIP_STACK_Deinitialize( SYS_MODULE_OBJ object ); This function performs the deinitialization of the TCP/IP stack. All allocated resources are released. The TCP/IP stack should have been...","GUID-561C3C52-2669-4417-9E50-2845923F7599.html@@@2.1.3 Creating New Harmony MCC Project@@@Open the MPLAB\u00AE X IDE Create a New Project by clicking the New Project icon Microchip Technology or by selecting File -&gt; New Project In the New Project window select 32-Bit MCC Harmony Project and...","GUID-5665E20F-AE83-454B-906E-95A458C3854C.html@@@1.2.1.12.2.16 TCPIP_HTTP_CurrentConnectionFileGet Function@@@SYS_FS_HANDLE TCPIP_HTTP_CurrentConnectionFileGet( HTTP_CONN_HANDLE connHandle ); This function returns the handle of the current HTTP connection file. None. Parameters Description connHandle HTTP...","GUID-56BC9832-3FC3-46D6-9573-F3A81C543CC3.html@@@1.2.1.3.3.14 TCPIP_DHCP_IsEnabled Function@@@bool TCPIP_DHCP_IsEnabled( TCPIP_NET_HANDLE hNet ); This function returns the current state of the DHCP client on the specified interface. The DHCP module must be initialized. Parameters Description...","GUID-56D47863-AE1C-4329-B74E-94172AF0D4F1.html@@@1.2.1.8.3.5 TCPIP_DNSS_CACHE_PER_IPV4_ADDRESS Macro@@@#define TCPIP_DNSS_CACHE_PER_IPV4_ADDRESS 2 Maximum and default number of IPv4 entries will be allowed to be configured from command prompt. and these many entries will be allowed to be sent in...","GUID-57180070-C84B-44CE-848B-39793B28459A.html@@@1.2.1.12.2.8 TCPIP_HTTP_ArgGet Function@@@const uint8_t* TCPIP_HTTP_ArgGet( const uint8_t* cData, const uint8_t* cArg ); This function searches through a data array to find the value associated with a given argument. It can be used to find...","GUID-571D37CC-1208-420E-8098-12DB6C4D39E1.html@@@1.2.1.13.3.39 TCPIP_HTTP_NET_ConnectionStatusSet Function@@@void TCPIP_HTTP_NET_ConnectionStatusSet( TCPIP_HTTP_NET_CONN_HANDLE connHandle, TCPIP_HTTP_NET_STATUS stat ); Allows write access to the HTTP status of the selected HTTP connection. None. Parameters...","GUID-57204722-DA90-4F99-93F5-F2136501E2C7.html@@@1.2.5.9.3.24 DRV_MIIM_RegisterCallback Function@@@DRV_MIIM_CALLBACK_HANDLE DRV_MIIM_RegisterCallback(DRV_HANDLE handle, DRV_MIIM_OPERATION_CALLBACK cbFunction, DRV_MIIM_RESULT* pRegResult); a valid DRV_MIIM_CALLBACK_HANDLE if the operation succeeded...","GUID-57290915-F64F-4FA3-80F5-3F61074D86BA.html@@@1.2.1.4.3.4 TCPIP_DHCPS_GetPoolEntries Function@@@int TCPIP_DHCPS_GetPoolEntries( TCPIP_NET_HANDLE netH, TCPIP_DHCPS_POOL_ENTRY_TYPE type ); This function is used to get the DHCP server entries from the pool as per TCPIP_DHCPS_POOL_ENTRY_TYPE. The...","GUID-572B3F57-64AE-455D-8E24-BF2529ED80A5.html@@@1.2.1.9.3.4 DDNS_STATUS Enumeration@@@typedef enum { DDNS_STATUS_GOOD = 0u, DDNS_STATUS_NOCHG, DDNS_STATUS_ABUSE, DDNS_STATUS_BADSYS, DDNS_STATUS_BADAGENT, DDNS_STATUS_BADAUTH, DDNS_STATUS_NOT_DONATOR, DDNS_STATUS_NOT_FQDN...","GUID-5771D5D7-6DD6-4FD4-A195-E0CFD94A9AAE.html@@@1.2.1.8.3.15 TCPIP_DNSS_REPLY_BOARD_ADDR Macro@@@#define TCPIP_DNSS_REPLY_BOARD_ADDR 1 Reply DNS info with Board info only if the requested DNS host name is not present if TCPIP_DNSS_REPLY_BOARD_ADDR != 1 , then return no such name This is used for...","GUID-579220B1-DE68-42A8-BEAC-CC7B9416CC6F.html@@@1.2.5.10.3.1 PPP_STATE Enumeration@@@typedef enum { PPP_STATE_INIT = 0, PPP_STATE_STARTING, PPP_STATE_CLOSED, PPP_STATE_STOPPED, PPP_STATE_CLOSING, PPP_STATE_STOPPING, PPP_STATE_REQ_SENT, PPP_STATE_ACK_RCVD, PPP_STATE_ACK_SENT...","GUID-57B2541B-647F-476E-B2F0-4C765D203BAA.html@@@1.2.5.10.3.21 PPP_GetLocalIpv4Addr Function@@@uint32_t PPP_GetLocalIpv4Addr(DRV_HANDLE hMac); Current IPv4 local addressOr 0 if an error This function gets the PPP local IPv4 address currently assigned for the PPP driver This should be the IPv4...","GUID-57C1318E-1A0B-402F-9B95-7B5FDD105983.html@@@1.2.6.2.1 TCP/IP Commands Configurations@@@TCP/IP Commands Specific User Configurations Enable Storage for Stack Commands: Enable the storage for stack/interface up/down commands Default value: false Symbol TCPIP_STACK_COMMANDS_STORAGE_ENABLE...","GUID-58077ADE-51A1-4E08-B1F4-BF617D2F3518.html@@@1.2.1.7.3.26 TCPIP_DNS_GetIPv4Addresses Function@@@int TCPIP_DNS_GetIPv4Addresses( const char* hostName, int startIndex, IPV4_ADDR* pIPv4Addr, int nIPv4Addresses ); This function will return IPv4 addresses for a host name if the DNS resolution has...","GUID-581E77E1-07AF-47FA-A0EA-F48F1C4BF0F9.html@@@1.2.5.3.3.3 DRV_ENC28J60_ConfigGet Function@@@size_t DRV_ENC28J60_ConfigGet(DRV_HANDLE hMac, void* configBuff, size_t buffSize, size_t* pConfigSize); Number of bytes copied to the buffer ENC28J60 Get Configuration Gets the current configuration...","GUID-583A8175-743B-4C4E-91A6-09CA2B95668D.html@@@1.2.1.13.2 HyperText Transfer Protocol (HTTP) Net Configurations@@@HTTP_NET Specific User Configurations HTTP NET Socket TX Buffer Size: Define the size of the TX buffer for the HTTP socket Use 0 for default TCP socket value The default recommended value for high...","GUID-587A9A50-323B-4310-A7D0-CDA58E9123CB.html@@@1.2.4.4.3.17 TCPIP_IGMP_SubscribeGet Function@@@TCPIP_IGMP_RESULT TCPIP_IGMP_SubscribeGet( UDP_SOCKET socket, TCPIP_NET_HANDLE hNet, IPV4_ADDR mcastAddress, TCPIP_IGMP_FILTER_TYPE* filterMode, IPV4_ADDR* sourceList, size_t* listSize ); This...","GUID-58B829B5-0010-44C5-8FD2-BA53884B60C1.html@@@1.2.1.12.2.22 TCPIP_HTTP_CurrentConnectionIsAuthorizedSet Function@@@void TCPIP_HTTP_CurrentConnectionIsAuthorizedSet( HTTP_CONN_HANDLE connHandle, uint8_t auth ); This function sets the authorization status for the current HTTP connection. This has to be one of the...","GUID-58C75B00-D8C2-44F9-B3A3-DA128722BEE1.html@@@1.2.1.13.3.63 TCPIP_HTTP_SSI_ATTR_DCPT Structure@@@typedef struct { const char* attribute; char* value; } TCPIP_HTTP_SSI_ATTR_DCPT; Data structure: TCPIP_HTTP_SSI_ATTR_DCPT This data type defines the structure of a SSI command attribute descriptor...","GUID-58D2CEA2-AB9C-40C1-A589-051F2D431221.html@@@1.2.5.8.4.40 DRV_ETHPHY_VENDOR_SMI_CLOCK_GET Type@@@typedef unsigned int (* DRV_ETHPHY_VENDOR_SMI_CLOCK_GET)(const struct DRV_ETHPHY_OBJECT_BASE_TYPE* pBaseObj, DRV_HANDLE handle); The maximum SMI/MIIM clock speed as an unsigned integer. Pointer to...","GUID-58EA08F2-E38D-48FD-BD75-C2972C0EE761.html@@@1.2.5.3.3 Library Interface@@@Name Description System Interaction Functions DRV_ENC28J60_Deinitialize Deinitializes the ENC28J60 Driver Instance. DRV_ENC28J60_Initialize Initializes the ENC28J60 Driver Instance, with the...","GUID-58FF1B35-1905-43E3-BDBE-FDCAEB3C1108.html@@@1.2.3.1.3.48 TCPIP_TCP_SignalHandlerRegister Function@@@TCPIP_TCP_SIGNAL_HANDLE TCPIP_TCP_SignalHandlerRegister( TCP_SOCKET s, TCPIP_TCP_SIGNAL_TYPE sigMask, TCPIP_TCP_SIGNAL_FUNCTION handler, const void* hParam ); This function registers a TCP socket...","GUID-59104AE1-2716-4892-A5C5-8D1C643E81C1.html@@@1.2.2.1.3.15 NET_PRES_EncProviderReadReady Type@@@typedef int32_t (* NET_PRES_EncProviderReadReady)(void * providerData); The number of bytes ready to be read. Presentation Encryption Provider Read Ready Function Pointer Prototype This function...","GUID-59300D20-543E-4ABE-8ACD-4385930EBBE6.html@@@1.2.5.9 MIIM Driver Library@@@The MIIM Driver is implemented as a driver object that provides APIs for: Asynchronous read/write and scan operations for accessing the external PHY registers Notification when MIIM operations have...","GUID-5957BB7B-529D-414D-AD0E-DE316F2460AF.html@@@1.2.1.24.1 Abstraction Model@@@Zeroconf Software Abstraction Model: Bonjour Service Model: Enabling Zeroconf can be enabled in the MPLAB Harmony Configurator, or by setting the following two defines in system_config.h file...","GUID-5963FE64-3A2B-4A3C-BD88-77A533DF882B.html@@@1.2.6.1.1.3.58 TCPIP_STACK_HeapHandleGet Function@@@TCPIP_STACK_HEAP_HANDLE TCPIP_STACK_HeapHandleGet( TCPIP_STACK_HEAP_TYPE heapType, int heapIndex ); This function returns the current stack heap handle. It provides access to the heap statistics and...","GUID-597B2805-F948-40CC-8080-A608316CA730.html@@@1.2.1.20.3.8 TCPIP_SNTP_HandlerRegister Function@@@TCPIP_SNTP_HANDLE TCPIP_SNTP_HandlerRegister( TCPIP_SNTP_EVENT_HANDLER handler ); This function registers a SNTP event handler. The SNTP module will call the registered handler when a SNTP event...","GUID-5982B986-4373-458A-A367-BEAB88CE59F2.html@@@1.2.1.10.3.36 TCPIP_FTPC_SetPassiveMode Function@@@TCPIP_FTPC_RETURN_TYPE TCPIP_FTPC_SetPassiveMode(TCPIP_FTPC_CONN_HANDLE_TYPE ftpcHandle); TCPIP_FTPC_RET_OK - if successfully scheduled function TCPIP_FTPC_RET_BUSY - could not schedule function as...","GUID-59C7F6E7-5E5A-4142-822B-28D920D95FDA.html@@@1.2.1.13.3.48 TCPIP_HTTP_NET_MODULE_CONFIG Structure@@@typedef struct { uint16_t nConnections; uint16_t dataLen; uint16_t sktTxBuffSize; uint16_t sktRxBuffSize; uint16_t listenPort; uint16_t nDescriptors; uint16_t nChunks; uint16_t maxRecurseLevel...","GUID-59E56A40-997A-4938-8323-43385CAAB59F.html@@@1.2.5.5.3.14 DRV_GMAC_PowerMode Function@@@bool DRV_GMAC_PowerMode(DRV_HANDLE hMac, TCPIP_MAC_POWER_MODE pwrMode); true if the call succeeded. false if the call failed This function sets the power mode for the Ethernet MAC. This function is...","GUID-5A16EA54-44B2-4444-97F0-7BF4D756E430.html@@@1.2.6.1.1.3.81 TCPIP_STACK_NetDefaultSet Function@@@bool TCPIP_STACK_NetDefaultSet( TCPIP_NET_HANDLE netH ); This function sets the current default network interface in the TCP/IP stack. The TCP/IP stack should have been initialized by...","GUID-5A855F77-7C80-404B-A6DC-38C1D9CC480F.html@@@1.2.1.10.3.24 TCPIP_FTPC_List Function@@@TCPIP_FTPC_RETURN_TYPE TCPIP_FTPC_List(TCPIP_FTPC_CONN_HANDLE_TYPE ftpcHandle, TCPIP_FTPC_DATA_CONN_TYPE * pftpcDataConn, TCPIP_FTPC_FILE_OPT_TYPE * pfileOptions, TCPIP_FTPC_DATA_EVENT_CALLBACK_TYPE...","GUID-5AE30EFB-7B7C-4B4E-8BCF-FAB8D8FB9A89.html@@@1.2.1.22.3 Library Interface@@@Name Description Macros TCPIP_TFTPC_ARP_TIMEOUT The number of seconds to wait before declaring a TIMEOUT error on PUT. TCPIP_TFTPC_CMD_PROCESS_TIMEOUT The number of seconds to wait before declaring a...","GUID-5B07EABC-0910-4628-90E4-1E03BCBEB6FA.html@@@1.2.5.3.2 ENC28J60 MAC (ENC28J60) Configurations@@@ENC28J60 Specific User Configurations ENC28J60 Instance Number: The current ENCx24J600 hardware instance Note: This value is currently read-only Default value: 0 Symbol INDEX Number of Client...","GUID-5B11FD5C-585A-4122-B97D-C79FCAEEFD1D.html@@@1.2.5.2.22 TCPIP_MAC_Initialize Function@@@SYS_MODULE_OBJ TCPIP_MAC_Initialize( const SYS_MODULE_INDEX index, const SYS_MODULE_INIT * const init ); MAC Initialize function. SYS_MODULE_OBJ TCPIP_MAC_Initialize(const SYS_MODULE_INDEX index...","GUID-5B2BC038-DFCD-4BA2-9DA9-CC9178C93B8B.html@@@1.2.2.1.3.48 NET_PRES_SocketOptionsGet Function@@@bool NET_PRES_SocketOptionsGet(NET_PRES_SKT_HANDLE_T handle, NET_PRES_SKT_OPTION_TYPE option, void* optParam); true - Indicates success false - Indicates failure Various options can be obtained at the...","GUID-5B3AAF37-93AA-401D-B7CD-D28AA4E7F1A2.html@@@1.2.1.19.3.43 TCPIP_SNMP_TrapSendFlagSet Function@@@void TCPIP_SNMP_TrapSendFlagSet( bool trapNotify ); This function is used to set the trap send flag details and this is used only when user is trying to send more than one varbind in a single PDU...","GUID-5B9423B4-4EAD-4ADC-A3DD-55535E32827F.html@@@1.2.5.3.3.14 DRV_ENC28J60_PacketRx Function@@@TCPIP_MAC_PACKET* DRV_ENC28J60_PacketRx(DRV_HANDLE hMac, TCPIP_MAC_RES* pRes, const TCPIP_MAC_PACKET_RX_STAT** ppPktStat); Pointer to a valid packet - if successful NULL - if unsuccessful ENC28J60...","GUID-5BB5AACD-118C-40CC-BE01-30EEAE286DB8.html@@@1.2.4.6.3.4 IPV6_ADDRESS_TYPE Union@@@typedef union { unsigned char byte; struct { unsigned scope : 4; unsigned type : 2; } bits; } IPV6_ADDRESS_TYPE; Type: IPV6_ADDRESS_TYPE. This type defines the data structure for IPv6 address types...","GUID-5C1324DB-8950-4E87-B3C1-2635E868B24D.html@@@1.2.3.2.3.53 TCPIP_UDP_USE_TX_CHECKSUM Macro@@@#define TCPIP_UDP_USE_TX_CHECKSUM Calculate and transmit a checksum when sending data. Checksum is not mandatory for UDP packets but is highly recommended. This will affect the UDP TX performance...","GUID-5CDF43DB-95CE-4DF7-986C-FA2634621B35.html@@@1.2.5.3.3.16 DRV_ENC28J60_ParametersGet Function@@@TCPIP_MAC_RES DRV_ENC28J60_ParametersGet(DRV_HANDLE hMac, TCPIP_MAC_PARAMETERS* pMacParams); TCPIP_MAC_RES_TYPE_ERR - if the hMac is invalid TCPIP_MAC_RES_OK - if the hMac is valid ENC28J60 Get...","GUID-5D32E98E-5DC7-433C-964D-2F6A6CBFFDBC.html@@@1.2.1.2.3.27 gethostname Function@@@int gethostname( char* name, int namelen ); This function returns the standard host name of the system which is calling this function. The returned name is null-terminated. None. Parameters...","GUID-5D55A772-A20A-478C-B885-4FE4984D0725.html@@@1.2.1.1.3.6 TCPIP_ANNOUNCE_MODULE_CONFIG Structure@@@typedef struct { void* reserved; } TCPIP_ANNOUNCE_MODULE_CONFIG; Structure: TCPIP_ANNOUNCE_MODULE_CONFIG - This structure us used for the Announce module initialization data...","GUID-5D80514B-D9E6-4B84-BC67-B1F62C1DBDCC.html@@@1.2.3.1.3.19 TCPIP_TCP_Discard Function@@@uint16_t TCPIP_TCP_Discard( TCP_SOCKET hTCP ); This function discards any pending data in the TCP RX FIFO. TCP is initialized. Parameters Description hTCP The socket whose RX buffer/FIFO is to be...","GUID-5D83E6FA-5BCD-43DC-9CC3-5583A0FF7197.html@@@1.2.2.1.3.29 NET_PRES_SKT_HANDLE_T Type@@@typedef int16_t NET_PRES_SKT_HANDLE_T; Net Presentation Socket Handle Type This data type sets the type for the presentation layer socket handle. None...","GUID-5DC19ED6-6171-4351-91CA-8F617D998E0D.html@@@1.2.1.19.3.11 SNMP_V2C Macro@@@#define SNMP_V2C (1) This macro is used for SNMP version 2 with community...","GUID-5DCE3C18-37C0-4BA2-B508-EAF38C636474.html@@@1.2.1.9.3.7 TCPIP_DDNS_LastStatusGet Function@@@DDNS_STATUS TCPIP_DDNS_LastStatusGet(); This function returns the status of the most recent update. See the DDNS_STATUS enumeration for possible codes. None. DDNS_STATUS indicating the status code for...","GUID-5DFFD672-0F33-4E85-8496-3D6436EF56C4.html@@@1.2.5.2.7 TCPIP_MAC_Deinitialize Function@@@void TCPIP_MAC_Deinitialize( SYS_MODULE_OBJ object ); MAC De-Initialize function. void TCPIP_MAC_Deinitialize(SYS_MODULE_OBJ object); This is the function that deinitializes the MAC. It is called by...","GUID-5E4C405D-613A-4FA7-AE5E-4A7593890586.html@@@1.2.1.19.3.61 TCPIP_SNMPV3_USERDATABASECONFIG_TYPE Enumeration@@@typedef enum { SNMPV3_USERNAME_CONFIG_TYPE = 0, SNMPV3_AUTHPASSWD_CONFIG_TYPE, SNMPV3_PRIVPASSWD_CONFIG_TYPE, SNMPV3_AUTHPASSWDLOCALIZEDKEY_CONFIG_TYPE, SNMPV3_PRIVPASSWWDLOCALIZEDKEY_CONFIG_TYPE...","GUID-5E4E3379-019F-4C00-8019-0D3C134EF852.html@@@1.2.1.3.3.5 TCPIP_DHCP_HANDLE Type@@@typedef const void* TCPIP_DHCP_HANDLE; Type: TCPIP_DHCP_HANDLE A handle that a client can use after the event handler has been registered...","GUID-5E58032A-DBF0-4703-B4DE-CF2D689B6F30.html@@@1.2.5.7.2 PIC32M MAC (ETHMAC) Configurations@@@ETHMAC Specific User Configurations MAC Configuration file MAC Default Configuration for Network Traffic: Default configuration settings for low/medium/high network traffic Default value: &quot;Medium&quot...","GUID-5E681416-39F1-45DD-8996-465E32E46030.html@@@1.2.1.2.3.24 freeaddrinfo Function@@@void freeaddrinfo( struct addrinfo * res ); Frees the memory allocated by getaddrinfo(). None. Parameters Description res Memory allocated by getaddrinfo(). None. None...","GUID-5E911A41-614E-4483-A423-F1175B67C1AC.html@@@1.2.1.2.3.3 __SS_SIZE Macro@@@#define _SS_SIZE 128 This is macro __SS_SIZE...","GUID-5ECBDC64-36BD-4349-ADB7-92DD3BA7A5EC.html@@@1.2.1.2.3.40 IP_DROP_MEMBERSHIP Macro@@@#define IP_DROP_MEMBERSHIP 36 // Leave a multicast group - Not yet supported Leave a multicast group. Not yet supported...","GUID-5F0D6218-4F51-4152-8122-EF952E394EE6.html@@@1.2.5.2.53 TCPIP_MAC_StatisticsGet Function@@@TCPIP_MAC_RES TCPIP_MAC_StatisticsGet( DRV_HANDLE hMac, TCPIP_MAC_RX_STATISTICS* pRxStatistics, TCPIP_MAC_TX_STATISTICS* pTxStatistics ); This function will get the current value of the statistic...","GUID-5F32ED54-4485-4649-82C5-C9015AA3C709.html@@@1.2.1.6.3.18 TCPIP_DHCPV6_Task Function@@@void TCPIP_DHCPV6_Task(); This function performs DHCPv6 module tasks in the TCP/IP stack. DHCPv6 module should have been initialized. None. None...","GUID-5F35C98C-EC8E-40FF-9B62-3B31D508F820.html@@@1.2.1.2.3 Library Interface@@@Name Description Macros MAX_BSD_SOCKETS Berkeley API max number of sockets simultaneous supported Functions accept This function accepts connection requests queued for a listening socket. bind This...","GUID-5FBC9524-1287-42EB-B1A1-6F4C3C9980FD.html@@@1.2.4.7.3 Library Interface@@@Name Description Macros TCPIP_IPV6_MTU_INCREASE_TIMEOUT 600 seconds TCPIP_IPV6_NDP_DELAY_FIRST_PROBE_TIME 5 s TCPIP_IPV6_NDP_MAX_ANYCAST_DELAY_TIME 1 s TCPIP_IPV6_NDP_MAX_MULTICAST_SOLICIT 3...","GUID-5FC5F67B-7C87-4FBC-860C-6CA22065CCC0.html@@@1.2.4.6.3.2 IPV6_ADDRESS_POLICY Structure@@@typedef struct { IPV6_ADDR address; unsigned char prefixLength; unsigned char precedence; unsigned char label; } IPV6_ADDRESS_POLICY; Type: IPV6_ADDRESS_POLICY. The policy table is the longest...","GUID-5FD24A9C-E246-485D-8022-32EB58B86019.html@@@1.2.1.2.3.84 sockaddr Structure@@@struct sockaddr { unsigned short sa_family; char sa_data[14]; }; Generic address structure for all address families. Members Description sa_family Address family. sa_data[14] Up to 14 bytes of direct...","GUID-5FE0E246-65E8-4D1D-AD2B-A0998C58F0D7.html@@@1.2.2.1.3.20 NET_PRES_INIT_DATA Structure@@@C typedef struct { uint8_t numLayers; const NET_PRES_INST_DATA * pInitData; } NET_PRES_INIT_DATA; Members Description uint8_t numLayers; Number of presentation layers const NET_PRES_INST_DATA *...","GUID-5FF87290-1801-4BA3-A188-BC03CE18EDDF.html@@@1.2.4.6.3.33 IPV6_ULA_RESULT Enumeration@@@typedef enum { IPV6_ULA_RES_OK, IPV6_ULA_RES_BUSY = -1, IPV6_ULA_RES_IF_ERR = -2, IPV6_ULA_RES_NTP_ACCESS_ERR = -3, IPV6_ULA_RES_NTP_TSTAMP_ERR = -4 } IPV6_ULA_RESULT; Enumeration: IPV6_ULA_RESULT...","GUID-6003DBC5-C656-4E47-B6C5-EBE5B35226E7.html@@@1.2.6.1.1.3.94 TCPIP_STACK_NetMulticastGet Function@@@TCPIP_NET_HANDLE TCPIP_STACK_NetMulticastGet(); This function returns the current default multicast network interface in the TCP/IP stack. This is the interface on which IGMP and multicast packets...","GUID-6005945E-6669-486E-AA57-092C4EC0AD73.html@@@1.2.1 Application Layer@@@The application layer implements the application-level protocol for exchanging data with other network nodes. The following modules are part of MPLAB\u00AE Harmony TCP/IP Stack Application Layer...","GUID-6011D21B-FB7C-4248-A6F2-038D1D0E7DE6.html@@@1.2.1.8.3.8 TCPIP_DNSS_Disable Function@@@bool TCPIP_DNSS_Disable( TCPIP_NET_HANDLE hNet ); This function disables the DNS Server for the specified interface. If it is already disabled, no action is taken. The DNS server must be initialized...","GUID-60144950-D944-4668-82FC-94FBCF339CB9.html@@@1.2.3.2.3.29 TCPIP_UDP_RxOffsetSet Function@@@void TCPIP_UDP_RxOffsetSet(UDP_SOCKET hUDP, uint16_t rOffset); None. This function allows the user to specify the read location within the socket RX buffer. Future calls to TCPIP_UDP_Get and...","GUID-6032BF8A-0043-4288-A623-9FFE122CAB8D.html@@@1.2.5.6.3.15 MAC_DRVR_PowerMode Function@@@bool MAC_DRVR_PowerMode( DRV_HANDLE hMac, TCPIP_MAC_POWER_MODE pwrMode ); true if the call succeeded. false if the call failed This function sets the power mode for the Ethernet MAC. This function is...","GUID-60457E64-AF8C-4471-A05E-13AFC7EAFADA.html@@@1.2.4.6.3.15 IPV6_HEADER_OFFSET_PAYLOAD_LENGTH Macro@@@#define IPV6_HEADER_OFFSET_PAYLOAD_LENGTH (0x04u) Header offset for payload length...","GUID-60542769-81AD-4E9A-892F-47549D980671.html@@@1.2.3.1.3.36 TCPIP_TCP_PacketHandlerDeregister Function@@@bool TCPIP_TCP_PacketHandlerDeregister( TCPIP_TCP_PROCESS_HANDLE pktHandle ); This function removes a packet processing handler. TCP properly initialized. Parameters Description pktHandle TCPIP packet...","GUID-606205B5-997A-4AA8-BB6E-08429D855CA7.html@@@1.2.2.1.3.5 NET_PRES_EncProviderConnect Type@@@typedef NET_PRES_EncSessionStatus (* NET_PRES_EncProviderConnect)(void * providerData); NET_PRES_ENC_SS_CLIENT_NEGOTIATING - Client is still negotiating the connection...","GUID-6065C536-2D5E-4DE6-8693-CDDB9468D005.html@@@1.2.3.1.3.12 TCPIP_TCP_ArrayGet Function@@@uint16_t TCPIP_TCP_ArrayGet( TCP_SOCKET hTCP, uint8_t* buffer, uint16_t count ); This function reads an array of data bytes from a TCP socket&apos;s RX buffer/FIFO. The data is removed from the FIFO in the...","GUID-607EFC92-CC2D-4A1E-BC1C-A8D334FDAE13.html@@@1.2.3.2.3.11 TCPIP_UDP_Disconnect Function@@@bool TCPIP_UDP_Disconnect(UDP_SOCKET hUDP, bool flushRxQueue); true - Indicates success false - Indicates failure Disconnects a UDP socket and re-initializes it. Call this function to return the...","GUID-60817292-D657-471A-86CE-25D068933506.html@@@1.2.1.15.3 Library Interface@@@Name Description Macros TCPIP_NBNS_TASK_TICK_RATE NBNS task processing rate The default value is 110 milliseconds. The lower the rate (higher the frequency) the higher the module priority and higher...","GUID-608D53C9-C51D-405E-8113-C8B2AA011198.html@@@1.2.1.7.3.9 TCPIP_DNS_CLIENT_LOOKUP_RETRY_TMO Macro@@@#define TCPIP_DNS_CLIENT_LOOKUP_RETRY_TMO (3) Retry lookup for a unsolved entry in the cache, in seconds. If the TCPIP_DNS_CLIENT_LOOKUP_RETRY_TMO seconds elapsed and the name has not been solved then...","GUID-608FBC47-100D-4D70-AED4-BE906B761FC9.html@@@1.2.5.5.3.20 DRV_GMAC_Status Function@@@SYS_STATUS DRV_GMAC_Status(SYS_MODULE_OBJ object); SYS_STATUS_READY - Indicates that any previous module operation for the specified module has completed SYS_STATUS_BUSY - Indicates that a previous...","GUID-60A0C5B2-638B-4B28-9F43-745322863B88.html@@@2.1 Create your first TCP/IP Application@@@This tutorial demonstrates how to create a TCP/IP application project with MPLAB\u00AE Harmony TCP/IP Stack and MPLAB\u00AE Harmony v3 modules, using MPLABX IDE and MPLAB\u00AE Code Configurator. The tutorial...","GUID-60DFB271-66B4-4042-9D04-C8BA5BFBF391.html@@@1.2.1.23.3.13 TCPIP_TFTPS_HandlerRegister Function@@@TCPIP_TFTPS_HANDLE TCPIP_TFTPS_HandlerRegister(TCPIP_NET_HANDLE hNet, TCPIP_TFTPS_EVENT_HANDLER handler, const void* hParam); Returns a valid handle if the call succeeds Returns null handle if the...","GUID-60FB4748-55BB-4DA4-B6A5-88BE38BA970B.html@@@1.2.1.3 DHCP Client Module@@@The DHCP client module will allow your application to dynamically obtain an IP address and a subnet mask from a DHCP server on the same network. Additionally, the DHCP client will get other...","GUID-610DA949-0CAF-4DC7-AA73-F73300E87110.html@@@1.2.1.7.3.30 TCPIP_DNS_HandlerRegister Function@@@TCPIP_DNS_HANDLE TCPIP_DNS_HandlerRegister( TCPIP_NET_HANDLE hNet, TCPIP_DNS_EVENT_HANDLER handler, const void* hParam ); This function registers a DNS client event handler. The DNS client module will...","GUID-612707E0-4C71-40F1-B820-B44CFC4A2573.html@@@1.2.1.23.3.16 TCPIP_TFTPS_RESULT Enumeration@@@typedef enum { TFTPS_RES_OK, TFTPS_RES_PROGRESS, TFTPS_RES_IS_NOT_READY = -1, TFTPS_RES_BUSY = -2, TFTPS_RES_TSTAMP_ERROR = -3, TFTPS_RES_TSTAMP_STALE = -4, TFTPS_RES_SKT_ERR = -5...","GUID-6136B253-9C99-42F8-A1FE-271FBC2CA456.html@@@1.2.5.5.2 SAM MAC (GMAC) Configurations@@@GMAC Specific User Configurations GMAC Default Configuration for Network Traffic: Default configuration settings for low/medium/high network traffic Default value: &quot;Medium&quot; Symbol TCPIP_GMAC_TRAFFIC...","GUID-613CC0F0-8DDF-4B50-ABF5-12633AE21D65.html@@@1.2.4.4.3.7 TCPIP_IGMP_GroupSet Function@@@TCPIP_IGMP_RESULT TCPIP_IGMP_GroupsGet( IPV4_ADDR* groupsList, int listSize, int* pnGroups ); This function returns the current list of the multicast groups that are subscribed with IGMP. Additional...","GUID-6144796B-8069-4B41-BF89-981E67656516.html@@@1.2.4.4.3.13 TCPIP_IGMP_Leave Function@@@TCPIP_IGMP_RESULT TCPIP_IGMP_Leave( UDP_SOCKET socket, TCPIP_NET_HANDLE hNet, IPV4_ADDR mcastAddress ); This function performs the IGMPv2 style &quot;leave&quot; operation for a UDP socket from a multicast...","GUID-617D683D-30A5-461F-A7B4-109568A59E47.html@@@1.2.2.1.3.77 NET_PRES_TransSocketInfoGet Type@@@typedef bool (* NET_PRES_TransSocketInfoGet)(NET_PRES_SKT_HANDLE_T handle, void * info); true - Indicates success false - Indicates failure Transport Layer Get Socket Info Function Pointer Prototype...","GUID-617EB7BE-435D-467D-950C-0C06E88C12F6.html@@@1.2.5.2.34 TCPIP_MAC_PARAMETERS Structure@@@typedef struct { TCPIP_MAC_ADDR ifPhyAddress; TCPIP_MAC_PROCESS_FLAGS processFlags; TCPIP_MAC_TYPE macType; TCPIP_MAC_LINK_MTU linkMtu; TCPIP_MAC_CHECKSUM_OFFLOAD_FLAGS checksumOffloadRx...","GUID-6185D641-B8D1-4C7E-99BE-DD45181A2C64.html@@@1.2.1.10.3.32 TCPIP_FTPC_RemoveDir Function@@@TCPIP_FTPC_RETURN_TYPE TCPIP_FTPC_RemoveDir(TCPIP_FTPC_CONN_HANDLE_TYPE ftpcHandle, const char * pathname); TCPIP_FTPC_RET_OK - if successfully scheduled function TCPIP_FTPC_RET_BUSY - could not...","GUID-621D1432-960F-4139-B51F-A08987C9A8B8.html@@@1.2.1.10.3.15 TCPIP_FTPC_DATA_SKT_TX_BUFF_SIZE_DFLT Macro@@@#define TCPIP_FTPC_DATA_SKT_TX_BUFF_SIZE_DFLT (0) Specify the Default Transmit Buffer Size for the FTP Client Data Socket if 0, the TCP Socket Transmit buffer size will be used by FTPC data socket...","GUID-6222B855-ECB7-4F9B-8C5A-3A948AC136C2.html@@@1.2.1.13.3.57 TCPIP_HTTP_NET_Task Function@@@void TCPIP_HTTP_NET_Task(); This function performs HTTP module tasks in the TCP/IP stack. The HTTP module should have been initialized. None. None...","GUID-622D99A6-36C4-45DC-98D4-95EFDA77AA18.html@@@1.2.5.5.3.5 DRV_GMAC_EventMaskSet Function@@@bool DRV_GMAC_EventMaskSet(DRV_HANDLE hMac, TCPIP_MAC_EVENT macEvents, bool enable); always true, operation succeeded. This is a function that enables or disables the events to be reported to the...","GUID-623336CD-A7A1-4E11-A332-7AC77291942F.html@@@1.2.1.2.3.90 sockaddr_storage Structure@@@struct sockaddr_storage { short ss_family; __ss_aligntype __ss_align; char __ss_padding[_SS_PADSIZE]; }; This is record sockaddr_storage. Members Description ss_family Address family. __ss_align Force...","GUID-624C0988-7A11-41A9-B55F-805AA1A0AFB3.html@@@1.2.3.2.3.42 TCPIP_UDP_SocketNetGet Function@@@TCPIP_NET_HANDLE TCPIP_UDP_SocketNetGet(UDP_SOCKET hUDP); Handle of the interface that socket currently uses. This function returns the interface handle of an UDP socket UDP socket should have been...","GUID-625A93D1-16F9-44E6-9222-A2B9A32B8355.html@@@1.2.5.7.3.15 DRV_ETHMAC_PIC32MACProcess Function@@@TCPIP_MAC_RES DRV_ETHMAC_PIC32MACProcess(DRV_HANDLE hMac); TCPIP_MAC_RES_OK if all processing went on OK a TCPIP_MAC_RES error code if processing failed for some reason This is a function that allows...","GUID-6270C381-E98B-4BAB-BA01-B32A743BC23F.html@@@1.2.5.2.4 TCPIP_MAC_Close Function@@@void TCPIP_MAC_Close( DRV_HANDLE hMac ); This is the function that closes an instance of the MAC. All per client data is released and the handle can no longer be used after this function is called...","GUID-6273B42D-F043-467B-996A-AF4C86FD5E53.html@@@1.2.5.10.3.20 PPP_SendAdminEvent Function@@@bool PPP_SendAdminEvent(DRV_HANDLE hMac, PPP_EVENT event, PPP_CTRL_PROTO ctlProt); true - if the call succeeds false - if the call failed (invalid handle) This function sends an administrative event...","GUID-628D147C-7712-4F5C-83AA-F213675472B9.html@@@1.2.1.10.3.43 TCPIP_FTPC_TRANSFER_MODE_TYPE Enumeration@@@typedef enum { TCPIP_FTPC_TRANS_STREAM_MODE = 1, TCPIP_FTPC_TRANS_BLOCK_MODE, TCPIP_FTPC_TRANS_COMPRESS_MODE, TCPIP_FTPC_TRANS_UNSUPPORTED } TCPIP_FTPC_TRANSFER_MODE_TYPE; Enumeration...","GUID-6290C00F-2621-42B2-8E9C-F2DB53C224E8.html@@@1.2.5.4.3.15 DRV_ENCX24J600_PacketTx Function@@@TCPIP_MAC_RES DRV_ENCX24J600_PacketTx(DRV_HANDLE hMac, TCPIP_MAC_PACKET * ptrPacket); TCPIP_MAC_RES_OP_ERR - if the client handle is invalid TCPIP_MAC_RES_IS_BUSY - if the driver is not in the run...","GUID-62D66294-D55A-4B90-88E6-1985A474CA1D.html@@@1.2.4.5.3.9 TCPIP_IPV4_MaxDatagramDataSizeGet Function@@@int TCPIP_IPV4_MaxDatagramDataSizeGet( TCPIP_NET_HANDLE netH ); This function is a helper to allow retrieving the MDDS on the specified interface. IPv4 properly initialized. Interface properly...","GUID-62EC969A-A8DA-490C-9CA3-8CDB5E41D08F.html@@@1.2.6.1.1.3.7 TCPIP_Helper_FormatNetBIOSName Function@@@void TCPIP_Helper_FormatNetBIOSName( uint8_t Name[] ); This function formats a string to a valid NetBIOS name. Names will be exactly 16 characters, as defined by the NetBIOS spec. The 16th character...","GUID-62EDED79-306D-4B4B-A7DF-5276A789920D.html@@@1.2.5.10.3.9 PPP_STAT_HANDLER Type@@@typedef void (*PPP_STAT_HANDLER)(DRV_HANDLE hMac, int offset, const uint8_t* pppFrame, uint32_t newValue); Prototype of a PPP statistics handler. Clients can register a handler with the PPP...","GUID-63000CBB-6A16-4510-9B87-9DEBB62B7A7B.html@@@1.2.1.19.3.41 TCPIP_SNMP_TRAPMibIDGet Function@@@void TCPIP_SNMP_TRAPMibIDGet( uint32_t * mibID ); This function is used to get the MIB ID which is require while transmitting SNMP notification.This MIB ID is a Agent ID value of the Microchip style...","GUID-63274BE6-FA56-4153-B66D-AFF3B4A9D5FB.html@@@1.2.1.20.3.17 TCPIP_SNTP_UTCSecondsGet Function@@@uint32_t TCPIP_SNTP_UTCSecondsGet(); This function obtains the current time as reported by the SNTP module. Use this value for absolute time stamping. The value returned is (by default) the number of...","GUID-63B0ABBD-7EF9-4541-AEAC-56A68BF8A3CB.html@@@1.2.1.2.3.21 EAI_SERVICE Macro@@@#define EAI_SERVICE -8 /* SERVICE not supported for `ai_socktype&apos;. */ SERVICE not supported for &apos;ai_socktype&apos...","GUID-63CDCBA1-75F9-41A0-B717-A0E91087AA4F.html@@@1.2.1.10.3.9 TCPIP_FTPC_CTRL_EVENT_TYPE Enumeration@@@typedef enum { TCPIP_FTPC_CTRL_EVENT_SUCCESS = 1, TCPIP_FTPC_CTRL_EVENT_FAILURE, TCPIP_FTPC_CTRL_EVENT_DISCONNECTED, TCPIP_FTPC_CTRL_RCV, TCPIP_FTPC_CTRL_SEND } TCPIP_FTPC_CTRL_EVENT_TYPE; Members...","GUID-63E84829-EA54-407E-B1CC-116E021FAB7A.html@@@1.2.3.1.3.25 TCPIP_TCP_FifoTxFullGet Function@@@uint16_t TCPIP_TCP_FifoTxFullGet( TCP_SOCKET hTCP ); This function determines how many bytes are pending in the TCP TX FIFO. TCP is initialized. Parameters Description hTCP The socket to check. Number...","GUID-63FAACBB-2EBB-417D-A026-9E80B2A3E1F5.html@@@1.2.5.2.20 TCPIP_MAC_HEAP_FreeFDbg Type@@@typedef size_t (* TCPIP_MAC_HEAP_FreeFDbg)(TCPIP_MAC_HEAP_HANDLE heapH, const void* pBuff, int moduleId, int lineNo); This is type TCPIP_MAC_HEAP_FreeFDbg...","GUID-6421739B-0ECE-4F81-93DF-4F9790E03278.html@@@1.2.2.1.3.39 NET_PRES_SocketFlush Function@@@uint16_t NET_PRES_SocketFlush(NET_PRES_SKT_HANDLE_T handle); The number of flushed bytes 0, if no flushed bytes or an error occurred This function calls the transport layer&apos;s flush function, if it...","GUID-642B5607-DAB5-4AAF-8487-2AF208A2625C.html@@@1.2.4.3 ICMPv6 Module@@@This document specifies a set of APIs of Internet Control Message Protocol (ICMP) messages for use with version 6 of the Internet Protocol (IPv6). The Internet Protocol, version 6 (IPv6) is a new...","GUID-644FEB78-43EB-4195-88AA-9DCBD0BFCE4B.html@@@1.2.5.8.4.1 DRV_ETHPHY_CLIENT_STATUS Enumeration@@@C typedef enum { DRV_ETHPHY_CLIENT_STATUS_ERROR, DRV_ETHPHY_CLIENT_STATUS_CLOSED, DRV_ETHPHY_CLIENT_STATUS_BUSY, DRV_ETHPHY_CLIENT_STATUS_READY } DRV_ETHPHY_CLIENT_STATUS; Ethernet PHY Driver Client...","GUID-645744BA-1C6F-491A-9840-B06D51A4810C.html@@@1.2.1.18.3.1 __SMTPC_H Macro@@@#define __SMTPC_H This is macro __SMTPC_H...","GUID-64650216-4E2E-417F-8C9D-8C10AE03E7D4.html@@@1.2.5.2.38 TCPIP_MAC_PKT_AllocF Type@@@typedef TCPIP_MAC_PACKET* (* TCPIP_MAC_PKT_AllocF)(uint16_t pktLen, uint16_t segLoadLen, TCPIP_MAC_PACKET_FLAGS flags); Packet Allocation Function: typedef TCPIP_MAC_PACKET*...","GUID-646813C0-3BE6-4298-A3E0-6FDA23E38392.html@@@1.2.1.13.3.11 TCPIP_HTTP_NET_ConnectionByteCountGet Function@@@uint32_t TCPIP_HTTP_NET_ConnectionByteCountGet( TCPIP_HTTP_NET_CONN_HANDLE connHandle ); This function returns the current value of the counter showing the number of bytes available to be read on the...","GUID-648F95E9-C78B-4CA1-9C73-EEFAC8866F0F.html@@@1.2.1.10.3.4 TCPIP_FTPC_COMMANDS Macro@@@#define TCPIP_FTPC_COMMANDS false Specify whether FTP Client command in the tcpip_commands is enabled...","GUID-64BC953E-11F7-4C2F-8401-3005E8D20B9C.html@@@1.2.1.10.3.42 TCPIP_FTPC_TMO Macro@@@#define TCPIP_FTPC_TMO (2) Specify the time-out for FTP Client commands, in seconds This is the time to wait for a response from FTP server...","GUID-64C0C411-DB7C-445C-8F9C-2E54B7F3BE98.html@@@1.2.1.13.3.55 TCPIP_HTTP_NET_SSIVariablesNumberGet Function@@@int TCPIP_HTTP_NET_SSIVariablesNumberGet( int* pMaxNo ); This function returns the number of SSI variables that currently exist. It will also return the maximum number of variables that the SSI can...","GUID-65420E46-EAAB-411B-9DDF-59A2F152DD04.html@@@1.2.1.20.3.12 TCPIP_SNTP_Task Function@@@void TCPIP_SNTP_Task(); This function performs SNTP module tasks in the TCP/IP stack. The SNTP module should have been initialized. None. None...","GUID-654A0A2B-B86A-4C16-9DCA-2E065EB4AFA9.html@@@1.2.1.2.3.14 EAI_AGAIN Macro@@@#define EAI_AGAIN -3 /* Temporary failure in name resolution. */ Temporary failure in name resolution...","GUID-655618AA-5876-4320-9ED2-DFECE543BB57.html@@@1.2.2.1.3.61 NET_PRES_TRANS_ADDR_T Structure@@@typedef struct { uint8_t addr[16]; } NET_PRES_TRANS_ADDR_T; Members Description uint8_t addr ; So far biggest for IPv6 MPLAB Harmony Networking Presentation Transport Address Structure This data type...","GUID-65898C89-C67C-47C2-8C6B-1E933733047F.html@@@1.2.5.7 Ethernet MAC Driver Library@@@The PIC32 Ethernet Controller is a bus host module that interfaces with an off-chip PHY to implement a complete Ethernet node in a system. The following are some of the key features of this module...","GUID-658ECEC0-AB3C-4400-8AD9-5F2494C48868.html@@@1.2.5.9.3.15 DRV_MIIM_INSTANCES_NUMBER Macro@@@#define DRV_MIIM_INSTANCES_NUMBER 1 MIIM hardware instance configuration This definition selects the maximum number of hardware instances that can be supported by the dynamic driver. Usually set to 1...","GUID-65A118B4-D691-4EFE-AEDB-47814DBD841F.html@@@1.2.5.9.3.29 DRV_MIIM_Status Function@@@SYS_STATUS DRV_MIIM_Status(SYS_MODULE_OBJ object); SYS_STATUS_READY - Indicates that any previous module operation for the specified module has completed SYS_STATUS_BUSY - Indicates that a previous...","GUID-65CE7526-616B-443D-9B42-44FA26F81697.html@@@1.2.4.1.3.4 TCPIP_ARP_ENTRY_TYPE Enumeration@@@typedef enum { ARP_ENTRY_TYPE_INVALID, ARP_ENTRY_TYPE_PERMANENT, ARP_ENTRY_TYPE_COMPLETE, ARP_ENTRY_TYPE_INCOMPLETE, ARP_ENTRY_TYPE_ANY, ARP_ENTRY_TYPE_TOTAL } TCPIP_ARP_ENTRY_TYPE; Enumeration...","GUID-65E03364-0D0C-4608-9CA9-788C7D69E2FB.html@@@1.2.1.13.3.41 TCPIP_HTTP_NET_ConnectionUserDataGet Function@@@const void* TCPIP_HTTP_NET_ConnectionUserDataGet( TCPIP_HTTP_NET_CONN_HANDLE connHandle ); This function returns the user data value for the current HTTP connection. This data belongs to the user and...","GUID-669AB372-B432-43BD-9DF2-76C13A93F1CD.html@@@1.2.1.7.3.34 TCPIP_DNS_RemoveAll Function@@@TCPIP_DNS_RESULT TCPIP_DNS_RemoveAll(); This function is used to remove all the entries from the DNS cache. It removes both the solved and unresolved entries. The DNS module must be initialized...","GUID-66B4949D-9043-4118-B280-73011F092BE9.html@@@1.2.5.6.3.5 MAC_DRVR_Reinitialize Function@@@void MAC_DRVR_Reinitialize( SYS_MODULE_OBJ object, const SYS_MODULE_INIT * const init ); None This function supports re-initialization of the Ethernet MAC. This function is not supported yet...","GUID-66C50FB3-A837-493C-ABA8-EE47D795A3F4.html@@@1.2.5.2.17 TCPIP_MAC_HEAP_FreeFDbg Type@@@typedef size_t (* TCPIP_MAC_HEAP_FreeFDbg)(TCPIP_MAC_HEAP_HANDLE heapH, const void* pBuff, int moduleId, int lineNo); This is type TCPIP_MAC_HEAP_FreeFDbg...","GUID-66EB8140-8350-4270-9335-D4FF366A19E2.html@@@1.2.1.19.3.1 SNMP_COMMUNITY_TYPE Enumeration@@@typedef enum { READ_COMMUNITY = 1, WRITE_COMMUNITY = 2, INVALID_COMMUNITY = 3 } SNMP_COMMUNITY_TYPE; Enumeration: SNMP_COMMUNITY_TYPE. List of different SNMP community types. Members Description...","GUID-678252B9-1A23-48D6-8843-1AED6826E8BB.html@@@1.2.1.13.3.46 TCPIP_HTTP_NET_EVENT_TYPE Enumeration@@@typedef enum { TCPIP_HTTP_NET_EVENT_NONE = 0, TCPIP_HTTP_NET_EVENT_FS_UPLOAD_COMPLETE, TCPIP_HTTP_NET_EVENT_OPEN, TCPIP_HTTP_NET_EVENT_CLOSE_DONE, TCPIP_HTTP_NET_EVENT_CLOSE_TIMEOUT...","GUID-67B7F74D-2A4D-45F8-A901-939C6389671C.html@@@1.2.1.18.3.12 TCPIP_SMTPC_MESSAGE_REPORT Structure@@@typedef struct { TCPIP_SMTPC_MESSAGE_RESULT messageRes; TCPIP_SMTPC_MESSAGE_STATUS errorStat; TCPIP_SMTPC_MESSAGE_WARNING messageWarn; int leftRetries; } TCPIP_SMTPC_MESSAGE_REPORT; Structure...","GUID-68289005-8CBF-47A4-AAFF-3AEE46F579CF.html@@@1.2.1.19.3.20 TCPIP_SNMP_AuthTrapFlagGet Function@@@void TCPIP_SNMP_AuthTrapFlagGet( bool * authTrap ); This function is used to Get the authentication trap send flag and this is used only when the user is trying to send authentication failure trap...","GUID-68556710-752A-4812-8AD1-86673574C3E2.html@@@1.2.2.1.3.17 NET_PRES_EncProviderWriteReady Type@@@typedef uint16_t (* NET_PRES_EncProviderWriteReady)(void * providerData, uint16_t reqSize, uint16_t minSize); The number of bytes available in the output buffer: &gt;= reqSize, if the requested space is...","GUID-689276FE-78AE-42FA-B58E-34E65D8314A5.html@@@1.2.3.2.3.48 TCPIP_UDP_TxCountGet Function@@@uint16_t TCPIP_UDP_TxCountGet(UDP_SOCKET hUDP); This function returns the amount of bytes written into the UDP socket, i.e. the current position of the write pointer. UDP socket should have been...","GUID-68D68740-9D0A-4402-A960-1156015DB3F3.html@@@1.2.1.2.3.85 SOCKADDR Type@@@typedef struct sockaddr SOCKADDR; Generic address structure for all address families...","GUID-68E8F75C-904C-4EA5-B069-9C38BD5897B7.html@@@1.2.3.1.3.1 INVALID_SOCKET Macro@@@#define INVALID_SOCKET (-1) Macro: INVALID_SOCKET. Indicates that the socket is invalid or could not be opened...","GUID-69179ECB-8909-45CD-9A7F-E7268E132EE5.html@@@1.2.3.1.3.34 TCPIP_TCP_OptionsSet Function@@@bool TCPIP_TCP_OptionsSet( TCP_SOCKET hTCP, TCP_SOCKET_OPTION option, void* optParam ); Various options can be set at the socket level. This function provides compatibility with BSD implementations...","GUID-694C6E9D-E570-4398-94F5-B49A04A8C96C.html@@@1.2.6.1.1.3.5 TCPIP_Helper_Base64Decode Function@@@uint16_t TCPIP_Helper_Base64Decode( const uint8_t* sourceData, uint16_t sourceLen, uint8_t* destData, uint16_t destLen ); Decodes a base-64 array to its literal representation. sourceData, destData...","GUID-696B13AA-788B-45E4-A916-8EAC98896853.html@@@1.2.6.1.1.3.91 TCPIP_STACK_NetMACRegisterStatisticsGet Function@@@bool TCPIP_STACK_NetMACRegisterStatisticsGet( TCPIP_NET_HANDLE netH, TCPIP_MAC_STATISTICS_REG_ENTRY* pRegEntries, int nEntries, int* pHwEntries ); This function returns the hardware statistics...","GUID-696B5441-B8C4-4CC1-BCCC-A0BF436D411C.html@@@1.2.1.23.3.3 TCPIP_TFTPS_DEFAULT_BLOCK_SIZE Macro@@@#define TCPIP_TFTPS_DEFAULT_BLOCK_SIZE (32) The maximum value for the file name size. Even though the RFC allows blocks of up to 65464 bytes, In practice the limit is set to 1468 bytes: the size of an...","GUID-69815B29-49C7-4B1F-909D-6C9D2CDC27D0.html@@@1.2.1.2.3.63 NO_RECOVERY Macro@@@#define NO_RECOVERY 3 //Non recoverable errors, Non-recoverable errors...","GUID-698DCD9B-D267-47B4-9483-1ECC2149D2A9.html@@@1.2.1.13.3.61 TCPIP_HTTP_NET_UserHandlerDeregister Function@@@bool TCPIP_HTTP_NET_UserHandlerDeregister( TCPIP_HTTP_NET_USER_HANDLE hHttp ); This function deregisters a HTTP user callback handler. The HTTP server module properly initialized. Parameters...","GUID-69AEA514-74C4-495D-9033-9ED0078BBB71.html@@@1.2.4.5.3.22 TCPIP_IPV4_PacketHandlerRegister Function@@@TCPIP_IPV4_PROCESS_HANDLE TCPIP_IPV4_PacketHandlerRegister( TCPIP_IPV4_PACKET_HANDLER pktHandler, const void* handlerParam ); This function registers a new packet processing handler. The caller can...","GUID-69B2EBFA-D8E2-49BF-8191-62EA2F423BF0.html@@@1.2.1.22.3.5 TCPIP_TFTPC_GetEventNotification Function@@@TCPIP_TFTPC_EVENT_TYPE TCPIP_TFTPC_GetEventNotification(); This function returns the event type TCPIP_TFTPC_EVENT_TYPE for different modes of TFTP file communication. The TFTP client module must be...","GUID-69CFAD76-BC60-4706-8E51-9B17A10E309E.html@@@1.2.1.18.3.10 TCPIP_SMTPC_MESSAGE_HANDLE Type@@@typedef const void* TCPIP_SMTPC_MESSAGE_HANDLE; Type: TCPIP_SMTPC_MESSAGE_HANDLE. Data type describing a handle that identifies a mail message that&apos;s scheduled for transmission. This handle is to be...","GUID-69E7338C-A077-41E2-B205-89DFEE823875.html@@@1.2.5.9.3.9 DRV_MIIM_INDEX_0 Macro@@@#define DRV_MIIM_INDEX_0 0 MIIM Driver Module Index Numbers These constants provide the MIIM driver index definitions. These constants should be used in place of hard-coded numeric literals. These...","GUID-6A592A30-024F-4B99-9A6B-D8C4D8D777F7.html@@@1.2.5.10.3 Library Interface@@@Name Description Macros _DRV_PPP_H _ This is macro _DRV_PPP_H _ Enumerations PPP_STATE PPP Transition States PPP_CTRL_PROTO PPP control protocol identifier PPP_ECHO_RESULT result of an PPP Echo...","GUID-6A6C2AF6-6618-41DE-8AFA-493D780C7823.html@@@1.2.1.8.3.12 TCPIP_DNSS_HOST_NAME_LEN Macro@@@#define TCPIP_DNSS_HOST_NAME_LEN 64u Default DNS host name length...","GUID-6A8B96F2-9F5F-4D1C-A35D-0B3EF3B2FC70.html@@@1.2.6.1.1.3.67 TCPIP_STACK_NetAddressDnsPrimarySet Function@@@bool TCPIP_STACK_NetAddressDnsPrimarySet( TCPIP_NET_HANDLE netH, IPV4_ADDR* ipAddress ); This function sets the network interface primary IPv4 DNS address. The TCPIP_STACK_Initialize() function must...","GUID-6A97CE3B-076A-4EDE-B53D-E8C62ED03406.html@@@1.2.6.1.1.3.41 TCPIP_STACK_HandlerDeregister Function@@@bool TCPIP_STACK_HandlerDeregister( TCPIP_EVENT_HANDLE hEvent ); This function removes an event notification handler. The TCP/IP stack should have been initialized by TCPIP_STACK_Initialize() and the...","GUID-6AB7C2A7-4C32-4E18-9204-F39B1365EF4C.html@@@1.2.1.4.3.11 TCPIP_DHCPS_POOL_ENTRY_TYPE Enumeration@@@typedef enum { DHCP_SERVER_POOL_ENTRY_ALL, DHCP_SERVER_POOL_ENTRY_IN_USE } TCPIP_DHCPS_POOL_ENTRY_TYPE; Enumeration: TCPIP_DHCPS_POOL_ENTRY_TYPE. DHCP_SERVER_POOL_ENTRY_ALL - Get or Remove all the...","GUID-6AEC1BD6-F03B-4DC2-86D9-BC6024E3C231.html@@@1.2.3.1.3.23 TCPIP_TCP_FifoSizeAdjust Function@@@bool TCPIP_TCP_FifoSizeAdjust( TCP_SOCKET hTCP, uint16_t wMinRXSize, uint16_t wMinTXSize, TCP_ADJUST_FLAGS vFlags ); This function can be used to simultaneously adjust the sizes of the RX and TX...","GUID-6B6C990B-1359-470E-AC2C-11771DEC02D1.html@@@1.2.5.2.60 TCPIP_MODULE_GMAC_QUEUE_CONFIG Structure@@@typedef struct { uint16_t nRxDescCnt; uint16_t nRxBuffCount; uint16_t nRxBuffCntThres; uint16_t nRxBuffAllocCnt; uint16_t nTxDescCnt; uint16_t txBufferSize; uint16_t txMaxPktSize; uint16_t...","GUID-6B8E110D-4FF7-404E-8E92-ACAEA6DE0AFA.html@@@1.2.1.2 Berkeley Module@@@The Berkeley_Socket_Distribution (BSD) APIs provide a BSD wrapper to the native Microchip TCP/IP Stack APIs. Using this interface, programmers familiar with BSD_sockets can quickly develop...","GUID-6B9089D6-DD0B-4E85-B6EE-86300657170B.html@@@1.2.5.4.3.22 DRV_ENCX24J600_SetMacCtrlInfo Function@@@void DRV_ENCX24J600_SetMacCtrlInfo(SYS_MODULE_OBJ object, TCPIP_MAC_MODULE_CTRL * init); None. ENCX24J600 Set MAC Control Information This function is used to pass in the TCPIP_MAC_CONTROL_INIT...","GUID-6BA9DFB7-8062-4262-8751-6D45D3CF21E4.html@@@1.2.1.4.3.13 TCPIP_DHCPS_Task Function@@@void TCPIP_DHCPS_Task(); This function performs DHCP server module tasks in the TCP/IP stack. The DHCP server module should have been initialized. None. None...","GUID-6BE3132D-9D0A-432C-8EC4-15AB39D0D0AB.html@@@1.2.3.1.3.29 TCPIP_TCP_GetIsReady Function@@@uint16_t TCPIP_TCP_GetIsReady( TCP_SOCKET hTCP ); Call this function to determine how many bytes can be read from the TCP RX buffer. If this function returns zero, the application must return to the...","GUID-6C4EA2C1-CD13-481B-ACBF-2EB77E7CFF3D.html@@@1.2.6.1.1.3.78 TCPIP_STACK_NetConfigGet Function@@@size_t TCPIP_STACK_NetConfigGet( TCPIP_NET_HANDLE netH, void* configStoreBuff, size_t configStoreSize, size_t* pNeededSize ); This function dumps the current configuration data of the network...","GUID-6C8B6BC1-3D96-4634-A4FB-A3204D833C70.html@@@1.2.4.5.3.4 IPV4_PACKET Structure@@@typedef struct { TCPIP_MAC_PACKET macPkt; IPV4_ADDR srcAddress; IPV4_ADDR destAddress; TCPIP_NET_HANDLE netIfH; uint8_t optionLen; uint8_t optionOffset; uint16_t optionMask; } IPV4_PACKET; IPv4 packet...","GUID-6CA1CA3F-29AE-487B-BD5E-5803D9E9A04E.html@@@1.2.1.24.3.5 TCPIP_MDNS_Task Function@@@void TCPIP_MDNS_Task(); This function performs MDNS module tasks in the TCP/IP stack. MDNS module should have been initialized. None. None...","GUID-6CBFB260-A020-4046-9311-CA8D9CB62FC8.html@@@1.2.1.7.3.35 TCPIP_DNS_RemoveEntry Function@@@TCPIP_DNS_RESULT TCPIP_DNS_RemoveEntry( const char * hostName ); This function is used to remove an entry (host name) from the DNS cache. The DNS module must be initialized. Parameters Description...","GUID-6CEFB266-0BD0-4C0E-AD2C-D054CA502682.html@@@1.2.1.7.3.2 TCPIP_DNS_CLIENT_CACHE_DEFAULT_TTL_VAL Macro@@@#define TCPIP_DNS_CLIENT_CACHE_DEFAULT_TTL_VAL (20 * 60) Default TTL time for a solved entry in the cache This value will be used when the DNS server TTL value for an entry is 0...","GUID-6D0ED7D6-B863-4E31-8AE4-6502383000FE.html@@@1.2.1.2.3.101 TRY_AGAIN Macro@@@#define TRY_AGAIN 2 //Non authoritative host not found or server fail Non-authoritative host not found or server fail...","GUID-6D26931C-538F-4F1F-80A6-2CB1DE1D59F1.html@@@1.2.6.1.1.3.100 TCPIP_STACK_PacketHandlerDeregister Function@@@bool TCPIP_STACK_PacketHandlerDeregister( TCPIP_NET_HANDLE hNet, TCPIP_STACK_PROCESS_HANDLE pktHandle ); This function removes a packet processing handler. The TCP/IP stack should have been...","GUID-6D657280-1551-4998-9C0B-55B3D44B50CD.html@@@1.2.1.3.3.2 TCPIP_DHCP_Enable Function@@@bool TCPIP_DHCP_Enable( TCPIP_NET_HANDLE hNet ); This function enables the DHCP client for the specified interface, if it is disabled. If it is already enabled, no action is taken. The DHCP module...","GUID-6D863B8C-E295-4B65-9A8B-8D467258E1F8.html@@@1.2.1.3.3.15 TCPIP_DHCP_IsServerDetected Function@@@bool TCPIP_DHCP_IsServerDetected( TCPIP_NET_HANDLE hNet ); This function determines if the DHCP client on the specified interface received any reply from a DHCP server. The DHCP module must be...","GUID-6DC8E96C-37D7-4D81-A29A-EF52BEF52F88.html@@@1.2.1.12.2.47 TCPIP_HTTP_URLDecode Function@@@uint8_t* TCPIP_HTTP_URLDecode( uint8_t* cData ); This function parses a string from URL encoding to plain-text. The following conversions are made: \u2018=\u2019 to \u20180\u2019, \u2018&\u2019 to \u20180\u2019, \u2018+\u2019 to \u2018 \u2018, and \u201C%xx\u201D to a...","GUID-6DF9F69D-E6E7-4570-B1C2-110CCB0395EE.html@@@1.2.6.1.1.3.56 TCPIP_STACK_HEAP_TYPE Enumeration@@@typedef enum { TCPIP_STACK_HEAP_TYPE_NONE = 0, TCPIP_STACK_HEAP_TYPE_INTERNAL_HEAP, TCPIP_STACK_HEAP_TYPE_INTERNAL_HEAP_POOL, TCPIP_STACK_HEAP_TYPE_EXTERNAL_HEAP, TCPIP_STACK_HEAP_TYPES }...","GUID-6E916C11-5B93-432A-9B48-BEF351DE02A4.html@@@1.2.5.6.1 Abstraction Model@@@Figure 1-1.\u2000 EMAC Block Diagram Functional Description The EMAC has several clock domains: System bus clock (AHB and APB): DMA and register blocks Transmit clock: transmit block Receive clock: receive...","GUID-6E9DD3E7-E438-416B-85DB-5C0793360533.html@@@1.2.5.7.3.21 DRV_ETHMAC_PIC32MACTasks Function@@@void DRV_ETHMAC_PIC32MACTasks(SYS_MODULE_OBJ object); None This function is used to maintain the driver&apos;s internal state machine None. The DRV_ETHMAC_PIC32MACInitialize routine must have been called...","GUID-6EA2118B-F0EF-4A59-9B7E-1A232F6CB4F5.html@@@1.2.1.12.2.31 TCPIP_HTTP_CurrentConnectionUploadBufferEndGet Function@@@const void* TCPIP_HTTP_CurrentConnectionUploadBufferEndGet( HTTP_CONN_HANDLE connHandle ); This function will return the end address of current connection upload buffer. None. Parameters Description...","GUID-6EB562C9-CDC8-457B-A9D6-9127D545C12A.html@@@1.2.1.19.3.25 TCPIP_SNMP_IsTrapEnabled Function@@@bool TCPIP_SNMP_IsTrapEnabled(); This function returns true if SNMP module is enabled to send the trap to to the SNMP manager device. TCPIP_SNMP_Initialize() is already called. True - SNMP module has...","GUID-6EDD246F-4BDF-4E35-BEF8-9DFB602D9332.html@@@1.2.3.2.3.16 TCPIP_UDP_IsConnected Function@@@bool TCPIP_UDP_IsConnected(UDP_SOCKET hUDP); This function determines if a socket has an established connection to a remote node. Call this function after calling...","GUID-6EF8789A-E5DC-48A2-BC38-A59C49B05887.html@@@1.2.5.7.3.22 DRV_ETHMAC_Tasks_ISR Function@@@void DRV_ETHMAC_Tasks_ISR(SYS_MODULE_OBJ macIndex); None. This is the Ethernet MAC driver interrupt service routine. It processes the Ethernet related interrupts and notifies the events to the driver...","GUID-6EFA49D3-5456-4615-83D8-52877638459E.html@@@1.2.1.5.3.3 TCPIP_DHCPS_CONFIG_FLAGS Enumeration@@@typedef enum { TCPIP_DHCPS_CONFIG_FLAG_NONE = 0, TCPIP_DHCPS_CONFIG_FLAG_DISABLED = 0x0001, TCPIP_DHCPS_CONFIG_FLAG_DELETE_OLD = 0x0002, TCPIP_DHCPS_CONFIG_FLAG_NO_CONFLICT_DETECT = 0x0004...","GUID-6F23D2EF-B6E7-494F-84ED-5F4E4281BEEC.html@@@1.2.3.1.3.27 TCPIP_TCP_Flush Function@@@bool TCPIP_TCP_Flush( TCP_SOCKET hTCP ); This function immediately transmits all pending TX data with a PSH flag. If this function is not called, data will automatically be sent by the TCP state...","GUID-6F2DA513-3283-4D24-9A88-AF97E09B19A1.html@@@1.2.1.10.3.37 TCPIP_FTPC_SetStruct Function@@@TCPIP_FTPC_RETURN_TYPE TCPIP_FTPC_SetStruct(TCPIP_FTPC_CONN_HANDLE_TYPE ftpcHandle, TCPIP_FTPC_DATA_STRUCT_TYPE file_struct); TCPIP_FTPC_RET_OK - if successfully scheduled function TCPIP_FTPC_RET_BUSY...","GUID-6F4B31B8-AF16-4486-984A-E3B14BB588A8.html@@@1.2.1.13.3.32 TCPIP_HTTP_NET_ConnectionPostSmSet Function@@@void TCPIP_HTTP_NET_ConnectionPostSmSet( TCPIP_HTTP_NET_CONN_HANDLE connHandle, uint16_t state ); This function sets the POST state machine state for the connection defined by connHandle. This state...","GUID-6F5F61EF-AA8B-483C-84B0-D79136FFF642.html@@@1.2.4.5.3.5 IPV4_TYPE_OF_SERVICE Union@@@typedef union { uint8_t val; struct { uint8_t reserved : 2; uint8_t reliability : 1; uint8_t throughput : 1; uint8_t delay : 1; uint8_t precedence : 3; } } IPV4_TYPE_OF_SERVICE; IPv4 type of service...","GUID-6FF90021-66FF-49D3-9420-42FB43F599DE.html@@@1.2.4.6.3.31 IPV6_TLV_UNREC_OPT_SKIP_OPTION Macro@@@#define IPV6_TLV_UNREC_OPT_SKIP_OPTION 0x00 IPv6 action code for the unrecognized option reaction to skip the option...","GUID-700B1BDA-09F9-4346-8F0B-D98C6BB5161E.html@@@1.2.4.1.3.19 TCPIP_ARP_Probe Function@@@TCPIP_ARP_RESULT TCPIP_ARP_Probe( TCPIP_NET_HANDLE hNet, IPV4_ADDR* IPAddr, IPV4_ADDR* srcAddr, TCPIP_ARP_OPERATION_TYPE opType ); This function transmits and ARP probe to determine the hardware...","GUID-70138883-677F-48EF-ADD2-00C9F9DA0E3F.html@@@1.2.1.18.3.8 TCPIP_SMTPC_MailMessage Function@@@TCPIP_SMTPC_MESSAGE_HANDLE TCPIP_SMTPC_MailMessage( const TCPIP_SMTPC_MAIL_MESSAGE* pMailMessage, TCPIP_SMTPC_MESSAGE_RESULT* pRes ); This function sends a mail message to the specified server. SMTPC...","GUID-703BC1FC-C9DB-4AF8-B1B8-E4457C8311B9.html@@@1.2.6.1.1.3.89 TCPIP_STACK_NetIsUp Function@@@bool TCPIP_STACK_NetIsUp( TCPIP_NET_HANDLE hNet ); This function returns the network interface up or down (enabled) status. The TCP/IP stack should have been initialized by TCPIP_STACK_Initialize()...","GUID-7079544C-E6F0-4693-B31F-C5B70B4ABC67.html@@@1.2.4.6.3.66 TCPIP_IPV6_UnicastAddressAdd Function@@@IPV6_ADDR_STRUCT * TCPIP_IPV6_UnicastAddressAdd( TCPIP_NET_HANDLE netH, IPV6_ADDR * address, int prefixLen, uint8_t skipProcessing ); Adds a unicast address to a specified interface. Starts duplicate...","GUID-70933C81-52F2-42FE-809E-27FAC2E07EA2.html@@@1.2.5.8.4.7 DRV_ETHPHY_CONFIG_FLAGS Enumeration@@@typedef enum { DRV_ETHPHY_CFG_RMII, DRV_ETHPHY_CFG_MII, DRV_ETHPHY_CFG_ALTERNATE, DRV_ETHPHY_CFG_DEFAULT, DRV_ETHPHY_CFG_AUTO } DRV_ETHPHY_CONFIG_FLAGS; Members Description DRV_ETHPHY_CFG_RMII RMII...","GUID-70D8E98F-3144-4603-B461-67C6984BC7AF.html@@@1.2.1.6.3.5 TCPIP_DHCPV6_DUID_TYPE Enumeration@@@typedef enum { TCPIP_DHCPV6_DUID_TYPE_NONE = 0, TCPIP_DHCPV6_DUID_TYPE_LLT = 1, TCPIP_DHCPV6_DUID_TYPE_EN = 2, TCPIP_DHCPV6_DUID_TYPE_LL = 3 } TCPIP_DHCPV6_DUID_TYPE; Types of DUID for DHCPv6. Members...","GUID-7105DF7F-60A9-4F2E-A7E5-784499DF37BF.html@@@1.2.4.3.3.6 TCPIP_ICMPV6_PutHeaderEchoReply Macro@@@#define TCPIP_ICMPV6_PutHeaderEchoReply TCPIP_ICMPV6_HeaderEchoRequestPut This is macro TCPIP_ICMPV6_PutHeaderEchoReply...","GUID-71366BF3-F342-4C9D-82D8-604BF66C8FAF.html@@@1.2.1.2.3.97 TCP_NODELAY Macro@@@#define TCP_NODELAY 1 //Indicates if TCP is to buffer packets - Not yet supported Indicates if TCP is to buffer packets. Not yet supported...","GUID-715E33FC-50B7-4837-AFB1-55BCD0D15884.html@@@1.2.6.1.1.3.60 TCPIP_STACK_Initialize Function@@@SYS_MODULE_OBJ TCPIP_STACK_Initialize( const SYS_MODULE_INDEX index, const SYS_MODULE_INIT * const init ); This function initializes the stack. If an error occurs, the SYS_ERROR() is called and the...","GUID-7161C177-734B-469A-9143-4C88FC11C85D.html@@@1.2.4.1.3.1 TCPIP_ARP_CacheEntriesNoGet Function@@@size_t TCPIP_ARP_CacheEntriesNoGet( TCPIP_NET_HANDLE hNet, TCPIP_ARP_ENTRY_TYPE type ); The function will return the number of entries of the specified type that are currently in the cache. The ARP...","GUID-717CE47B-9DA1-4C30-AFBE-1807B04FCFC4.html@@@1.2.4.4.3.9 TCPIP_IGMP_HandlerDeRegister Function@@@bool TCPIP_IGMP_HandlerDeRegister( TCPIP_IGMP_HANDLE hIgmp ); This function deregisters the IGMP client event handler. The IGMP module must be initialized. Parameters Description hIgmp A handle...","GUID-71AA8C3F-B97A-403A-ABD5-B5B0178F8696.html@@@1.2.5.9.3.10 DRV_MIIM_INDEX_COUNT Macro@@@#define DRV_MIIM_INDEX_COUNT 1 MIIM Driver Module Index Count This constant identifies the number of valid MIIM driver indices. This constant should be used in place of hard-coded numeric literals...","GUID-7229E3C2-66B4-4EA1-816D-85C09249A5DE.html@@@1.2.1.5.3.10 TCPIP_DHCPS_HandlerDeRegister Function@@@bool TCPIP_DHCPS_HandlerDeRegister(TCPIP_DHCPS_EVENT_HANDLE hDhcp) Deregisters a previously registered DHCP handler.This function deregisters the DHCP event handler. The DHCP module must be...","GUID-725CB883-355E-4F5B-94FB-E5623A6FCBEC.html@@@1.2.1.5.3.23 TCPIP_DHCPS_LeaseRemoveById Function@@@TCPIP_DHCPS_RES TCPIP_DHCPS_LeaseRemoveById(TCPIP_NET_HANDLE netH, const uint8_t* clientId, size_t idLen, bool keepAddBusy); Remove one entry from the DHCP server DB This function is used to remove...","GUID-7283A146-83D0-485D-9A58-307266046894.html@@@1.2.6.1.1.3.24 TCPIP_Helper_SecurePortSet Function@@@bool TCPIP_Helper_SecurePortSet( uint16_t port, bool streamSocket, bool isSecure ); This function sets the internal data for deciding if the required port is a secure port or not. A secure port is one...","GUID-72996086-347E-450C-AE92-7FFEC4F0DEE9.html@@@1.2.1.2.3.6 accept Function@@@SOCKET accept( SOCKET s, struct sockaddr* addr, int* addrlen ); The accept function is used to accept connection request queued for a listening socket. If a connection request is pending, accept...","GUID-72A42486-DE9F-4B4F-AA49-1940C08D83C6.html@@@1.2.2.1.3.71 NET_PRES_TransOption Type@@@typedef bool (* NET_PRES_TransOption)(NET_PRES_SKT_HANDLE_T handle, NET_PRES_TRANS_OPTION_T option, void * optParam); true - Indicates success false - Indicates failure Transport Layer Option Function...","GUID-72D7337D-8BF6-4A88-876B-5322355A45E6.html@@@1.2.3.2.3.32 TCPIP_UDP_SIGNAL_HANDLE Type@@@typedef const void* TCPIP_UDP_SIGNAL_HANDLE; Type: TCPIP_UDP_SIGNAL_HANDLE A handle that a socket client can use after the signal handler has been registered...","GUID-72E6650E-1C11-4917-8C93-F45EF0D59244.html@@@1.2.3.2.3.18 TCPIP_UDP_MAX_SOCKETS Macro@@@#define TCPIP_UDP_MAX_SOCKETS (10) Maximum number of UDP sockets that can be opened simultaneously These sockets will be created when the module is initialized...","GUID-7331FDCC-3800-490B-9496-10202260E785.html@@@1.2.1.4.3.10 TCPIP_DHCPS_MODULE_CONFIG Structure@@@typedef struct { bool enabled; bool deleteOldLease; size_t leaseEntries; uint32_t entrySolvedTmo; TCPIP_DHCPS_ADDRESS_CONFIG * dhcpServer; } TCPIP_DHCPS_MODULE_CONFIG; Structure...","GUID-7345DAD9-125F-4D53-A14B-444D3606A480.html@@@1.2.5.8 Ethernet PHY Driver Library@@@This library provides a software abstraction for configuring external Ethernet PHY devices for use with the on-chip Ethernet Controller. Few of the supported Ethernet PHYs are: - KSZ8041 - KSZ8061...","GUID-7349956C-2B03-47E9-ADA4-9BA8092B9CC7.html@@@1.2.4.5.3.10 TCPIP_IPV4_MODULE_CONFIG Structure@@@typedef struct { size_t arpEntries; TCPIP_IPV4_FORWARD_FLAGS forwardFlags; size_t forwardTxQueueSize; size_t forwardTableMaxEntries; size_t forwardTableSize; const TCPIP_IPV4_FORWARD_ENTRY*...","GUID-739C2A7B-0290-41CF-91EE-E82F65EE641B.html@@@1.2.1.2.3.66 send Function@@@int send( SOCKET s, const char* buf, int len, int flags ); The send() function is used to send outgoing data on an already connected socket. This function is used to send a reliable, ordered stream of...","GUID-73B3319C-B2E2-4C0B-9815-3FA51662F8C9.html@@@1.2.5.4.3.2 DRV_ENCX24J600_Close Function@@@void DRV_ENCX24J600_Close(DRV_HANDLE handle); None. ENCX24J600 Close This function closes a handle to the driver. If it is the last client open, the driver will send an RX Disable command to the ENC...","GUID-740B62BA-47D1-4D62-B043-95A26A781015.html@@@1.2.1.5.3.27 TCPIP_DHCPS_STATISTICS_DATA Structure@@@typedef struct __attribute__((packed)) { uint16_t releasedDelCount; uint16_t expiredDelCount; uint16_t cacheFullCount; uint16_t poolEmptyCount; uint16_t declinedCount; uint16_t arpFailCount; uint16_t...","GUID-7428463B-358F-43F8-8965-2DFEB7CD1C31.html@@@1.2.2.1.3.50 NET_PRES_SocketPeek Function@@@uint16_t NET_PRES_SocketPeek(NET_PRES_SKT_HANDLE_T handle, void * buffer, uint16_t size); If the socket is encrypted this function will call the encryption provider&apos;s peek function. Otherwise this...","GUID-743CF905-4A75-4FD2-AA75-781FE5A66CF4.html@@@1.2.1.13.3.9 TCPIP_HTTP_NET_CONN_HANDLE Type@@@typedef const void* TCPIP_HTTP_NET_CONN_HANDLE; HTTP connection identifier, handle of a HTTP connection...","GUID-745D4804-2A6E-4498-8E2C-ED84DD1AD82F.html@@@1.2.1.10.3.31 TCPIP_FTPC_PutFile Function@@@TCPIP_FTPC_RETURN_TYPE TCPIP_FTPC_PutFile(TCPIP_FTPC_CONN_HANDLE_TYPE ftpcHandle, TCPIP_FTPC_DATA_CONN_TYPE * pftpcDataConn, TCPIP_FTPC_FILE_OPT_TYPE * pfileOptions...","GUID-748C5E7F-0CD8-443E-BBD5-55D907D25644.html@@@1.2.1.15.3.1 TCPIP_NBNS_MODULE_CONFIG Structure@@@typedef struct { void* reserved; } TCPIP_NBNS_MODULE_CONFIG; TCPIP_NBNS_MODULE_CONFIG Structure Typedef. This type definition provides a placeholder for NBNS configuration upgrades. None...","GUID-7499888A-AA54-4A66-8081-A446FCC0DB37.html@@@1.2.1.1.3.5 TCPIP_ANNOUNCE_MessageRequest Function@@@bool TCPIP_ANNOUNCE_MessageRequest( TCPIP_NET_HANDLE hNet, TCPIP_ANNOUNCE_BROADCAST_TYPE bcastType ); This function instructs the module to send an announce message on the specified interface using...","GUID-749C3475-16E5-4047-A835-95F9A8471691.html@@@1.2.5.2.56 TCPIP_MAC_SynchReqF Type@@@typedef bool (* TCPIP_MAC_SynchReqF)(void* synchHandle, TCPIP_MAC_SYNCH_REQUEST request); Synchronization request Function: typedef bool (*TCPIP_MAC_SynchReqF)(void* synchHandle...","GUID-74B3E36D-F31D-4FF9-81AE-F536511AFB2D.html@@@1.2.6.1.1.3.35 TCPIP_MODULE_SignalGet Function@@@TCPIP_MODULE_SIGNAL TCPIP_MODULE_SignalGet( TCPIP_STACK_MODULE moduleId ); This function provides a read only value of the current signals for a stack module. The TCP/IP stack should have been...","GUID-74D3EA7F-1389-41B0-BCAB-3D89B4C48C01.html@@@1.2.5.6 Ethernet EMAC Driver Library@@@The EMAC module implements a 10/100 Ethernet MAC compatible with the IEEE 802.3 standard using an address checker, statistics and control registers, receive and transmit blocks, and a DMA interface...","GUID-74D650FD-483B-49E2-AD07-CDC28CB5D7CC.html@@@1.2.1.19.3.47 TCPIP_SNMP_TRAPTypeGet Function@@@bool TCPIP_SNMP_TRAPTypeGet(); This function returns true if the trap tye is v2 and the TRAP pdu packet will be a TRAP v2 format.The return value is also used is validated when SNMP module is trying...","GUID-751A65BB-A8A4-41BB-8888-6F92E2B6D511.html@@@1.2.6.1.1.3.32 TCPIP_MODULE_SIGNAL_HANDLE Type@@@typedef const void* TCPIP_MODULE_SIGNAL_HANDLE; Type: TCPIP_MODULE_SIGNAL_HANDLE. Definition of a signal function handle used for signal registration by the stack clients...","GUID-75470E5B-2289-4F94-AE85-2BB7DF4C4F07.html@@@1.2.2.1.3 Library Interface@@@This section describes the Application Programming Interface (API) functions of the Networking Presentation Layer. Name Description System Functions NET_PRES_Deinitialize Deinitializes the Network...","GUID-7551DC67-D79D-4F0C-B56F-7B17E12400E0.html@@@The Microchip Website@@@Microchip provides online support via our website at www.microchip.com/ . This website is used to make files and information easily available to customers. Some of the content available includes...","GUID-7566549E-EC59-489A-93C7-CA1BE422E2C3.html@@@1.2.1.18.3.5 TCPIP_SMTPC_ENCODE_TYPE Enumeration@@@typedef enum { TCPIP_SMTPC_ENCODE_TYPE_UNKNOWN, TCPIP_SMTPC_ENCODE_TYPE_7BIT, TCPIP_SMTPC_ENCODE_TYPE_BASE64 } TCPIP_SMTPC_ENCODE_TYPE; Enumeration: TCPIP_SMTPC_ENCODE_TYPE Enumeration describing the...","GUID-75BD1A70-4576-4266-8274-1F18619A98A0.html@@@2 Getting started with MPLAB\u00AE Harmony TCP/IP Stack@@@...","GUID-75EF7F93-F4BC-4BED-B58A-80FA9E8FD2E0.html@@@1.2.6.1.1.3.46 TCPIP_STACK_HEAP_FreeSize Function@@@size_t TCPIP_STACK_HEAP_FreeSize( TCPIP_STACK_HEAP_HANDLE heapH ); This function returns the size of the space currently available in the heap. heapH - valid heap handle. Parameters Description heapH...","GUID-761C465D-E2A7-429A-8E51-7DC5A90C2121.html@@@1.2.1.12 HTTP Module@@@The HTTP Web Server module allows a development board to act as a Web server. This facilitates an easy method to view status information and control applications using any standard Web browser. Note...","GUID-7645CE81-674E-46E5-9299-201CE93A0DB5.html@@@1.2.1.13.3.17 TCPIP_HTTP_NET_ConnectionDiscard Function@@@uint16_t TCPIP_HTTP_NET_ConnectionDiscard( TCPIP_HTTP_NET_CONN_HANDLE connHandle ); This function discards data from the connection RX buffer. connHandle - a valid HTTP connection. Parameters...","GUID-766BE7AD-BF8C-413A-90F1-0BAC0BF710DD.html@@@1.2.1.9.3.12 TCPIP_DNSS_RESULT_OBSOLETE Enumeration@@@typedef enum { DNSS_RES_OK = 0, DNSS_RES_NO_SERVICE = -1, DNSS_RES_CACHE_FULL = -2, DNSS_RES_NO_ENTRY = -3, DNSS_RES_NO_IPADDRESS = -4, DNSS_RES_MEMORY_FAIL = -5, DNSS_RES_DUPLICATE_ENTRY = -6 }...","GUID-76741EFE-342E-4BBE-8D2B-2637B6DDBAB8.html@@@1.2.1.2.3.58 IPV6_UNICAST_HOPS Macro@@@#define IPV6_UNICAST_HOPS 16 //Set the hop limit for unicast IPv6 packets - Not yet supported Set the hop limit for unicast IPv6 packets. Not yet supported...","GUID-76832053-CAD2-46D5-9AD5-FC26C6E0316B.html@@@1.2.1.3.3.4 TCPIP_DHCP_EVENT_TYPE Enumeration@@@typedef enum { DHCP_EVENT_NONE = 0, DHCP_EVENT_DISCOVER, DHCP_EVENT_REQUEST, DHCP_EVENT_ACK, DHCP_EVENT_ACK_INVALID, DHCP_EVENT_DECLINE, DHCP_EVENT_NACK, DHCP_EVENT_TIMEOUT, DHCP_EVENT_BOUND...","GUID-76C51369-7529-4E85-8C03-46CF83D5009D.html@@@1.2.1.1.2 TCPIP Announce Configurations@@@Announce Specific User Configurations Announce Broadcast Type: Type of the broadcast used by the Announce module This type enables the network directed broadcast If it is not defined or it is 0, the...","GUID-770F9193-1600-4D05-9B2E-46407E83F8BE.html@@@1.2.1.15.1 Abstraction Model@@@...","GUID-77338732-56E0-49ED-9807-B6A63D3C982C.html@@@1.2.5.8.4.19 DRV_ETHPHY_NEG_DONE_TMO Macro@@@#define DRV_ETHPHY_NEG_DONE_TMO (2000) Ethernet PHY Negotiation Complete time out This definition sets the time out of the PHY negotiation complete, in ms. See IEEE 802.3 Clause 28 Table 28-9...","GUID-7764E81C-8FC9-4B3E-8830-255BDE678AA0.html@@@1.2.1.19.3 Library Interface@@@Name Description Macros TCPIP_SNMP_BIB_FILE_NAME The Microchip mib2bib.jar compiler is used to convert the Microchip MIB script to binary format and it is compatible with the Microchip SNMP agent...","GUID-779137A6-F3A1-4607-91B5-B1138393F3F2.html@@@1.2.5.8.4.21 DRV_ETHPHY_NEGOTIATION_RESULT Structure@@@typedef struct { DRV_ETHPHY_LINK_STATUS linkStatus; TCPIP_ETH_OPEN_FLAGS linkFlags; TCPIP_ETH_PAUSE_TYPE pauseType; } DRV_ETHPHY_NEGOTIATION_RESULT; Members Description DRV_ETHPHY_LINK_STATUS...","GUID-7798753E-5953-45DE-9E0F-FF6EA043E124.html@@@1.2.6.1.1.3.27 TCPIP_Helper_StringToMACAddress Function@@@bool TCPIP_Helper_StringToMACAddress( const char* str, uint8_t macAddr[6] ); This function parses a MAC address string &quot;aa:bb:cc:dd:ee:ff&quot; or &quot;aa-bb-cc-dd-ee-ff&quot; into an hex MAC address. macAddr...","GUID-77B72E29-93E6-4604-ADED-4A3D10585673.html@@@1.2.4.4.3.14 TCPIP_IGMP_MODULE_CONFIG Structure@@@typedef struct { const char* lowSsmAddress; const char* highSsmAddress; int reportInterval; int nInterfaces; int nSockets; int nGroups; int nGroupSources; int nSourceSockets; }...","GUID-77C8F671-2DE5-4CD8-AD9B-D2A0A95041CA.html@@@1.2.1.21 Telnet Module@@@Telnet, which runs over a TCP connection, provides bidirectional, interactive communication between two nodes on the Internet or on a Local Area Network. The Telnet code included with Harmony TCP/IP...","GUID-77E3B633-27B7-4B00-84F8-2ADB12C4497C.html@@@1.2.1.13.3.16 TCPIP_HTTP_NET_ConnectionDataBufferSizeGet Function@@@uint16_t TCPIP_HTTP_NET_ConnectionDataBufferSizeGet( TCPIP_HTTP_NET_CONN_HANDLE connHandle ); This function returns the size of the HTTP connection internal data buffer. None. Parameters Description...","GUID-780F540D-D266-4F0B-BC42-09955B80F4A4.html@@@1.2.6.1.1.3.90 TCPIP_STACK_NetMACIdGet Function@@@TCPIP_STACK_MODULE TCPIP_STACK_NetMACIdGet( TCPIP_NET_HANDLE netH ); This function returns the module ID of the MAC that&apos;s attached to the specified network interface. The TCP/IP stack should have...","GUID-78138D90-0366-4702-91C7-86ADDC7DCC13.html@@@1.2.1.23.3.17 TCPIP_TFTPS_RETRANSMIT_COUNT Macro@@@#define TCPIP_TFTPS_RETRANSMIT_COUNT (3u) The number of attempts to retransmit the previous packet before declaring a TIMEOUT error...","GUID-7820ED03-0BDB-4786-AB0E-75F76144F569.html@@@1.2.1.7.3.21 TCPIP_DNS_ENTRY_QUERY Structure@@@typedef struct { char* hostName; int nameLen; IPV4_ADDR * ipv4Entry; int nIPv4Entries; IPV6_ADDR * ipv6Entry; int nIPv6Entries; TCPIP_DNS_RESULT status; uint32_t ttlTime; TCPIP_NET_HANDLE hNet; int...","GUID-78AA9C7F-FB18-42D9-9091-9623B7566BB0.html@@@1.2.2.1.3.76 NET_PRES_TransSignalHandlerDeregister Type@@@typedef bool (* NET_PRES_TransSignalHandlerDeregister)(NET_PRES_SKT_HANDLE_T handle, NET_PRES_SIGNAL_HANDLE hSig); true - Indicates success false - Indicates failure Transport Layer Deregister Handler...","GUID-78B04367-8967-496E-BF27-437D88F7CBFE.html@@@1.2.2.1.3.43 NET_PRES_SocketIsNegotiatingEncryption Function@@@bool NET_PRES_SocketIsNegotiatingEncryption(NET_PRES_SKT_HANDLE_T handle); true - If the encryption negotiation is still ongoing false - If there is no ongoing negotiation This function returns checks...","GUID-78D816B5-80FB-448C-862E-4EAB327B951D.html@@@1.2.1.13.3.5 TCPIP_HTTP_DYN_VAR_DCPT Structure@@@typedef struct { const char* dynName; const char* fileName; uint16_t callbackID; uint8_t dynFlags; uint8_t nArgs; TCPIP_HTTP_DYN_ARG_DCPT* dynArgs; const void* dynContext; } TCPIP_HTTP_DYN_VAR_DCPT...","GUID-78F420D8-1FC9-475F-A765-056CDFE31B23.html@@@1.2.1.2.3.60 linger Structure@@@struct linger { int l_onoff; int l_linger; }; This is record linger. Members Description onoff Determines if the option is set. linger Time to wait before data is discarded...","GUID-792A7A92-BA79-472A-A354-DE0A4C5A3C03.html@@@1.2.1.5.3.25 TCPIP_DHCPS_REQ_FORMAT_ERR_MASK Enumeration@@@typedef enum { TCPIP_DHCPS_REQ_FORMAT_ERR_NONE = 0, TCPIP_DHCPS_REQ_FORMAT_ERR_SRV_ID_SET = 0x0001, TCPIP_DHCPS_REQ_FORMAT_ERR_SRV_ID_MISS = 0x0002, TCPIP_DHCPS_REQ_FORMAT_ERR_REQUEST_IP_SET = 0x0004...","GUID-79671133-697D-41F2-B607-BFA7F86B1F10.html@@@1.2.4.1.3.9 TCPIP_ARP_EntryRemoveNet Function@@@TCPIP_ARP_RESULT TCPIP_ARP_EntryRemoveNet( TCPIP_NET_HANDLE hNet, IPV4_ADDR* ipAdd, IPV4_ADDR* mask, TCPIP_ARP_ENTRY_TYPE type ); This function removes all existent mappings belonging to a network...","GUID-797ADA4A-8A29-42FC-9F8E-19B4D99ACF02.html@@@1.2.1.3.3.19 TCPIP_DHCP_RequestTimeoutSet Function@@@bool TCPIP_DHCP_RequestTimeoutSet( TCPIP_NET_HANDLE hNet, uint16_t initTmo, uint16_t dhcpBaseTmo ); This function allows the run time adjustment of the DHCP time-out values. It specifies for how long...","GUID-7992CCCE-0909-471E-A604-0260C63B5B94.html@@@1.2.1.2.3.91 socket Function@@@SOCKET socket( int af, int type, int protocol ); This function creates a new BSD socket for the Microchip TCP/IP stack. The return socket descriptor is used for the subsequent BSD operations. The...","GUID-79C9E2B1-1D4B-4872-9F85-473AB1727C15.html@@@1.2.1.2.3.57 IPV6_MULTICAST_LOOP Macro@@@#define IPV6_MULTICAST_LOOP 19 //Specify a copy of multicast IPv6 packets should be delivered to the sending host - Not yet supported Specify a copy of multicast IPv6 packets should be delivered to...","GUID-7A0113E3-4E70-4523-AEED-41E98ED0DD57.html@@@1.2.2.1.3.54 NET_PRES_SocketSignalHandlerDeregister Function@@@bool NET_PRES_SocketSignalHandlerDeregister(NET_PRES_SKT_HANDLE_T handle, NET_PRES_SIGNAL_HANDLE hSig); true - If the call succeeds false - If no such handler is registered This function calls the...","GUID-7A0CA4EE-1411-4673-BECD-AA70FB8533C7.html@@@1.2.1.11.1 File Transfer Protocol (FTP) Configurations@@@FTP Server Specific User Configurations Maximum Number of FTP Connections Allowed per Interface: Maximum number of FTP connections allowed Default value: 1 Symbol TCPIP_FTP_MAX_CONNECTIONS FTP Data...","GUID-7A28F2C9-46BA-43FA-B0E0-03988231D060.html@@@1.2.4.6.3.16 IPV6_HEADER_OFFSET_SOURCE_ADDR Macro@@@#define IPV6_HEADER_OFFSET_SOURCE_ADDR (0x08u) Header offset for source address...","GUID-7A2EBE9F-A271-4FB8-9B58-7FA5936D9261.html@@@1.2.5.8.4.43 DRV_ETHPHY_VendorDataSet Function@@@DRV_ETHPHY_RESULT DRV_ETHPHY_VendorDataSet(DRV_HANDLE handle, uint32_t vendorData); DRV_ETHPHY_RES_OK - if the vendor data is stored in the client object DRV_ETHPHY_RES_HANDLE_ERR - handle error This...","GUID-7A5B7065-BB5E-4978-ACAA-7AEA8AD0FCCC.html@@@1.2.1.2.3.5 _BERKELEYAPI_CONFIG_H_ Macro@@@#define _BERKELEYAPI_CONFIG_H_ This is macro _BERKELEYAPI_CONFIG_H_...","GUID-7A74A52A-A005-4691-BAB3-F67BA58BB3A3.html@@@1.2.5.8.4.10 DRV_ETHPHY_INDEX_0 Macro@@@#define DRV_ETHPHY_INDEX_0 0 #define DRV_ETHPHY_INDEX_1 1 Ethernet PHY Driver Module Index Numbers These constants provide the Ethernet PHY driver index definitions. These constants should be used in...","GUID-7AA9CA2C-DEB4-4E75-99AF-970A671252C7.html@@@1.2.5.7.3.3 DRV_ETHMAC_PIC32MACConfigGet Function@@@size_t DRV_ETHMAC_PIC32MACConfigGet(DRV_HANDLE hMac, void* configBuff, size_t buffSize, size_t* pConfigSize); number of bytes copied into the supplied storage buffer This function will get the current...","GUID-7ACBECE6-7FEC-42BA-9E8A-1DFD758509CA.html@@@1.2.1.19.3.56 TCPIP_SNMPV3_EngineUserDataBaseSet Function@@@bool TCPIP_SNMPV3_EngineUserDataBaseSet( TCPIP_SNMPV3_USERDATABASECONFIG_TYPE userDataBaseType, uint8_t len, uint8_t userIndex, void * val ); This function is used to set SNMPv3 Engine data base...","GUID-7B19DEA3-70DD-4DD6-8A58-89A6C62B494F.html@@@1.2.6.1.1.3.73 TCPIP_STACK_NetAddressMacSet Function@@@bool TCPIP_STACK_NetAddressMacSet( TCPIP_NET_HANDLE netH, const TCPIP_MAC_ADDR* pAddr ); This function sets the network interface physical MAC address. The TCPIP_STACK_Initialize() function must have...","GUID-7B44E380-9C45-4915-A88E-E9C9F93B8AAF.html@@@1.2.5.10.3.2 PPP_CTRL_PROTO Enumeration@@@typedef enum { PPP_CTRL_PROTO_NONE = 0, PPP_CTRL_PROTO_LCP, PPP_CTRL_PROTO_IPCP, }PPP_CTRL_PROTO; Members Description PPP_CTRL_PROTO_NONE invalid/unknown PPP_CTRL_PROTO_LCP LCP control protocol...","GUID-7B4519E8-35DC-42A1-AA46-A7C1B15DB5EC.html@@@1.2.5.2.35 TCPIP_MAC_ParametersGet Function@@@TCPIP_MAC_RES TCPIP_MAC_ParametersGet( DRV_HANDLE hMac, TCPIP_MAC_PARAMETERS* pMacParams ); This is a function that returns the run time parameters of the MAC driver. TCPIP_MAC_Initialize() should...","GUID-7BB52DE1-29D2-412C-8F77-80092B18A749.html@@@1.2.4.6.3.35 TCPIP_IPV6_ArrayGet Function@@@uint8_t TCPIP_IPV6_ArrayGet( TCPIP_MAC_PACKET* pRxPkt, uint8_t * val, uint16_t len ); Reads a characer of data from a packet. TCPIP_IPV6_Initialize() should be called. TCPIP_IPV6_InterfaceIsReady...","GUID-7BB60C88-A989-42FB-B9EA-B13EE070D98F.html@@@1.2.4.3.1 Abstraction Model@@@This module provides software abstraction of the IPv6 module existent in any TCP/IP Stack implementation. It provides error reporting and diagnostics to the TCP/IP stack. IPv6 Block Diagram NDP using...","GUID-7BC86480-5549-4770-8972-AF0F26B986FB.html@@@1.2.1.9.3.2 DDNS_POINTERS Structure@@@typedef struct { union { uint8_t * szRAM; const uint8_t * szROM; } CheckIPServer; uint16_t CheckIPPort; union { uint8_t * szRAM; const uint8_t * szROM; } UpdateServer; uint16_t UpdatePort; union {...","GUID-7BF1C11D-B1A1-4E29-A69A-085FC0721254.html@@@1.2.3.2.3.3 TCPIP_UDP_BcastIPV4AddressSet Function@@@bool TCPIP_UDP_BcastIPV4AddressSet(UDP_SOCKET hUDP, UDP_SOCKET_BCAST_TYPE bcastType, TCPIP_NET_HANDLE hNet); true - Indicates success false - Indicates failure: invalid socket invalid socket address...","GUID-7C11A229-085E-4497-941D-A47992479F3B.html@@@1.2.1.19.3.26 TCPIP_SNMP_IsValidCommunity Function@@@uint8_t TCPIP_SNMP_IsValidCommunity( uint8_t* community ); This function validates the community name for the MIB access to SNMP manager. The SNMP community name received in the request PDU is...","GUID-7C3A21A5-3499-4AE5-A6B0-63F9D83F2A17.html@@@1.2.6.1.1.3.79 TCPIP_STACK_NetConfigSet Function@@@TCPIP_NETWORK_CONFIG* TCPIP_STACK_NetConfigSet( void* configStoreBuff, void* netConfigBuff, size_t buffSize, size_t* pNeededSize ); This function restores data from a previous dump buffer and updates...","GUID-7C8119F3-BB7C-4628-84FD-28F840D4F76A.html@@@1.2.1.12.2.7 TCPIP_HTTP_ActiveConnectionCountGet Function@@@int TCPIP_HTTP_ActiveConnectionCountGet( int* pOpenCount ); This function will return the number of active and total HTTP connections at the current time. None. Parameters Description pOpenCount...","GUID-7C947C91-B278-4F7E-AA29-7B5C94C2D3DE.html@@@1.2.1.2.3.89 SOCKADDR_IN6 Type@@@typedef struct sockaddr_in6 SOCKADDR_IN6; This is type SOCKADDR_IN6...","GUID-7CCB132F-5845-4C15-AB31-EECB0F5A5723.html@@@1.2.1.23.3.7 TCPIP_TFTPS_Enable Function@@@bool TCPIP_TFTPS_Enable(TCPIP_NET_HANDLE hNet, IP_ADDRESS_TYPE ipType); true - if successful false - if unsuccessful, if server open fails for this interface. This function enables the TFTP server for...","GUID-7CD7785A-0273-4BB7-A83B-BA45E6B1D424.html@@@1.2.4.1.3.14 TCPIP_ARP_HandlerDeRegister Function@@@bool TCPIP_ARP_HandlerDeRegister( TCPIP_ARP_HANDLE hArp ); TDeregisters a previously registered ARP handler. The ARP module should have been initialized. Parameters Description hArp ARP handle...","GUID-7D0FDB86-3824-4834-A8A8-DDC8D48441DB.html@@@1.2.1.14 Iperf Module@@@Iperf is a networking tool that helps to measure networking bandwidth and performance...","GUID-7D4DC390-FD6F-4435-958B-4324BEC8A4A1.html@@@1.2.1.19.3.32 TCPIP_SNMP_NotifyPrepare Function@@@void TCPIP_SNMP_NotifyPrepare( IP_MULTI_ADDRESS* remoteHost, char* community, uint8_t communityLen, SNMP_ID agentIDVar, uint8_t notificationCode, uint32_t timestamp ); This function prepares SNMP...","GUID-7D6B1A4A-09BC-4B80-B426-B0614F5AF051.html@@@1.2.1.12.2.34 TCPIP_HTTP_CurrentConnectionUploadBufferStartSet Function@@@void TCPIP_HTTP_CurrentConnectionUploadBufferStartSet( HTTP_CONN_HANDLE connHandle, uint8_t* uploadBufferStart ); This function will set the start address of current connection upload buffer. None...","GUID-7D83AD1B-8FF4-4B5E-80B9-7BA87E050A10.html@@@1.2.1.10.3.34 TCPIP_FTPC_SetActiveMode Function@@@TCPIP_FTPC_RETURN_TYPE TCPIP_FTPC_SetActiveMode(TCPIP_FTPC_CONN_HANDLE_TYPE ftpcHandle, TCPIP_FTPC_DATA_CONN_TYPE * pftpcDataConn); TCPIP_FTPC_RET_OK - if successfully scheduled function...","GUID-7DA6C173-4517-4C9C-AB16-876BEE857AF8.html@@@1.2.1.17.2.11 TCPIP_SMTP_UsageEnd Function@@@uint16_t TCPIP_SMTP_UsageEnd(); Call this function to release control of the SMTP client module once an application is finished using it. This function releases the lock obtained by...","GUID-7DA9A0EF-BA77-4B60-A11F-B908DEAD1BE7.html@@@1.2.1.23.3.5 TCPIP_TFTPS_DEFAULT_TIMEOUT Macro@@@#define TCPIP_TFTPS_DEFAULT_TIMEOUT (10) This time is used during the TFTP retransmission and TFTP Client wait for these many seconds before retransmitting...","GUID-7DED7722-91B4-436A-82BB-E741D1BFDD88.html@@@1.2.5.9.3.5 DRV_MIIM_Close Function@@@void DRV_MIIM_Close(DRV_HANDLE handle); None This function closes an opened instance of the MIIM driver, invalidating the handle. After calling this routine, the handle passed in &quot;handle&quot; must not be...","GUID-7E1845C5-6129-448A-B724-95B5568EAE8E.html@@@1.2.4.5.3.2 IPV4_HEADER_TYPE Enumeration@@@typedef enum { IP_PROT_ICMP = (1u), IP_PROT_IGMP = (2u), IP_PROT_TCP = (6u), IP_PROT_UDP = (17u) } IPV4_HEADER_TYPE; IPv4 supported protocols. This is the list of the protocols that are supported by...","GUID-7E47881C-C806-4CAC-89B0-99E15F8FD5DE.html@@@1.2.4.5.3.29 TCPIP_IPV4_Task Function@@@void TCPIP_IPV4_Task(); This function performs IPv4 module tasks in the TCP/IP stack. The IPv4 module should have been initialized. None. None...","GUID-7E7ACF17-49E1-4FC5-A860-4268A671D578.html@@@1.2.2 Presentation Layer@@@Presentation Layer translates the network packets between Application Layer and Network. One of the main responsibility of this layer is to provide encryption support for the packet received and...","GUID-7EB1F067-2E76-4420-9D55-B8B11B339534.html@@@1.2.1.2.3.78 SO_REUSEADDR Macro@@@#define SO_REUSEADDR 2 //Indicates if the local socket can be reused immediately after close - Not yet supported Indicates if the local socket can be reused immediately after close. Not yet...","GUID-7EF0555E-936C-48E3-92FA-BA52D2EAD359.html@@@1.2.1.12.2.21 TCPIP_HTTP_CurrentConnectionIsAuthorizedGet Function@@@uint8_t TCPIP_HTTP_CurrentConnectionIsAuthorizedGet( HTTP_CONN_HANDLE connHandle ); This function returns the authorization status for the current HTTP connection. This is one of the values returned...","GUID-7F43936A-7FCB-4575-9709-C92EFB582D83.html@@@1.2.1.19.3.62 TCPIP_SNMPV3_USM_USER_CONFIG Structure@@@typedef struct { const char * username; STD_BASED_SNMPV3_SECURITY_LEVEL security_level; SNMPV3_HMAC_HASH_TYPE usm_auth_proto; const char * usm_auth_password; SNMPV3_PRIV_PROT_TYPE usm_priv_proto...","GUID-7F49124A-639B-485B-8548-282953AF9BDB.html@@@1.2.1.21.3.6 TCPIP_TELNET_ConnectionsGet Function@@@uint16_t TCPIP_TELNET_ConnectionsGet(); This function gets the number of the telnet connections. The Telnet module should have been initialized. Number of telnet connections: the initialization...","GUID-7F4F9FCA-E3C2-47FF-BC0C-8174C68FCDE1.html@@@1.2.1.5.3.4 TCPIP_DHCPS_Configure Function@@@TCPIP_DHCPS_RES TCPIP_DHCPS_Configure(const TCPIP_DHCPS_INTERFACE_CONFIG* pIfConfig, uint16_t nConfigs); Configure the DHCP server on multiple interfaces This function is used to configure the DHCP...","GUID-7F9010E2-A1A6-4DCA-AEA8-6DF09A3372E2.html@@@1.2.5.4.3.16 DRV_ENCX24J600_ParametersGet Function@@@TCPIP_MAC_RES DRV_ENCX24J600_ParametersGet(DRV_HANDLE hMac, TCPIP_MAC_PARAMETERS* pMacParams); TCPIP_MAC_RES_TYPE_ERR - if the hMac is invalid TCPIP_MAC_RES_OK - if the hMac is valid ENCX24J600 Get...","GUID-7FCCF0BB-53A5-4D31-A8F2-D77B6181EBBB.html@@@1.2.1.19.3.34 TCPIP_SNMP_ReadCommunitySet Function@@@bool TCPIP_SNMP_ReadCommunitySet( int index, int len, uint8_t * src ); This function is used to configure READ community string from the user and configure the SNMP community table...","GUID-7FD0C77D-7855-4FC0-A2CA-96ADBBC79CCD.html@@@1.2.6.1.1.3.49 TCPIP_STACK_HEAP_INTERNAL_CONFIG Structure@@@typedef struct { TCPIP_STACK_HEAP_TYPE heapType; TCPIP_STACK_HEAP_FLAGS heapFlags; TCPIP_STACK_HEAP_USAGE heapUsage; void* (* malloc_fnc)(size_t bytes); void* (* calloc_fnc)(size_t nElems, size_t...","GUID-7FD47E3C-3456-4CFE-8D66-8B7730C8E061.html@@@1.2.5.4.3.10 DRV_ENCX24J600_INSTANCES_NUMBER Macro@@@#define DRV_ENCX24J600_INSTANCES_NUMBER 1 ENCX24J600 hardware instance configuration This definition selects the maximum number of hardware instances that can be supported by the dynamic driver...","GUID-800C9F7A-8BC9-4380-A34D-B55104C248E4.html@@@1.2.1.6.3.8 TCPIP_DHCPV6_HandlerDeRegister Function@@@bool TCPIP_DHCPV6_HandlerDeRegister( TCPIP_DHCPV6_HANDLE hDhcp ); DHCPv6 event deregistration...","GUID-80321EE0-61E2-4F02-821D-94DDC2A01004.html@@@1.2.1.13 HTTP Net Module@@@The HTTP Net Web Server module allows a development board to act as a Web server. This facilitates an easy method to view status information and control applications using any standard Web browser. It...","GUID-8038944F-7C27-43D4-804D-1EDFE1B38AD5.html@@@1.2.1.3.3.16 TCPIP_DHCP_MODULE_CONFIG Structure@@@typedef struct { bool dhcpEnable; int dhcpTmo; int dhcpCliPort; int dhcpSrvPort; } TCPIP_DHCP_MODULE_CONFIG; DHCP Module Configuration. This structure contains the data that&apos;s passed to the DHCP...","GUID-805F2DE9-7E0B-4B05-89A4-AEB96FDC36E6.html@@@1.2.5.5.3.9 DRV_GMAC_LinkCheck Function@@@bool DRV_GMAC_LinkCheck(DRV_HANDLE hMac); true - If the link is up false - If the link is not up This function checks the link status of the associated network interface. The function will...","GUID-807A339D-F8C1-4528-9EDB-4F5A1908D99F.html@@@1.2.1.2.3.74 SO_OOBINLINE Macro@@@#define SO_OOBINLINE 10 //Indicates whether or not Out of Band Data should be received inline with normal data - Not yet supported Indicates whether or not Out of Band data should be received inline...","GUID-80B1258C-5639-4C20-81D1-6B253609CA21.html@@@1.2.1.19.3.49 TCPIP_SNMP_TRAPv2Notify Function@@@bool TCPIP_SNMP_TRAPv2Notify( SNMP_ID var, SNMP_VAL val, SNMP_INDEX index, SNMP_TRAP_IP_ADDRESS_TYPE eTrapMultiAddressType ); This function creates SNMP V2 Trap PDU and sends it to previously...","GUID-80F5FFAB-C6FD-41C2-AC19-85BDD5D274E4.html@@@1.2.5.2.29 TCPIP_MAC_PACKET_FLAGS Enumeration@@@typedef enum { TCPIP_MAC_PKT_FLAG_STATIC = 0x0001, TCPIP_MAC_PKT_FLAG_TX = 0x0002, TCPIP_MAC_PKT_FLAG_SPLIT = 0x0004, TCPIP_MAC_PKT_FLAG_QUEUED = 0x0008, TCPIP_MAC_PKT_FLAG_UNICAST = 0x0010...","GUID-812A0F7C-4093-4A57-B2BC-7873BB454B83.html@@@1.2.5.10.3.12 PPP_ECHO_CALLBACK Function@@@typedef void (*PPP_ECHO_CALLBACK)(const struct _tag_PPPP_ECHO_REQUEST* pEchoReq, PPP_REQUEST_HANDLE pppHandle, PPP_ECHO_RESULT result, const void* param); This callback function will be called when...","GUID-81316D75-5D0A-49B2-8266-2DF84A520AC1.html@@@1.2.1.2.3.67 sendto Function@@@int sendto( SOCKET s, const char* buf, int len, int flags, const struct sockaddr* to, int tolen ); This function is used to send outgoing data on a socket. The destination address is given by to and...","GUID-81628E5E-DA0C-4D2A-801B-319CC0432EDD.html@@@1.2.1.13.3.8 TCPIP_HTTP_NET_ArgGet Function@@@const uint8_t* TCPIP_HTTP_NET_ArgGet( const uint8_t* cData, const uint8_t* cArg ); This function searches through a data array to find the value associated with a given argument. It can be used to...","GUID-819F34A6-7D1C-4A8B-9FEC-936F5C2E2951.html@@@1.2.5.4.3.14 DRV_ENCX24J600_PacketRx Function@@@TCPIP_MAC_PACKET* DRV_ENCX24J600_PacketRx(DRV_HANDLE hMac, TCPIP_MAC_RES* pRes, const TCPIP_MAC_PACKET_RX_STAT** ppPktStat); Pointer to a valid packet - if successful NULL - if unsuccessful ENCX24J600...","GUID-81ADA0CF-346C-463C-9D5A-D721C3A7E2AA.html@@@1.2.2.1.3.70 NET_PRES_TransOpen Type@@@typedef NET_PRES_SKT_HANDLE_T (* NET_PRES_TransOpen)(NET_PRES_TRANS_ADDRESS_TYPE addType, NET_PRES_SKT_PORT_T port, NET_PRES_ADDRESS * address); NET_PRES_INVALID_SOCKET - No sockets of the specified...","GUID-81B09C27-C145-4FB9-9025-F5986566841D.html@@@1.2.6.1.1.3.77 TCPIP_STACK_NetBiosNameSet Function@@@bool TCPIP_STACK_NetBiosNameSet( TCPIP_NET_HANDLE netH, const char* biosName ); This function sets the network interface NetBIOS name. The TCP/IP stack should have been initialized by...","GUID-81D408B7-8548-4EC8-A955-C5B136C1D921.html@@@1.2.6.1.1.3.74 TCPIP_STACK_NetAddressSet Function@@@bool TCPIP_STACK_NetAddressSet( TCPIP_NET_HANDLE netH, IPV4_ADDR* ipAddress, IPV4_ADDR* mask, bool setDefault ); This function sets the associated network IP address and/or mask. If you&apos;re chaning the...","GUID-81FAF9B7-AD7E-4768-B973-A45BD959EF44.html@@@1.2.3.2.3.30 TCPIP_UDP_ServerOpen Function@@@UDP_SOCKET TCPIP_UDP_ServerOpen(IP_ADDRESS_TYPE addType, UDP_PORT localPort, IP_MULTI_ADDRESS* localAddress); INVALID_SOCKET - No sockets of the specified type were available to be opened or parameter...","GUID-8220824F-9A66-4AC1-9AFC-ED4D12C1B54C.html@@@1.2.5.2.46 TCPIP_MAC_Reinitialize Function@@@void TCPIP_MAC_Reinitialize( SYS_MODULE_OBJ object, const SYS_MODULE_INIT * const init ); MAC Re-Initialize function. void TCPIP_MAC_Reinitialize(SYS_MODULE_OBJ object, const SYS_MODULE_INIT * const...","GUID-82356347-DE35-4FC5-93A2-98DC156891F0.html@@@1.2.6.1.1.3.99 TCPIP_STACK_PACKET_HANDLER Type@@@typedef bool (* TCPIP_STACK_PACKET_HANDLER)(TCPIP_NET_HANDLE hNet, struct _tag_TCPIP_MAC_PACKET* rxPkt, uint16_t frameType, const void* hParam); TCPIP packet handler pointer. Pointer to a function...","GUID-82812F3E-3749-45EF-90A7-A32BE900B638.html@@@1.2.4.6.3.40 TCPIP_IPV6_DestAddressGet Function@@@IPV6_ADDR * TCPIP_IPV6_DestAddressGet( IPV6_PACKET * p ); This function is used to get the destination address for a IPv6 packet. TCPIP_IPV6_Initialize() should be called. TCPIP_IPV6_InterfaceIsReady...","GUID-82848107-4CE4-436A-9B50-75B5767E03FD.html@@@1.2.5.2.8 TCPIP_MAC_EVENT Enumeration@@@typedef enum { TCPIP_MAC_EV_NONE = 0x0000, TCPIP_MAC_EV_RX_PKTPEND = 0x0001, TCPIP_MAC_EV_RX_OVFLOW = 0x0002, TCPIP_MAC_EV_RX_BUFNA = 0x0004, TCPIP_MAC_EV_RX_ACT = 0x0008, TCPIP_MAC_EV_RX_DONE =...","GUID-832A1C71-21E8-4386-BFCE-18B19538AC01.html@@@1.2.1.20.3 Library Interface@@@Name Description Macros TCPIP_NTP_DEFAULT_CONNECTION_TYPE The default connection type to use: IPv4/IPv6 TCPIP_NTP_DEFAULT_IF for multi-homed hosts, the default SNTP interface TCPIP_NTP_EPOCH Reference...","GUID-833EE614-43F8-4723-A982-10F407BCF36D.html@@@1.2.4.6.3.34 TCPIP_IPV6_AddressUnicastRemove Function@@@void TCPIP_IPV6_AddressUnicastRemove( TCPIP_NET_HANDLE netH, const IPV6_ADDR * address ); This function is used to remove a configured unicast address from an interface. TCPIP_IPV6_Initialize() should...","GUID-83A3E9E6-DF80-4868-9CE4-AA5C67BD90F0.html@@@1.2.3.1.3.49 TCPIP_TCP_SocketInfoGet Function@@@bool TCPIP_TCP_SocketInfoGet( TCP_SOCKET hTCP, TCP_SOCKET_INFO* pInfo ); Fills the provided TCP_SOCKET_INFO structure associated with this socket. This contains the IP addresses and port numbers for...","GUID-83A70C26-967F-4957-B625-A7ED570FCD7A.html@@@1.2.1.10.3.27 TCPIP_FTPC_MakeDir Function@@@TCPIP_FTPC_RETURN_TYPE TCPIP_FTPC_MakeDir(TCPIP_FTPC_CONN_HANDLE_TYPE ftpcHandle, const char * dirname); TCPIP_FTPC_RET_OK - if successfully scheduled function TCPIP_FTPC_RET_BUSY - could not schedule...","GUID-83ADCBF6-480E-4531-B0EE-9B20CCA80F24.html@@@1.2.5.2.19 TCPIP_MAC_HEAP_MallocF Type@@@typedef void* (* TCPIP_MAC_HEAP_MallocF)(TCPIP_MAC_HEAP_HANDLE heapH, size_t nBytes); Memory Allocation Function: typedef void* (*TCPIP_MAC_HEAP_MallocF)(TCPIP_MAC_HEAP_HANDLE heapH, size_t nBytes)...","GUID-843614BE-24D5-42C0-9C00-A2BB0737CA5E.html@@@1.2.4.1 ARP Module@@@The Address Resolution Protocol, or ARP, is a foundation layer_of TCP/IP. It translates IP addresses to physical MAC addresses TCP and UDP applications will not need to access ARP directly. The IPv4...","GUID-843764D1-5960-4D99-9D2D-ABFB2785D009.html@@@1.2.3.2.3.43 TCPIP_UDP_SocketNetSet Function@@@bool TCPIP_UDP_SocketNetSet(UDP_SOCKET hUDP, TCPIP_NET_HANDLE hNet); true - Indicates success false - Indicates failure This function sets the network interface for an UDP socket A NULL hNet can be...","GUID-84618292-5B46-4F48-A09E-06D3AC6B32C6.html@@@1.2.5.7.3.2 DRV_ETHMAC_INDEX_COUNT Macro@@@#define DRV_ETHMAC_INDEX_COUNT ETH_NUMBER_OF_MODULES Ethernet Driver Module Index Count This constant identifies number of valid Ethernet driver indices. This constant should be used in place of...","GUID-84AD5E92-CF3A-47A9-B081-BF6BC7122F56.html@@@1.2.4.6.3.17 IPV6_NEXT_HEADER_TYPE Enumeration@@@typedef enum { IPV6_PROT_HOP_BY_HOP_OPTIONS_HEADER = (0u), IPV6_PROT_ICMP = (1u), IPV6_PROT_TCP = (6u), IPV6_PROT_UDP = (17u), IPV6_PROT_IPV6 = (41u), IPV6_PROT_ROUTING_HEADER = (43u)...","GUID-84F85A64-1E7B-45A1-BB68-F35B5FD4E974.html@@@1.2.4.3.3.5 TCPIP_ICMPV6_HeaderEchoRequestPut Function@@@IPV6_PACKET * TCPIP_ICMPV6_HeaderEchoRequestPut(TCPIP_NET_HANDLE hNetIf, const IPV6_ADDR * localIP, const IPV6_ADDR * remoteIP, uint8_t type, uint16_t identifier, uint16_t sequenceNumber); IPV6_PACKET...","GUID-8514B06D-F1ED-472C-B8E5-E09980DDCA00.html@@@1.2.3.2.3.10 TCPIP_UDP_Discard Function@@@uint16_t TCPIP_UDP_Discard(UDP_SOCKET hUDP); Number of discarded bytes, if any. This function discards any remaining received data in the UDP socket. The UDP socket queues incoming RX packets in an...","GUID-855F6FEA-7CD6-4760-8C90-58D7F7963A9E.html@@@1.2.3.2.3.17 TCPIP_UDP_IsOpened Macro@@@#define TCPIP_UDP_IsOpened(hUDP) TCPIP_UDP_IsConnected(hUDP) This function determines if a socket was opened. This is a backward compatibility call. None. Parameters Description Description hUDP The...","GUID-85823332-73F9-4E54-97E9-B92708A8048D.html@@@1.2.1.3.3.17 TCPIP_DHCP_Renew Function@@@bool TCPIP_DHCP_Renew( TCPIP_NET_HANDLE hNet ); This function attempts to contact the server and renew the DHCP lease for the specified interface. The interface should have the DHCP enabled and in...","GUID-8590FF01-5952-4FE4-8FF8-421ABC15BF1D.html@@@1.2.1.15 NBNS Module@@@The NetBIOS Name Service protocol associates host names with IP addresses, similarly to DNS, but on the same IP subnet. Practically, this allows the assignment of human-name host names to access...","GUID-85B5B225-55A6-4F12-9278-A77CB7B62498.html@@@1.2.5.4.3.9 DRV_ENCX24J600_Initialize Function@@@SYS_MODULE_OBJ DRV_ENCX24J600_Initialize(SYS_MODULE_INDEX index, SYS_MODULE_INIT * init); Valid handle to the driver instance - If successful SYS_MODULE_OBJ_INVALID - If unsuccessful ENCX24J600...","GUID-85B9925E-AA71-4A5E-9275-CC6267C8DBBA.html@@@1.2.1.6.3.14 TCPIP_DHCPV6_IA_TYPE Enumeration@@@typedef enum { TCPIP_DHCPV6_IA_TYPE_NONE, TCPIP_DHCPV6_IA_TYPE_IANA, TCPIP_DHCPV6_IA_TYPE_IATA, TCPIP_DHCPV6_IA_TYPE_NUMBER } TCPIP_DHCPV6_IA_TYPE; Supported types of IA. Members Description...","GUID-85F57BC3-AB6F-4F15-AFE1-99791B84C799.html@@@1.2.2.1.3.11 NET_PRES_EncProviderObject Structure@@@typedef struct _NET_PRES_EncProviderObject { NET_PRES_EncProviderInit fpInit; NET_PRES_EncProviderDeinit fpDeinit; NET_PRES_EncProviderOpen fpOpen; NET_PRES_EncProviderConnect fpConnect...","GUID-866D9DFC-BDA7-45F9-9EC6-C9A0F7FC5002.html@@@1.2.5.8.1 Abstraction Model@@@To understand how this library works you must first understand how an external Ethernet PHY interfaces with the Ethernet Controller. As shown in Figure 1, the PHY has two interfaces: The management...","GUID-867EDFFC-8900-463A-8E2C-F342C9DFFC67.html@@@1.2.2.1.3.45 NET_PRES_SocketIsSecure Function@@@bool NET_PRES_SocketIsSecure(NET_PRES_SKT_HANDLE_T handle); true - If the communications is secure false - If the communications is not secure This function returns whether or not the connection is...","GUID-869379C7-2E76-4AF2-B4E9-B268AB55F7FC.html@@@1.2.1.13.3.23 TCPIP_HTTP_NET_ConnectionHasArgsSet Function@@@void TCPIP_HTTP_NET_ConnectionHasArgsSet( TCPIP_HTTP_NET_CONN_HANDLE connHandle, uint8_t args ); This function sets the value of the &quot;cookies or get arguments&quot; that are present. None. Parameters...","GUID-869E8FAE-90E5-4359-BF3E-75605CA82E73.html@@@1.2.6.1.1.3.51 TCPIP_STACK_HEAP_MaxSize Function@@@size_t TCPIP_STACK_HEAP_MaxSize( TCPIP_STACK_HEAP_HANDLE heapH ); This function returns the maximum size of a block that can be currently allocated from this heap. heapH - valid heap handle...","GUID-86C5EC0B-8A2C-453C-8D10-AE1E66E1DF51.html@@@1.2.2.1.3.52 NET_PRES_SocketReadIsReady Function@@@uint16_t NET_PRES_SocketReadIsReady(NET_PRES_SKT_HANDLE_T handle); The number of bytes available to be read from the TCP RX buffer. Call this function to determine how many bytes can be read from the...","GUID-86CC02C8-D745-4FA0-997C-B159841754D1.html@@@1.2.1.9.3.1 DDNS_MODULE_CONFIG Structure@@@typedef struct { void* reserved; } DDNS_MODULE_CONFIG; This is type DDNS_MODULE_CONFIG...","GUID-871731A7-9639-4367-AB6F-84BBE9AE1C11.html@@@1.2.1.2.3.53 IPV6_JOIN_GROUP Macro@@@#define IPV6_JOIN_GROUP 20 //Join an IPv6 multicast group - Not yet supported Join an IPv6 multicast group. Not yet supported...","GUID-874C7954-A5BC-4903-B98F-483E313A2ADC.html@@@1.2.5.7.3.6 DRV_ETHMAC_PIC32MACEventMaskSet Function@@@bool DRV_ETHMAC_PIC32MACEventMaskSet(DRV_HANDLE hMac, TCPIP_MAC_EVENT macEvents, bool enable); always true, operation succeeded. This is a function that enables or disables the events to be reported...","GUID-874E3954-A0C6-42AD-BF95-19EBFDE1A9EB.html@@@1.2.1.2.3.71 SO_DONTROUTE Macro@@@#define SO_DONTROUTE 5 //Bypass normal routing - Not yet supported Bypass normal routing. Not yet supported...","GUID-875DA8B3-C880-487A-AB02-50702C77560B.html@@@1.2.1.2.3.59 IPV6_V6ONLY Macro@@@#define IPV6_V6ONLY 26 //Sets the socket to IPv6 only - Not yet supported Sets the socket to IPv6 only. Not yet supported...","GUID-87849350-1F04-4175-887F-0EB875774E92.html@@@1.2.4.4.3.12 TCPIP_IGMP_Join Function@@@TCPIP_IGMP_RESULT TCPIP_IGMP_Join( UDP_SOCKET socket, TCPIP_NET_HANDLE hNet, IPV4_ADDR mcastAddress ); This function performs the IGMPv2 style &quot;join&quot; operation for a UDP socket to a multicast group...","GUID-87954F50-A1D5-4E59-810C-09DC91AB81FA.html@@@1.2.3.2.3.38 TCPIP_UDP_SOCKET_DEFAULT_TX_SIZE Macro@@@#define TCPIP_UDP_SOCKET_DEFAULT_TX_SIZE 512 Default socket TX buffer size. Note that this setting affects all UDP sockets that are created and, together with TCPIP_UDP_MAX_SOCKETS, has a great impact...","GUID-8809CAF2-BA3B-4D2C-8EDE-CD19481195A8.html@@@1.2.5.2.57 TCPIP_MAC_Tasks Function@@@void TCPIP_MAC_Tasks( SYS_MODULE_OBJ object ); This function is used to maintain the driver&apos;s internal state machine. The TCPIP_MAC_Initialize() routine must have been called for the specified MAC...","GUID-88538B1E-780C-4DF4-96DD-1C2C3E4D92E3.html@@@1.2.1.2.3.98 TCPIP_BSD_PresSocket Function@@@int TCPIP_BSD_PresSocket( SOCKET s ); The function returns the NET_PRES socket number associated with the BSD socket. Using this call, the caller can access the NET_PRES API. The socket() function...","GUID-890B63B7-0798-40C8-90F2-75C029CC66FC.html@@@1.2.1.24.3.1 MDNSD_ERR_CODE Enumeration@@@typedef enum { MDNSD_SUCCESS = 0, MDNSD_ERR_BUSY = 1, MDNSD_ERR_CONFLICT = 2, MDNSD_ERR_INVAL = 3 } MDNSD_ERR_CODE; void DisplayHostName(uint8_t *HostName); Members Description MDNSD_ERR_BUSY = 1...","GUID-891D7233-73AB-4DBB-AFC9-428A7531FAA9.html@@@1.2.5.2.45 TCPIP_MAC_RegisterStatisticsGet Function@@@TCPIP_MAC_RES TCPIP_MAC_RegisterStatisticsGet( DRV_HANDLE hMac, TCPIP_MAC_STATISTICS_REG_ENTRY* pRegEntries, int nEntries, int* pHwEntries ); This function will get the current value of the statistic...","GUID-89D86BB6-4035-47CA-BEE8-9509684519BE.html@@@1.2.5.4.3.1 DRV_ENCX24J600_CLIENT_INSTANCES_IDXx Macro@@@#define DRV_ENCX24J600_CLIENT_INSTANCES_IDXx 1 ENCX24J600 maximum number of clients For example, DRV_ENC28J60_CLIENT_INSTANCES_IDX0 selects the maximum number of clients the ENCX24J600 driver can...","GUID-8A290E9F-B10B-40B2-B6C8-8953545D58B3.html@@@1.2.5.7.3.20 DRV_ETHMAC_PIC32MACStatus Function@@@SYS_STATUS DRV_ETHMAC_PIC32MACStatus(SYS_MODULE_OBJ object); SYS_STATUS_READY - Indicates that any previous module operation for the specified module has completed SYS_STATUS_BUSY - Indicates that a...","GUID-8A346581-6B4A-4831-9E5E-4E33235E3036.html@@@1.2.6.1.1.3.96 TCPIP_STACK_NetNameGet Function@@@const char* TCPIP_STACK_NetNameGet( TCPIP_NET_HANDLE netH ); This function returns the name associated with the interface handle. The TCP/IP stack should have been initialized by...","GUID-8A4DFE95-9E3A-4D86-987D-12660E0B2C21.html@@@1.2.1.2.3.70 SO_DEBUG Macro@@@#define SO_DEBUG 1 //Indicates if low level debut is active - Not yet supported Indicates if low level debut is active. Not yet supported...","GUID-8A824AA3-4E4C-4C37-9500-79FC5B8D6BF4.html@@@1.2.6.1.1.3.53 TCPIP_STACK_HEAP_POOL_ENTRY Structure@@@typedef struct { uint16_t entrySize; uint16_t nBlocks; uint8_t nExpBlks; } TCPIP_STACK_HEAP_POOL_ENTRY; Internal pool configuration data. This data type defines the data required to initialize the...","GUID-8AACCF8D-A5AF-4355-AB80-0A5347C1F0D6.html@@@1.2.1.22.3.10 TCPIP_TFTPC_OPERATION_RESULT Enumeration@@@typedef enum { TFTPC_ERROR_NONE = 0, TFTPC_ERROR_FILE_NOT_FOUND = -1, TFTPC_ERROR_BUSY = -2, TFTPC_ERROR_DISK_FULL = -3, TFTPC_ERROR_INVALID_OPERATION = -4, TFTPC_ERROR_UNKNOWN_TID = -5...","GUID-8AD4DFAC-9028-49B6-9883-93643F40DB7D.html@@@1.2.5.10.3.10 PPP_ECHO_REQUEST Structure@@@typedef struct _tag_PPPP_ECHO_REQUEST { uint8_t* pData; uint16_t dataSize; uint16_t seqNumber; PPP_ECHO_CALLBACK callback; const void* param; } PPP_ECHO_REQUEST; Members Description uint8_t* pData...","GUID-8AE11F4C-45C5-4D5D-91FA-DC93DCFAAF74.html@@@1.2.1.24.3.3 TCPIP_MDNS_ServiceRegister Function@@@MDNSD_ERR_CODE TCPIP_MDNS_ServiceRegister( TCPIP_NET_HANDLE netH, const char * srv_name, const char * srv_type, uint16_t port, const uint8_t * txt_record, uint8_t auto_rename, void (*call_back)(char...","GUID-8B634363-68E2-4559-9F67-5D64A992DFC3.html@@@1.2.5.6.3.12 MAC_DRVR_Status Function@@@SYS_STATUS MAC_DRVR_Status( SYS_MODULE_OBJ object ); SYS_STATUS_READY - Indicates that any previous module operation for the specified module has completed SYS_STATUS_BUSY - Indicates that a previous...","GUID-8B6901B5-C673-41CC-9B6B-A1BC1930957A.html@@@1.2.1.19.3.6 SNMP_INDEX_INVALID Macro@@@#define SNMP_INDEX_INVALID (0xff) This Macro is used for both SNMP SET and GET Sequence Variable processing. SNMP starts processing the start of sequence variable with Invalid index...","GUID-8BAAE306-6142-458A-97BB-BFE70A468F22.html@@@1.2.3.1.3.35 TCPIP_TCP_PACKET_HANDLER Type@@@typedef bool (* TCPIP_TCP_PACKET_HANDLER)(TCPIP_NET_HANDLE hNet, struct _tag_TCPIP_MAC_PACKET* rxPkt, const void* hParam); TCP packet handler Pointer Pointer to a function that will be called by the...","GUID-8BC5DC71-49AA-44D5-A610-C9DAF9BDEA90.html@@@1.2.5.8.4.3 DRV_ETHPHY_ClientOperationResult Function@@@DRV_ETHPHY_RESULT DRV_ETHPHY_ClientOperationResult(DRV_HANDLE handle); DRV_ETHPHY_RESULT value describing the current operation result: DRV_ETHPHY_RES_OK for success; operation has been completed...","GUID-8BD37D32-19CF-4C4E-BE10-07CDCDAF294B.html@@@1.2.1.2.3.32 hostent Structure@@@struct hostent { char * h_name; char ** h_alias; int h_addrtype; int h_length; char ** h_addr_list; }; This is record hostenet Members Description h_name Points to a string containing the name of the...","GUID-8C16F14A-E7F7-4847-8379-4C16511FDF66.html@@@1.2.3.2.3.45 TCPIP_UDP_SourceIPAddressSet Function@@@bool TCPIP_UDP_SourceIPAddressSet(UDP_SOCKET hUDP, IP_ADDRESS_TYPE addType, IP_MULTI_ADDRESS* localAddress); true - Indicates success false - Indicates failure: invalid socket invalid socket address...","GUID-8C5BDD05-DD86-40A9-B4D0-8DF92452F7C7.html@@@1.2.5.5.3.13 DRV_GMAC_ParametersGet Function@@@TCPIP_MAC_RES DRV_GMAC_ParametersGet(DRV_HANDLE hMac, TCPIP_MAC_PARAMETERS* pMacParams); TCPIP_MAC_RES_OK if pMacParams updated properly a TCPIP_MAC_RES error code if processing failed for some reason...","GUID-8C6170E5-0E7A-49D1-959C-07B748E4F398.html@@@1.2.5.2.36 TCPIP_MAC_PKT_ACK_RES Enumeration@@@typedef enum { TCPIP_MAC_PKT_ACK_NONE = 0, TCPIP_MAC_PKT_ACK_TX_OK = 1, TCPIP_MAC_PKT_ACK_RX_OK = 2, TCPIP_MAC_PKT_ACK_LINK_DOWN = -1, TCPIP_MAC_PKT_ACK_NET_DOWN = -2, TCPIP_MAC_PKT_ACK_BUFFER_ERR =...","GUID-8C8739A7-EB00-469C-AFED-6DB457E65D96.html@@@1.2.2.1.3.33 NET_PRES_SocketBind Function@@@bool NET_PRES_SocketBind(NET_PRES_SKT_HANDLE_T handle, NET_PRES_SKT_ADDR_T addrType, NET_PRES_SKT_PORT_T port, NET_PRES_ADDRESS * addr); true - Indicates success false - Indicates failure This...","GUID-8C9E82DC-7C04-4972-8DBD-089F22E171B0.html@@@1.2.1.7.3.24 TCPIP_DNS_EVENT_TYPE Enumeration@@@typedef enum { TCPIP_DNS_EVENT_NONE, TCPIP_DNS_EVENT_NAME_QUERY, TCPIP_DNS_EVENT_NAME_RESOLVED, TCPIP_DNS_EVENT_NAME_EXPIRED, TCPIP_DNS_EVENT_NAME_REMOVED, TCPIP_DNS_EVENT_NAME_ERROR...","GUID-8CC6912D-FBFC-4CC0-8562-9B9D199A55AD.html@@@1.2.5.2.5 TCPIP_MAC_ConfigGet Function@@@size_t TCPIP_MAC_ConfigGet( DRV_HANDLE hMac, void* configBuff, size_t buffSize, size_t* pConfigSize ); This function will get the current MAC driver configuration and store it into a supplied buffer...","GUID-8CD0D600-1361-4BD3-AAFB-D03F3538831E.html@@@1.2.1.8.1 Abstraction Model@@@DNSS is part of the Application Layer, as illustrated in the following figure DNSS resolution operations follow a simple state machine, as indicated in the following diagram...","GUID-8D01FBAB-A5FA-4897-80E7-90310958BE9C.html@@@1.2.3.2.3.15 TCPIP_UDP_GetIsReady Function@@@uint16_t TCPIP_UDP_GetIsReady(UDP_SOCKET hUDP); The number of bytes that can be read from this socket. This function will return the number of bytes that are available in the specified UDP socket RX...","GUID-8D07D2FD-CA2E-4201-B376-AF770DA9A7EA.html@@@1.2.3.1.3.54 TCPIP_TCP_STATE Enumeration@@@typedef enum { TCPIP_TCP_STATE_LISTEN, TCPIP_TCP_STATE_SYN_SENT, TCPIP_TCP_STATE_SYN_RECEIVED, TCPIP_TCP_STATE_ESTABLISHED, TCPIP_TCP_STATE_FIN_WAIT_1, TCPIP_TCP_STATE_FIN_WAIT_2...","GUID-8D0E3797-6098-4DFD-9992-850020D09858.html@@@1.2.4.2.3.2 ICMP_ECHO_RESULT Enumeration@@@typedef enum { ICMP_ECHO_OK = 0, ICMP_ECHO_ALLOC_ERROR = -1, ICMP_ECHO_ROUTE_ERROR = -2, ICMP_ECHO_TRANSMIT_ERROR = -3, ICMP_ECHO_PARAMETER_ERROR = -4, ICMP_ECHO_BUSY = -5, ICMP_ECHO_BAD_HANDLE = -6 }...","GUID-8D2B3D6A-F703-4EC4-A8E2-005C667F0FBC.html@@@1.2.5.6.3.14 MAC_DRVR_LinkCheck Function@@@bool MAC_DRVR_LinkCheck( DRV_HANDLE hMac ); true - If the link is up false - If the link is not up This function checks the link status of the associated network interface. The function will...","GUID-8D40C273-579B-431C-8350-F9A2B709D259.html@@@1.2.2.1.3.2 NET_PRES_CertStoreGetCACerts Function@@@bool NET_PRES_CertStoreGetCACerts(const uint8_t ** certPtr, int32_t * certSize, uint8_t certIndex); true - Indicates success false - Indicates failure Get CA Certificates function This function is...","GUID-8D4BF36F-78F2-4E95-AB16-2349993A06E2.html@@@1.1.2 Key Features@@@The key features of the MPLAB\u00AE Harmony TCP/IP Stack are: Multiple interfaces - Ethernet and/or Wi-Fi interfaces are supported. Dual stack with IPv4 and/or IPv6 support: UDP and TCP sockets can support...","GUID-8D64BDFB-D773-4169-86CD-9BE5B642FFB0.html@@@1.2.5.4 ENCx24J600 Driver Library@@@The ENCx24J600 External MAC is an external module to the PIC32 that is connected through a SPI or PSP interface. This driver interfaces with the SPI driver to communicate with the external device to...","GUID-8D88BA74-4B6E-4166-A90C-A041AD260A58.html@@@1.2.5.8.4.38 DRV_ETHPHY_VENDOR_MDIX_CONFIGURE Type@@@typedef DRV_ETHPHY_RESULT (* DRV_ETHPHY_VENDOR_MDIX_CONFIGURE)(const struct DRV_ETHPHY_OBJECT_BASE_TYPE* pBaseObj, DRV_HANDLE handle, TCPIP_ETH_OPEN_FLAGS oFlags); DRV_ETHPHY_RES_OK - if success...","GUID-8D907A4D-1C8C-4857-B0AD-4F6CB8F7C4E9.html@@@1.2.4.2.3.13 TCPIP_ICMP_Task Function@@@void TCPIP_ICMP_Task(); This function performs ICMPv4 module tasks in the TCP/IP stack. The ICMP module should have been initialized. None. None...","GUID-8DA21A5F-888A-4335-991A-63C8DBA52DF6.html@@@1.2.6.1.1.3.55 TCPIP_STACK_HEAP_Size Function@@@size_t TCPIP_STACK_HEAP_Size( TCPIP_STACK_HEAP_HANDLE heapH ); This function returns the size of the heap. This is the size that was specified when the heap was created. heapH - valid heap handle...","GUID-8E0841B0-D052-4CCA-BD91-6A04641B4432.html@@@1.2.6.1.1.3.48 TCPIP_STACK_HEAP_HighWatermark Function@@@size_t TCPIP_STACK_HEAP_HighWatermark( TCPIP_STACK_HEAP_HANDLE heapH ); The function returns the maximum amount of memory that&apos;s been allocated from the head since the heap was created. heapH - valid...","GUID-8E122275-7175-409E-920E-1C72D335CEEF.html@@@1.2.1.7.3.8 TCPIP_DNS_CLIENT_INFO Structure@@@typedef struct { TCPIP_NET_HANDLE strictNet; TCPIP_NET_HANDLE prefNet; uint32_t dnsTime; uint16_t pendingEntries; uint16_t currentEntries; uint16_t totalEntries; } TCPIP_DNS_CLIENT_INFO; Structure...","GUID-8E81C406-F9B6-484F-A826-09C470DDA57A.html@@@1.2.1.13.3.49 TCPIP)HTTP_NET_MODULE_FLAGS Enumeration@@@typedef enum { TCPIP_HTTP_NET_MODULE_FLAG_DEFAULT = 0x00, TCPIP_HTTP_NET_MODULE_FLAG_NON_PERSISTENT = 0x01, TCPIP_HTTP_NET_MODULE_FLAG_NO_DELAY = 0x02, TCPIP_HTTP_NET_MODULE_FLAG_SECURE_ON = 0x10...","GUID-8EDFDD03-F79D-41A4-BA86-90DDDF65C1C7.html@@@1.2.1.13.3.43 TCPIP_HTTP_NET_DynamicFileInclude Function@@@bool TCPIP_HTTP_NET_DynamicFileInclude( TCPIP_HTTP_NET_CONN_HANDLE connHandle, const TCPIP_HTTP_DYN_VAR_DCPT* varDcpt, const char* fileName ); This function allows an entire file to be included as...","GUID-8F0815F6-929D-4B80-9547-C7035B35D7B1.html@@@1.2.1.8.3.4 TCPIP_DNSS_CACHE_MAX_SERVER_ENTRIES Macro@@@#define TCPIP_DNSS_CACHE_MAX_SERVER_ENTRIES (TCPIP_DNSS_CACHE_PER_IPV4_ADDRESS+TCPIP_DNSS_CACHE_PER_IPV6_ADDRESS) Maximum DNS server Cache entries. It is the sum of TCPIP_DNSS_CACHE_PER_IPV4_ADDRESS...","GUID-8F283FF4-09EC-49BD-AE31-9E558EA3E4C9.html@@@1.2.4.1.3.18 TCPIP_ARP_OPERATION_TYPE Enumeration@@@typedef enum { ARP_OPERATION_REQ = 1, ARP_OPERATION_RESP = 2, ARP_OPERATION_MASK = 0x000f, ARP_OPERATION_CONFIGURE = 0x1000, ARP_OPERATION_GRATUITOUS = 0x2000, ARP_OPERATION_PROBE_ONLY = 0x4000 }...","GUID-8F3F58C4-1DAB-4979-9D36-26D319D41E01.html@@@1.2.3.1.3.21 TCPIP_TCP_FifoRxFreeGet Function@@@uint16_t TCPIP_TCP_FifoRxFreeGet( TCP_SOCKET hTCP ); This function determines how many bytes are free in the RX buffer/FIFO. TCP is initialized. Parameters Description hTCP The socket to check. The...","GUID-8F3FAFA4-F46C-417E-B212-34A6C28AEA3D.html@@@1.2.1.13.3.45 TCPIP_HTTP_NET_DynamicWriteString Function@@@bool TCPIP_HTTP_NET_DynamicWriteString( const TCPIP_HTTP_DYN_VAR_DCPT* varDcpt, const char* str, bool needAck ); This function takes a 0 terminated ASCII string and sends it to the HTTP connection as...","GUID-8F64927B-A072-4A14-BFAF-ACBFE02ABBDE.html@@@1.2.1.20.3.13 TCPIP_SNTP_TIME_STAMP Union@@@typedef union { struct { uint32_t tStampFraction; uint32_t tStampSeconds; } uint64_t llStamp; } TCPIP_SNTP_TIME_STAMP; Describes the structure of the timestamp used by the SNTP module. Members...","GUID-8F880B26-124F-4B37-B4E0-912585C0C33C.html@@@1.2.5.3.3.5 DRV_ENC28J60_Deinitialize Function@@@void DRV_ENC28J60_Deinitialize(SYS_MODULE_OBJ object); None. ENC28J60 Deinitialization This function deallocates any resources allocated by the initialization function. The driver had to be...","GUID-90229388-3007-44F9-8FCE-5D83E2F35BD4.html@@@1.2.5.8.4.41 DRV_ETHPHY_VENDOR_WOL_CONFIGURE Type@@@typedef void (* DRV_ETHPHY_VENDOR_WOL_CONFIGURE)(const struct DRV_ETHPHY_OBJECT_BASE_TYPE* pBaseObj, DRV_HANDLE handle, unsigned char bAddr[]); None Pointer to Function: typedef void (*...","GUID-9078BE1B-48EC-41BD-A482-5F71246EED3B.html@@@1.2.1.2.3.41 IP_MULTICAST_IF Macro@@@#define IP_MULTICAST_IF 32 //Set the Interface that multicast packets should be sent on - Not yet supported Set the interface that multicast packets should be sent on. Not yet supported...","GUID-90D1F0E4-81C0-43A8-9E5D-099F5E63C835.html@@@1.2.6.1.1.3.37 TCPIP_NETWORK_TYPE Enumeration@@@typedef enum { TCPIP_NETWORK_TYPE_UNKNOWN, TCPIP_NETWORK_TYPE_PRIMARY, TCPIP_NETWORK_TYPE_ALIAS } TCPIP_NETWORK_TYPE; Enumeration: TCPIP_NETWORK_TYPE. Currently the network interfaces can be primary...","GUID-90F5A57F-5365-4569-A481-3EB4FA870A70.html@@@1.2.1.18.3.13 TCPIP_SMTPC_MESSAGE_RESULT Enumeration@@@typedef enum { TCPIP_SMTPC_RES_OK = 0, TCPIP_SMTPC_RES_PENDING = 1, TCPIP_SMTPC_RES_MESSAGE_ERROR = -1, TCPIP_SMTPC_RES_MESSAGE_SERVER_ERROR = -2, TCPIP_SMTPC_RES_MESSAGE_RCPT_ERROR = -3...","GUID-910A9784-771F-4B00-9891-A9515C0B34A4.html@@@1.2.1.2.3.93 SOCKET_CNXN_IN_PROGRESS Macro@@@#define SOCKET_CNXN_IN_PROGRESS (-2) //Socket connection state. Socket connection state...","GUID-912DD67D-07EE-4EA1-BEB6-A1AB190AF1EE.html@@@1.2.3.1.3.2 TCP_ADJUST_FLAGS Enumeration@@@typedef enum { TCP_ADJUST_GIVE_REST_TO_RX = 0x01, TCP_ADJUST_GIVE_REST_TO_TX = 0x02, TCP_ADJUST_PRESERVE_RX = 0x04, TCP_ADJUST_PRESERVE_TX = 0x08, TCP_ADJUST_TX_ONLY = 0x10, TCP_ADJUST_RX_ONLY = 0x20...","GUID-91873651-A426-4648-B1A4-CD7314750FE6.html@@@2.1.11 Application Coding@@@Now, you have the MPLAB\u00AE Harmony components configured for a TCP/IP application. The Getting-Started demo implements a simple TCP/IP Client application. This application is written using the API&apos;s...","GUID-91AA78F3-377B-479E-8B41-BEDF662C201C.html@@@1.2.6.1.1.3.23 TCPIP_Helper_SecurePortGetByIndex Function@@@uint16_t TCPIP_Helper_SecurePortGetByIndex( int index, bool streamSocket, int* pnIndexes ); This function returns the secure TCP/UDP port situated at the internal port table requested index. It also...","GUID-91AE8872-6F3C-4AA0-B43B-5F8227E0CA33.html@@@1.2.1.18.3.9 TCPIP_SMTPC_MESSAGE_CALLBACK Type@@@typedef void (* TCPIP_SMTPC_MESSAGE_CALLBACK)(TCPIP_SMTPC_MESSAGE_HANDLE messageHandle, const TCPIP_SMTPC_MESSAGE_REPORT* pMailReport); Type: TCPIP_SMTPC_MESSAGE_CALLBACK Data type describing a...","GUID-91F02427-3FB3-4759-9D6F-511B88EE8C32.html@@@1.2.6.1.1.3.105 TCPIP_STACK_VersionGet Function@@@unsigned int TCPIP_STACK_VersionGet( const SYS_MODULE_INDEX index ); This function gets the TCP/IP stack version. The version is encoded as major * 10000 + minor * 100 + patch. The stringed version...","GUID-92138F50-E64C-4110-835F-C50D989F9A55.html@@@1.2.1.20.3.3 TCPIP_SNTP_EVENT Enumeration@@@typedef enum { TCPIP_SNTP_EVENT_NONE = 0, TCPIP_SNTP_EVENT_TSTAMP_OK = 1, TCPIP_SNTP_EVENT_DNS_ERROR = -1, TCPIP_SNTP_EVENT_IF_ERROR = -2, TCPIP_SNTP_EVENT_SKT_ERROR = -3, TCPIP_SNTP_EVENT_SERVER_TMO...","GUID-927AA99C-9ACD-4B21-ABCA-71378BD4823C.html@@@1.2.4.5.3.15 TCPIP_IPV4_PacketAlloc Function@@@IPV4_PACKET* TCPIP_IPV4_PacketAlloc( uint16_t pktPayload, TCPIP_IPV4_OPTION_DCPT* pOptions, int nOptions, TCPIP_MAC_PACKET_FLAGS flags ); The function is a helper to allocate an IPv4 packet that...","GUID-92879E40-8A1F-42B2-A9AB-C0FF32184F2A.html@@@1.2.6.1.1.3.64 TCPIP_STACK_NetAddress Function@@@uint32_t TCPIP_STACK_NetAddress( TCPIP_NET_HANDLE netH ); If interface is enabled then the function will return the IPv4 address of the network interface. The TCPIP_STACK_Initialize() function must...","GUID-92902367-AA36-4F8C-8E8F-2A4380D2FFB0.html@@@1.2.4.6.3.59 TCPIP_IPV6_PutArray Macro@@@#define TCPIP_IPV6_PutArray(pkt,data,len) TCPIP_IPV6_ArrayPutHelper(pkt, data, IPV6_DATA_PIC_RAM, len) This function writes data to an outgoing packet. TCPIP_IPV6_Initialize() is required...","GUID-92ADB2C2-D9EA-491D-9BB2-893468E4E0F4.html@@@1.2.3.2.3.39 TCPIP_UDP_SOCKET_POOL_BUFFER_SIZE Macro@@@#define TCPIP_UDP_SOCKET_POOL_BUFFER_SIZE 512 Size of the buffers in the UDP pool. Any UDP socket that is enabled to use the pool and has the TX size &lt;= than this size can use a buffer from the pool...","GUID-92B34162-C30A-4FB4-8382-30FBF4922B9F.html@@@1.2.4.5.3.21 TCPIP_IPV4_PacketHandlerDeregister Function@@@bool TCPIP_IPV4_PacketHandlerDeregister( TCPIP_IPV4_PROCESS_HANDLE pktHandle ); This function removes a packet processing handler. IPv4 properly initialized. Parameters Description pktHandle TCPIP...","GUID-93387E84-709B-4C17-990D-C40C5A02738E.html@@@1.2.1.12.2.6 HTTP_STATUS Enumeration@@@typedef enum { HTTP_GET = 0u, HTTP_POST, HTTP_BAD_REQUEST, HTTP_UNAUTHORIZED, HTTP_NOT_FOUND, HTTP_OVERFLOW, HTTP_INTERNAL_SERVER_ERROR, HTTP_NOT_IMPLEMENTED, HTTP_REDIRECT, HTTP_SSL_REQUIRED...","GUID-9356D53B-4F42-4E1E-B051-90F7C4D448E6.html@@@1.2.1.3.3 Library Interface@@@Name Description Macros TCPIP_DHCP_CLIENT_ENABLED Default value for the enable/disable the DHCP client at stack start-up. TCPIP_DHCP_HOST_NAME_SIZE Maximum size of a host name to be advertised to the...","GUID-93867F57-950F-4F08-BC55-77CA37E43E4D.html@@@1.2.1.12.2.46 TCPIP_HTTP_Task Function@@@void TCPIP_HTTP_Task(); This function performs HTTP module tasks in the TCP/IP stack. The HTTP module should have been initialized. None. None...","GUID-940DE310-D484-4698-B02D-714E9D9DC366.html@@@1.2.5.2.32 TCPIP_MAC_PacketRx Function@@@TCPIP_MAC_PACKET* TCPIP_MAC_PacketRx( DRV_HANDLE hMac, TCPIP_MAC_RES* pRes, const TCPIP_MAC_PACKET_RX_STAT** ppPktStat ); This is the MAC receive function. Once a pending packet is available in the...","GUID-941A2702-62E8-424D-8E43-B21B0A9FC1DA.html@@@1.2.1.19.3.57 TCPIP_SNMPv3_Notify Function@@@bool TCPIP_SNMPv3_Notify( SNMP_ID var, SNMP_VAL val, SNMP_INDEX index, uint8_t targetIndex, SNMP_TRAP_IP_ADDRESS_TYPE eTrapMultiAddressType ); This function creates SNMPv3 trap PDU and sends it to...","GUID-94510D18-9ED8-4821-A315-200CED9BBC43.html@@@1.2.4.4 IGMP Module@@@The IGMP module implements the IGMPv3 protocol. This protocol is used by hosts and routers to establish multicast group memberships...","GUID-9461917B-27CE-44ED-80DB-67D963896E8F.html@@@1.2.3.1.3 Library Interface@@@Name Description Macros TCPIP_TCP_AUTO_TRANSMIT_TIMEOUT_VAL Timeout before automatically transmitting unflushed data, ms. Default value is 40 ms. TCPIP_TCP_CLOSE_WAIT_TIMEOUT Timeout for the...","GUID-948E4BCA-DEFF-4D16-8C7C-7883A23A43B5.html@@@1.2.1.2.3.1 __ss_aligntype Macro@@@#define __ss_aligntype uint32_t Structure large enough to hold any socket address (with the historical exception of AF_UNIX). 128 bytes reserved...","GUID-949459F3-589F-4E96-A337-0A34DD9A8F1F.html@@@1.2.4.4.3.15 TCPIP_IGMP_RESULT Enumeration@@@typedef enum { TCPIP_IGMP_OK = 0, TCPIP_IGMP_IF_ERROR = -1, TCPIP_IGMP_ARG_ERROR = -2, TCPIP_IGMP_MCAST_ADDRESS_ERROR = -3, TCPIP_IGMP_SOURCE_INVALID = -4, TCPIP_IGMP_FILTER_ERROR = -5...","GUID-94A49112-5D81-4C34-B0F2-1FEC1B9D7701.html@@@1.2.5.6.3.10 MAC_DRVR_EventAcknowledge Function@@@bool MAC_DRVR_EventAcknowledge( DRV_HANDLE hMac, TCPIP_MAC_EVENT tcpAckEv ); true if events acknowledged false if no events to be acknowledged This function acknowledges and re-enables processed...","GUID-94B64443-29E3-4B31-98FF-279E1626C22C.html@@@1.2.6.1.1.3.21 TCPIP_Helper_ntohs Function@@@uint16_t TCPIP_Helper_ntohs( uint16_t nShort ); This is a function TCPIP_Helper_ntohs...","GUID-94FCFD40-F5DF-44E5-875F-FD3015C5F609.html@@@1.2.5.3.3.7 DRV_ENC28J60_EventMaskSet Function@@@bool DRV_ENC28J60_EventMaskSet(DRV_HANDLE hMac, TCPIP_MAC_EVENT macEvents, bool enable); true - if the mask could be set false - if the mast could not be set ENC28J60 Set Event Mask Sets the event...","GUID-95008CEB-1464-4F23-B4C9-16F488B42AF3.html@@@1.2.2.1.2 Network Presentation Configurations@@@Network Presentation Specific User Configurations Number of Presentation Sockets: Number of Presentation Sockets. Default value 10 Symbol NET_PRES_SOCKETS Trust&Go client certificate: Auto load device...","GUID-9502DFAF-4BDF-4BA7-98E9-E47CF74A4B13.html@@@1.2.1.2.3.20 EAI_OVERFLOW Macro@@@#define EAI_OVERFLOW -12 /* Argument buffer overflow. */ Argument buffer overflow...","GUID-9572D9BA-CE2C-4C4C-9860-F6ABB4D79D6F.html@@@1.2.1.13.3.51 TCPIP_HTTP_NET_SSIVariableDelete Function@@@bool TCPIP_HTTP_NET_SSIVariableDelete( const char* varName ); This function deletes an SSI variable if it exists. The HTTP module should have been initialized. SSI should be enabled. Parameters...","GUID-95A24C2C-8CEE-4773-852D-0CE77D8D0941.html@@@1.2.5.9.1 Abstraction Model@@@The MIIM driver clients access PHY registers using the MIIM Driver API. The driver abstracts out the hardware details of the MIIM interface and provides a PHY register access mechanism to the...","GUID-95B5B21B-3EAC-42F2-99DC-E824BAFAA690.html@@@1.2.1.19.3.4 SNMP_INDEX Type@@@typedef uint32_t SNMP_ID; Type: SNMP_ID. Only dynamic and AgentID variables can contain a dyanmic ID. MIB2BIB utility enforces this rule when BIB was generated. All the dynamic IDs are are listed in...","GUID-95D7899C-A605-4BFE-9465-472B8982B8E1.html@@@1.2.5.2.41 TCPIP_MAC_PKT_FreeFDbg Type@@@typedef void (* TCPIP_MAC_PKT_FreeFDbg)(TCPIP_MAC_PACKET* pPkt, int moduleId); This is type TCPIP_MAC_PKT_FreeFDbg...","GUID-96055254-A7FF-4F59-982B-4086005F2E29.html@@@1.2.2.1.3.35 NET_PRES_SocketConnect Function@@@bool NET_PRES_SocketConnect(NET_PRES_SKT_HANDLE_T handle); true - Indicates success false - Indicates failure This function calls the transport layer&apos;s connect function directly, if it exists. A...","GUID-963C11C1-03DB-43E1-AD4A-F6D968F0EB64.html@@@1.2.5.4.3.19 DRV_ENCX24J600_RegisterStatisticsGet Function@@@TCPIP_MAC_RES DRV_ENCX24J600_RegisterStatisticsGet(DRV_HANDLE hMac, TCPIP_MAC_STATISTICS_REG_ENTRY* pRegEntries, int nEntries, int* pHwEntries); TCPIP_MAC_RES_TYPE_ERR - if the hMac is invalid...","GUID-963E24E3-0CE4-406B-9AB6-B4984A4E4837.html@@@1.2.1.10.3.25 TCPIP_FTPC_Login Function@@@TCPIP_FTPC_RETURN_TYPE TCPIP_FTPC_Login(TCPIP_FTPC_CONN_HANDLE_TYPE ftpcHandle, const char * username, const char * password, const char * account); TCPIP_FTPC_RET_OK - if successfully scheduled login...","GUID-966381B9-C7A1-4570-9ADD-C5455814FC42.html@@@1.2.2.1.3.66 NET_PRES_TransClose Type@@@typedef void (* NET_PRES_TransClose)(NET_PRES_SKT_HANDLE_T handle); None. Transport Layer Close Function Pointer Prototype This function is called by the presentation layer when the application wants...","GUID-96ADA561-AD37-4BAD-8C07-2B45663C7BCD.html@@@1.2.1.5.3.11 TCPIP_DHCPS_HandlerRegister Function@@@TCPIP_DHCPS_EVENT_HANDLE TCPIP_DHCPS_HandlerRegister(TCPIP_NET_HANDLE hNet, TCPIP_DHCPS_EVENT_HANDLER handler, const void* hParam) Registers a DHCP server Handler. This function registers a DHCP event...","GUID-96C035A3-003B-4C27-8A56-14F6DC0D5B56.html@@@1.2.4.6.3.23 IPV6_TLV_HBHO_PAYLOAD_JUMBOGRAM Macro@@@#define IPV6_TLV_HBHO_PAYLOAD_JUMBOGRAM 0xC2u IPv6 Type-length-value type code for the Hop-by-hop &quot;Jumbo-gram Payload&quot; option...","GUID-974047C5-EE1C-4EA6-8440-B5B9BDDB0077.html@@@1.2.5.9.3.4 DRV_MIIM_ClientStatus Function@@@DRV_MIIM_CLIENT_STATUS DRV_MIIM_ClientStatus(DRV_HANDLE handle); DRV_MIIM_CLIENT_STATUS_READY - if the client handle represents a valid MIIM client DRV_MIIM_CLIENT_STATUS_ERROR - if the client handle...","GUID-987D1913-E20A-467D-9E57-DEC60B2EBE5D.html@@@1.2.1.8.3 Library Interface@@@Name Description General Functions TCPIP_DNSS_AddressCntGet Get DNS Server IPv4 or IPv4 Address count details for the Input value of Index TCPIP_DNSS_CacheEntryRemove Remove DNS server cache entry by...","GUID-98A5FE63-B0F4-4D04-BA00-861E9841D353.html@@@1.2.4.5 IPv4 Module@@@IP is the workhorse protocol of the TCP/IP protocol suite. All TCP, UDP, and ICMP data gets transmitted as IP datagrams. IP provides an unreliable, connectionless datagram delivery service. IP...","GUID-98F113E7-4D55-4A56-975B-D13D48A699D8.html@@@1.2.1.2.3.4 _BERKELEY_API_HEADER_FILE Macro@@@#define _BERKELEY_API_HEADER_FILE This is macro _BERKELEY_API_HEADER_FILE...","GUID-990162EC-DD14-462F-8336-B5D2B089AE87.html@@@1.2.6.1.1.3.17 TCPIP_Helper_ntohl Macro@@@#define TCPIP_Helper_ntohl(n) TCPIP_Helper_htonl(n) This is macro TCPIP_Helper_ntohl...","GUID-990F969B-A523-410A-B363-5970F6C14638.html@@@1.2.3.1.3.40 TCPIP_TCP_Put Function@@@uint16_t TCPIP_TCP_Put( TCP_SOCKET hTCP, uint8_t byte ); Writes a single byte to a TCP socket. TCP socket should have been opened with TCPIP_TCP_ServerOpen()/TCPIP_TCP_ClientOpen(). hTCP - valid...","GUID-9964853D-CE4F-410A-BC32-69266F0C45F8.html@@@1.2.5.8.4.22 DRV_ETHPHY_NegotiationIsComplete Function@@@DRV_ETHPHY_RESULT DRV_ETHPHY_NegotiationIsComplete(DRV_HANDLE handle, DRV_ETHPHY_INTERFACE_INDEX portIndex, bool waitComplete); DRV_ETHPHY_RES_PENDING operation is ongoing an DRV_ETHPHY_RESULT error...","GUID-9986E81B-F489-44C1-8D42-2AF4856B0C06.html@@@1.2.1.16.3.1 TCPIP_REBOOT_CONFIG Structure@@@typedef struct { void* reserved; } TCPIP_REBOOT_CONFIG; Structure: TCPIP_REBOOT_CONFIG - TCPIP Reboot server configuration and initialization data...","GUID-99BCAA38-D478-406B-85D1-88639F4C8D1E.html@@@1.2.4.6.3.63 TCPIP_IPV6_Task Function@@@void TCPIP_IPV6_Task(); This function performs IPv6 module tasks in the TCP/IP stack. IPv6 properly initialized. None. None...","GUID-99C14E9A-0AFB-42FD-BBE0-48FEA67DDF63.html@@@1.2.5.10.3.18 PPP_StatHandlerRegister Function@@@PPP_STAT_HANDLE PPP_StatHandlerRegister(DRV_HANDLE hMac, PPP_STAT_HANDLER handler); Returns a valid handle if the call succeeds, or a null handle if the call failed (out of memory, for example). This...","GUID-99C3B0B4-7B5A-4987-90BD-81B3DDA72693.html@@@1.2.5.2.13 TCPIP_MAC_HANDLE Type@@@typedef DRV_HANDLE TCPIP_MAC_HANDLE; MAC Handle. This data type defines a MAC client handle...","GUID-9A0666DA-6B06-4C37-B365-9537F3BCFD78.html@@@1.2.1.1.3.7 TCPIP_ANNOUNCE_Task Function@@@void TCPIP_ANNOUNCE_Task(); This function performs Announce module tasks in the TCP/IP stack. The Announce module should have been initialized. None. None...","GUID-9A185311-D542-46CB-A12F-336F26B3E015.html@@@1.2.1.18.3.7 TCPIP_SMTPC_MAIL_MESSAGE Structure@@@typedef struct { const char* from; const char* to; const char* sender; const char* cc; const char* bcc; const char* date; const char* subject; const uint8_t* body; size_t bodySize; int nBuffers; const...","GUID-9A3C3F1A-4F48-40BD-B84C-C6EF22144F74.html@@@1.2.1.7.3.38 TCPIP_DNS_RESULT Enumeration@@@typedef enum { TCPIP_DNS_RES_OK = 0, TCPIP_DNS_RES_PENDING, TCPIP_DNS_RES_NAME_IS_IPADDRESS, TCPIP_DNS_RES_NO_NAME_ENTRY = -1, TCPIP_DNS_RES_NO_IP_ENTRY = -2, TCPIP_DNS_RES_NO_IX_ENTRY = -3...","GUID-9A7BDDC3-1994-4804-A724-FE1590E504F5.html@@@1.2.1.13.3.19 TCPIP_HTTP_NET_ConnectionFileGet Function@@@SYS_FS_HANDLE TCPIP_HTTP_NET_ConnectionFileGet( TCPIP_HTTP_NET_CONN_HANDLE connHandle ); This function returns the handle of the current HTTP connection file. None. Parameters Description connHandle...","GUID-9A9F54F8-09FE-483F-BA62-886871114B72.html@@@1.2.2.1.3.44 NET_PRES_SocketIsOpenModeSupported Function@@@bool NET_PRES_SocketIsOpenModeSupported(NET_PRES_INDEX index, NET_PRES_SKT_T socketType); true - The mode is supported false - The mode is not supported This function checks to see if a mode is...","GUID-9AA24DCC-E1F4-42A4-A028-45365EA4B1BF.html@@@1.2.5.5.3.16 DRV_GMAC_RegisterStatisticsGet Function@@@TCPIP_MAC_RES DRV_GMAC_RegisterStatisticsGet(DRV_HANDLE hMac, TCPIP_MAC_STATISTICS_REG_ENTRY* pRegEntries, int nEntries, int* pHwEntries); TCPIP_MAC_RES_OK if all processing went on OK...","GUID-9AC4FEC0-84BA-4E2C-93EF-35B3F6C91518.html@@@1.2.2.1.3.57 NET_PRES_SocketWrite Function@@@uint16_t NET_PRES_SocketWrite(NET_PRES_SKT_HANDLE_T handle, const void * buffer, uint16_t size); The number of bytes written to the socket. If less than len, the buffer became full or the socket is...","GUID-9B4C7612-0F04-43CF-B6CF-6EA9A0DD2145.html@@@1.2.1.2.3.29 getsockopt Function@@@int getsockopt( SOCKET s, uint32_t level, uint32_t option_name, uint8_t * option_value, uint32_t * option_length ); Various options can be set at the socket level. This function provides compatibility...","GUID-9B5A7DC2-40DE-4992-9792-7FAAF93D8FD6.html@@@1.2.1.19.3.28 TCPIP_SNMP_MibIDSet Function@@@void TCPIP_SNMP_MibIDSet( uint32_t mibID ); This function is used to Set the MIB ID which is require while transmitting SNMP notification.SNMP user can this function without adding this to the...","GUID-9B86AE3A-89C9-45FD-A75C-AAA3A0A0417A.html@@@1.2.3.1.3.10 TCPIP_TCP_Abort Function@@@void TCPIP_TCP_Abort( TCP_SOCKET hTCP, bool killSocket ); This function aborts a connection to a remote node by sending a RST (if currently connected). Any pending TX/RX data is discarded. A client...","GUID-9B95B415-BC0B-4D38-BB49-5BAB8072B2BD.html@@@1.2.5.9.3.12 DRV_MIIM_Initialize Function@@@SYS_MODULE_OBJ DRV_MIIM_Initialize(const SYS_MODULE_INDEX index, const SYS_MODULE_INIT * const init); a valid handle to a driver object, if successful. SYS_MODULE_OBJ_INVALID if initialization failed...","GUID-9BD25F40-82F5-447B-AED0-BD21FC7D0681.html@@@1.2.1.23.3.18 TCPIP_TFTPS_Task Function@@@void TCPIP_TFTPS_Task(); None. This function performs TFTPS module tasks in the TCP/IP stack. None. The TFTPS module should have been initialized. Section...","GUID-9C5742A6-7A5F-4DA2-A10B-3E6827E3466B.html@@@1.2.1.8.3.19 TCPIP_DNSS_TTL_TIME Macro@@@#define TCPIP_DNSS_TTL_TIME (10*60) Default TTL time for a IP address is 10 minutes...","GUID-9C6F2B16-5C79-404E-A87D-24194C4561E2.html@@@1.2.3.1.3.14 TCPIP_TCP_ArrayPut Function@@@uint16_t TCPIP_TCP_ArrayPut( TCP_SOCKET hTCP, const uint8_t* Data, uint16_t Len ); Writes an array from a buffer to a TCP socket. TCP is initialized. Parameters Description hTCP The socket to which...","GUID-9CB9084C-9554-4FBF-B513-27DAC5B429A6.html@@@1.2.3.1.3.4 TCP_OPTION_LINGER_DATA Structure@@@typedef struct { bool lingerEnable; bool gracefulEnable; uint16_t lingerTmo; } TCP_OPTION_LINGER_DATA; Structure: TCP_OPTION_LINGER_DATA. This structure defines socket linger options. Members...","GUID-9D764E72-812D-4552-AA42-553CD03EF776.html@@@1.2.5.2.14 TCPIP_MAC_HEAP_CallocF Type@@@typedef void* (* TCPIP_MAC_HEAP_CallocF)(TCPIP_MAC_HEAP_HANDLE heapH, size_t nElems, size_t elemSize); Memory Allocation Function: typedef void* (*TCPIP_MAC_HEAP_CallocF)(TCPIP_MAC_HEAP_HANDLE heapH...","GUID-9D96E9B8-75C1-40F1-B918-C38B500E2B46.html@@@1.2.6.1.1.3.95 TCPIP_STACK_NetMulticastSet Function@@@bool TCPIP_STACK_NetMulticastSet( TCPIP_NET_HANDLE netH ); This function sets the current default multicast network interface in the TCP/IP stack. The TCP/IP stack should have been initialized by...","GUID-9DE145CE-6D99-4501-94F3-9C24899050ED.html@@@1.2.1.19.3.40 TCPIP_SNMP_TrapInterFaceSet Function@@@void TCPIP_SNMP_TrapInterFaceSet( TCPIP_NET_HANDLE netIntf ); This function is used to Set the network interface to which the TRAP socket is ready to transmit Notifications to the TRAP receiver...","GUID-9DF34C88-1362-40AF-96CB-91D235E15F99.html@@@1.2.1.24.3.2 TCPIP_MDNS_ServiceDeregister Function@@@MDNSD_ERR_CODE TCPIP_MDNS_ServiceDeregister( TCPIP_NET_HANDLE netH ); This function is used by end-user application to deregister DNS service discovery on a local network. When this gets invoked by...","GUID-9E113802-9285-489D-859D-4D21BD2E186E.html@@@1.2.4.1.3.12 TCPIP_ARP_EVENT_TYPE Enumeration@@@typedef enum { ARP_EVENT_SOLVED = 1, ARP_EVENT_UPDATED = 2, ARP_EVENT_PERM_UPDATE = 3, ARP_EVENT_REMOVED_TMO = -1, ARP_EVENT_REMOVED_USER = -2, ARP_EVENT_REMOVED_EXPIRED = -3, ARP_EVENT_REMOVED_PURGED...","GUID-9E580BCC-6867-4F1F-9FD8-FE486EF6BCEE.html@@@1.2.1.8.3.10 TCPIP_DNSS_EntryAdd Function@@@TCPIP_DNSS_RESULT TCPIP_DNSS_EntryAdd( const char* name, IP_ADDRESS_TYPE type, IP_MULTI_ADDRESS* pAdd, uint32_t entryTimeout ); This function is used to add a IPv4 or IPv6 entry. Every time this is...","GUID-9EA9636B-8371-4C08-A62D-D1D0F74C2C8E.html@@@1.2.1.3.1 Abstraction Model@@@This module provides software abstraction of the DHCP module existent in any TCP/IP Stack implementation. It dynamically obtains an IP address and a subnet mask from a DHCP server on the same network...","GUID-9EA99835-9E73-4F37-A1CB-D6E0B063F7E9.html@@@1.2.1.7.3.11 TCPIP_DNS_CLIENT_MAX_SELECT_INTERFACES Macro@@@#define TCPIP_DNS_CLIENT_MAX_SELECT_INTERFACES 4 Max number of interfaces to take part in the DNS selection algorithm Should be always greater than 1: the default interface should always be considered...","GUID-9EAA8032-D0E0-408C-8EB4-E9EEA82F23D5.html@@@1.2.5.6.3.21 MAC_DRVR_Tasks_ISR Function@@@void MAC_DRVR_Tasks_ISR( SYS_MODULE_OBJ macIndex ); None This is the Ethernet MAC driver interrupt service routine. It processes the Ethernet related interrupts and notifies the events to the driver...","GUID-9EB90A68-DF37-4610-A38C-5ED82ACACB78.html@@@1.2.4.6.3.57 TCPIP_IPV6_PROCESS_HANDLE Type@@@typedef const void* TCPIP_IPV6_PROCESS_HANDLE; Type: TCPIP_IPV6_PROCESS_HANDLE. Definition of a packet processing handle used for packet processing registration by the IPv6 clients...","GUID-9EE792A4-EB2B-450B-8B8D-57A0349B19C5.html@@@1.2.1.6.3.6 TCPIP_DHCPV6_EVENT_HANDLER Type@@@typedef void (* TCPIP_DHCPV6_EVENT_HANDLER)(TCPIP_NET_HANDLE hNet, TCPIP_DHCPV6_CLIENT_STATE clientState, const TCPIP_DHCPV6_IA_EVENT* pDhcpIaEv, const void* param); DHCPv6 reported event structure...","GUID-9EE838C7-EC9B-449B-A065-89402F2576F2.html@@@1.2.3.1.3.42 TCPIP_TCP_RemoteBind Function@@@bool TCPIP_TCP_RemoteBind( TCP_SOCKET hTCP, IP_ADDRESS_TYPE addType, TCP_PORT remotePort, IP_MULTI_ADDRESS* remoteAddress ); This function is meant for unconnected server and client sockets. Sockets...","GUID-9EFED381-4E08-4B6F-B243-051BE2A8F642.html@@@1.2.1.20.1 Abstraction Model@@@...","GUID-9F3B95DE-F127-481D-8456-3405E093B3B5.html@@@1.2.4.4.3.1 TCPIP_IGMP_EVENT_HANDLER Type@@@typedef void (* TCPIP_IGMP_EVENT_HANDLER)(IPV4_ADDR mcastAddress, TCPIP_IGMP_EVENT_TYPE evType, const void* param); Type: TCPIP_IGMP_EVENT_HANDLER. The format of a notification handler registered with...","GUID-9F670845-16F8-4538-9449-22EE94D82ACD.html@@@1.2.4.7 NDP Module@@@The NDP (Neighbor Discovery Protocol) for IP version 6 is used by IPv6 nodes on the same link to discover each other&apos;s presence. RFC - 4861. NDP module is responsible for: Address Auto configuration...","GUID-9F95A036-7CDD-4B39-8978-93A5CABEE1EE.html@@@1.2.1.8.2 Domain Name System Server (DNSS) Configurations@@@DNSS Specific User Configurations Maximum Number of IPv4 Cache Entries: Maximum and default number of IPv4 entries will be allowed to be configured from command prompt. These many entries will be...","GUID-9F99FA2F-E094-41F2-8A2A-AC62313B0A62.html@@@1.2.2.1.3.1 NET_PRES_ADDRESS Structure@@@C typedef struct { uint8_t addr[16]; } NET_PRES_ADDRESS; Enumeration: NET_PRES_ADDRESS Enumeration describing the NET_PRES address None...","GUID-9FAAF46E-46AA-4A7B-BE01-F2D8FF635A2D.html@@@1.2.1.13.3.22 TCPIP_HTTP_NET_ConnectionHasArgsGet Function@@@uint8_t TCPIP_HTTP_NET_ConnectionHasArgsGet( TCPIP_HTTP_NET_CONN_HANDLE connHandle ); The function will get the value of the &quot;cookies or get arguments&quot; that are present. None. Parameters Description...","GUID-A019EA72-1DD0-4DFA-AB2A-71ABCD141E79.html@@@1.2.5.3.3.12 DRV_ENC28J60_MDIX_TYPE Type@@@typedef enum DRV_ENC28J60_MDIX_TYPE@1 DRV_ENC28J60_MDIX_TYPE; ENC28J60 Driver MDIX Control type This type defines the enumeration for controlling the MDIX select. None...","GUID-A02509EB-5D47-4F15-9624-DF4B347C58F2.html@@@1.2.1.7.3.3 TCPIP_DNS_CLIENT_CACHE_ENTRIES Macro@@@#define TCPIP_DNS_CLIENT_CACHE_ENTRIES 5 Number of DNS resolver entries...","GUID-A0386E9E-955F-4A64-8E05-C5A3DB49EE36.html@@@1.2.5.5.3.7 DRV_GMAC_INDEX_COUNT Macro@@@#define DRV_GMAC_INDEX_COUNT GMAC_NUMBER_OF_MODULES Ethernet Driver Module Index Count This constant identifies number of valid Ethernet driver indices. This constant should be used in place of...","GUID-A0A2D32D-BDBE-4B12-B7C5-478283FE6A7C.html@@@1.2.1.19.3.44 TCPIP_SNMP_TrapSpecificNotificationGet Function@@@void TCPIP_SNMP_TrapSpecificNotificationGet( uint8_t * specTrap ); This function is used to get specific trap value. Specific trap values are listed in SNMP_VENDOR_SPECIFIC_TRAP_NOTIFICATION_TYPE...","GUID-A0A662A8-3004-4630-A785-8E75E56AAAE8.html@@@1.2.4.5.3.7 TCPIP_IPV4_IsFragmentationEnabled Function@@@bool TCPIP_IPV4_IsFragmentationEnabled(); This function is a helper to return the IPv4 fragmentation support. IPv4 properly initialized. True - If the fragmentation is enabled and supported by the...","GUID-A0B1BF22-A91B-4E6B-AC59-D65298341076.html@@@1.2.5.4.3.26 DRV_ENCX24J600_Tasks Function@@@void DRV_ENCX24J600_Tasks(SYS_MODULE_OBJ object); None. ENCX24J600 Tasks This function will execute the main state machine for the ENCX24J600 driver. The driver had to be successfully initialized with...","GUID-A0BDAD39-C2D0-4738-AAFA-16760C5182FC.html@@@1.2.1.2.3.16 EAI_FAIL Macro@@@#define EAI_FAIL -4 /* Non-recoverable failure in name res. */ Non-recoverable failure in name res...","GUID-A185E54B-88C8-473F-9C6B-6659008AFCAF.html@@@1.2.4.6.3.7 IPV6_DATA_NONE Macro@@@#define IPV6_DATA_NONE (0x0u) // The data segment is unused The data segment is unused...","GUID-A1BE117B-3066-4131-A622-A1018B8AEA86.html@@@1.2.6.1.1.3.28 TCPIP_Helper_TCPSecurePortGet Function@@@bool TCPIP_Helper_TCPSecurePortGet( uint16_t tcpPort ); This function checks the internal data for detecting if the required TCP port is a secure port or not. A secure port is one that requires secure...","GUID-A1DC8B70-9EAD-48F3-B86B-F8BF2AC71585.html@@@1.2.6.1.1.3.14 TCPIP_Helper_IsMcastAddress Function@@@TCPIP_Helper_IsMcastAddress( const IPV4_ADDR* IPAddress ); This is function TCPIP_Helper_IsMcastAddress...","GUID-A200B90D-426C-451D-88D9-318F9E196437.html@@@1.2.1.2.3.36 INADDR_ANY Macro@@@#define INADDR_ANY 0x01000000u // IP address for server binding. IP address for server binding...","GUID-A22C30D9-1253-4D63-99F9-E462609DBC61.html@@@1.2.5.8.2 Using the Library@@@The user of this driver is the MPLAB Harmony TCP/IP Stack through its Ethernet MAC driver. This Ethernet PHY driver is not intended as a system wide driver that the application or other system modules...","GUID-A23F1082-F8DD-41B6-B489-C1B2515F2F1F.html@@@1.2.4.6.3.28 IPV6_TLV_UNREC_OPT_DISCARD_PP Macro@@@#define IPV6_TLV_UNREC_OPT_DISCARD_PP 0x02 IPv6 action code for the unrecognized option reaction to discard the packet and send an ICMP parameter problem message...","GUID-A24BDAD2-C63E-40B1-894D-1DC3CC6CB66A.html@@@1.2.5.5.3 Library Interface@@@Name Description Client Level Functions DRV_GMAC_Close Closes a client instance of the PIC32 MAC Driver. DRV_GMAC_Open Opens a client instance of the PIC32 MAC Driver. DRV_GMAC_Deinitialize...","GUID-A2F2FCBB-C950-48DE-953A-1042AE6F5FB3.html@@@1.2.1.23.3.14 TCPIP_TFTPS_IsEnabled Function@@@bool TCPIP_TFTPS_IsEnabled(); true : if connection is established false: if server open fails. This function determines if a TFTP server socket connection is established and ready to receive packet...","GUID-A35D9196-ED2D-4A09-B26D-F3B68ABDA206.html@@@1.2.6.1.1.3.102 TCPIP_STACK_PROCESS_HANDLE Type@@@typedef const void* TCPIP_STACK_PROCESS_HANDLE; Type: TCPIP_STACK_PROCESS_HANDLE. Definition of a packet processing handle used for packet processing registration by the stack clients...","GUID-A37F574B-3E84-4ABE-8CA4-05772FE75D4A.html@@@1.2.5.7.3.7 DRV_ETHMAC_PIC32MACEventPendingGet Function@@@TCPIP_MAC_EVENT DRV_ETHMAC_PIC32MACEventPendingGet(DRV_HANDLE hMac); The currently stack pending events. This function returns the currently pending Ethernet MAC events. Multiple events will be ORed...","GUID-A3992A9B-88BD-4049-AA62-38DC5FDECE42.html@@@1.2.5.2.2 _tag_TCPIP_MAC_PACKET Structure@@@struct _tag_TCPIP_MAC_PACKET { struct _tag_TCPIP_MAC_PACKET* next; struct _tag_TCPIP_MAC_PACKET* pkt_next; TCPIP_MAC_PACKET_ACK_FUNC ackFunc; const void* ackParam; TCPIP_MAC_DATA_SEGMENT* pDSeg...","GUID-A3B3EFA8-4DBC-46CC-BEB1-896D4B5BF9F2.html@@@1.2.6.1.1.3.44 TCPIP_STACK_HEAP_EXTERNAL_CONFIG Structure@@@typedef struct { TCPIP_STACK_HEAP_TYPE heapType; TCPIP_STACK_HEAP_FLAGS heapFlags; TCPIP_STACK_HEAP_USAGE heapUsage; void* (* malloc_fnc)(size_t bytes); void* (* calloc_fnc)(size_t nElems, size_t...","GUID-A3CEED75-FCEE-4BBB-886E-1709118B1593.html@@@1.2.1.2.3.48 IPPROTO_IP Macro@@@#define IPPROTO_IP 0 // Indicates IP pseudo-protocol. Indicates IP pseudo-protocol...","GUID-A4032660-D259-41E4-B406-9DDC0B0E1928.html@@@1.2.5.6.3.2 MAC_DRVR_Close Function@@@void MAC_DRVR_Close( DRV_HANDLE hMac ); None This function closes a client instance of the PIC32 MAC Driver. None MAC_DRVR_Open() should have been called. Parameters Description hMac valid MAC handle...","GUID-A41AF18F-0941-44E1-9916-A0D4D4DD11F3.html@@@1.2.1.6.3.10 TCPIP_DHCPV6_IA_EVENT Union@@@typedef union { uint32_t eventVal; struct { uint8_t iaType; uint8_t iaState; uint8_t iaSubState; uint8_t iaIndex; } } TCPIP_DHCPV6_IA_EVENT; IA event info. Members Description iaType A...","GUID-A477C6E3-0E32-4BBB-A50D-585BA9D587F9.html@@@1.2.1.12.2.43 TCPIP_HTTP_PostReadPair Macro@@@#define TCPIP_HTTP_PostReadPair(connHandle, cData, wLen) TCPIP_HTTP_PostValueRead(connHandle, cData, wLen) Reads a name and value pair from a URL encoded string in the TCP buffer. This function is...","GUID-A47F927D-FEE2-4271-88C5-255447EFDD1C.html@@@1.2.1.19.3.53 TCPIP_SNMP_WriteCommunityGet Function@@@bool TCPIP_SNMP_WriteCommunityGet( int index, int len, uint8_t * dest ); This function is used to collect WRITE community string from the global community table with respect to the index value...","GUID-A4833A60-F6A0-4EC8-8F8E-A0ABF7C0B545.html@@@1.2.5.5.3.1 DRV_GMAC_Close Function@@@void DRV_GMAC_Close(DRV_HANDLE hMac); None This function closes a client instance of the PIC32 MAC Driver. None DRV_GMAC_Open() should have been called. Parameters Description hMac valid MAC handle...","GUID-A4D852FB-4A68-4096-8395-1AA3B2DC9FAA.html@@@1.2.1.23.3.11 TCPIP_TFTPS_HANDLE Type@@@typedef const void* TCPIP_TFTPS_HANDLE; Type: TCPIP_TFTPS_HANDLE A handle that a application needs to use when de-registering a notification handler. This handle can be used by the application after...","GUID-A4DC3D07-DDAD-4748-A855-304CA3439336.html@@@1.2.5.7.3 Library Interface@@@Name Description Client Level Functions DRV_ETHMAC_PIC32MACClose Closes a client instance of the PIC32 MAC Driver. DRV_ETHMAC_PIC32MACConfigGet Gets the current MAC driver configuration...","GUID-A55F1CC6-EB49-4F88-863C-2E7789CDC962.html@@@1.2.1.13.3.13 TCPIP_HTTP_NET_ConnectionCallbackPosGet Function@@@uint32_t TCPIP_HTTP_NET_ConnectionCallbackPosGet( TCPIP_HTTP_NET_CONN_HANDLE connHandle ); This function will return the current value of the clalback position indicator for the HTTP connection...","GUID-A5FF4033-A9DF-48AB-9B34-57BCD150BD19.html@@@1.2.5.9.3.1 DRV_MIIM_CALLBACK_HANDLE Type@@@typedef const void* DRV_MIIM_CALLBACK_HANDLE; Type: MIIM Callback Registration handle A handle that a client obtains when calling DRV_MIIM_RegisterCallback. It can be used to deregister the...","GUID-A649C295-8263-4543-9694-BC000C960293.html@@@1.2.1.2.3.15 EAI_BADFLAGS Macro@@@#define EAI_BADFLAGS -1 /* Invalid value for `ai_flags&apos; field. */ Invalid value for &apos;ai_flags&apos; field...","GUID-A66340B9-1452-42AC-A631-2F9EA573AD31.html@@@1.2.1.9.3.8 TCPIP_DDNS_ServiceSet Function@@@void TCPIP_DDNS_ServiceSet( DDNS_SERVICES svc ); This function selects a Dynamic DNS service based on parameters configured in ddnsServiceHosts and ddnsServicePorts. These arrays must match the...","GUID-A66BAE9B-C0F6-410E-B59B-790ABE49043A.html@@@1.2.1.12.2.20 TCPIP_HTTP_CurrentConnectionIndexGet Function@@@int TCPIP_HTTP_CurrentConnectionIndexGet( HTTP_CONN_HANDLE connHandle ); This function will return the index of the requested HTTP connection. None. Parameters Description connHandle The HTTP...","GUID-A6A76AE5-5C3B-4584-82E0-8F3AE37EBA55.html@@@1.2.4.3.3.4 TCPIP_ICMPV6_Flush Function@@@bool TCPIP_ICMPV6_Flush(IPV6_PACKET * pkt); true - if the packet was flushed false - if the packet was queued Transmit out a ICMPv6 packet. None. IPv6 and ICMPv6 are initialized. Parameters...","GUID-A75996C6-067E-4462-A86A-4EC05528DC77.html@@@1.2.6.1.1.3.4 TCPIP_EVENT Enumeration@@@typedef enum { TCPIP_EV_NONE = 0x0000, TCPIP_EV_RX_PKTPEND = 0x0001, TCPIP_EV_RX_OVFLOW = 0x0002, TCPIP_EV_RX_BUFNA = 0x0004, TCPIP_EV_RX_ACT = 0x0008, TCPIP_EV_RX_DONE = 0x0010, TCPIP_EV_RX_FWMARK =...","GUID-A75B09DD-709D-4B79-9757-6361C2F83560.html@@@1.2.3.2.3.14 TCPIP_UDP_Get Function@@@uint16_t TCPIP_UDP_Get(UDP_SOCKET hUDP, uint8_t * v); This function reads a single byte from the UDP socket, while decrementing the remaining RX buffer length. TCPIP_UDP_GetIsReady should be used...","GUID-A7616A65-D919-403D-B052-4EAE887FF5AF.html@@@1.2.3.2.3.20 TCPIP_UDP_OptionsGet Function@@@bool TCPIP_UDP_OptionsGet(UDP_SOCKET hUDP, UDP_SOCKET_OPTION option, void* optParam); true - Indicates success false - Indicates failure Various options can be retrieved at the socket level. This...","GUID-A76AA011-C019-4E45-91A3-3C3819F5680A.html@@@1.2.5.7.3.17 DRV_ETHMAC_PIC32MACReinitialize Function@@@void DRV_ETHMAC_PIC32MACReinitialize(SYS_MODULE_OBJ object, const SYS_MODULE_INIT * const init); None. This function supports re-initialization of the PIC32 Ethernet MAC (opposite of set up). This...","GUID-A7728F7D-46D9-4089-A9A8-3B446B322E63.html@@@1.2.1.13.3.28 TCPIP_HTTP_NET_ConnectionPeek Function@@@uint16_t TCPIP_HTTP_NET_ConnectionPeek( TCPIP_HTTP_NET_CONN_HANDLE connHandle, void * buffer, uint16_t size ); This function allows peeking into the connection buffer. The data will still be available...","GUID-A7ABF350-934E-4254-BAD6-FBA750E3EE54.html@@@1.2.1.10.3.17 TCPIP_FTPC_DeleteFile Function@@@TCPIP_FTPC_RETURN_TYPE TCPIP_FTPC_DeleteFile(TCPIP_FTPC_CONN_HANDLE_TYPE ftpcHandle, const char * pathname); TCPIP_FTPC_RET_OK - if successfully scheduled function TCPIP_FTPC_RET_BUSY - could not...","GUID-A7C34B62-ABEF-45C5-B779-AF2D81683D07.html@@@1.2.5.3.3.1 DRV_ENC28J60_CLIENT_INSTANCES_IDXx Macro@@@#define DRV_ENC28J60_CLIENT_INSTANCES_IDXx 1 ENC28J60 maximum number of clients For example, DRV_ENC28J60_CLIENT_INSTANCES_IDX0 selects the maximum number of clients the ENC28J60 driver can support at...","GUID-A7EAC349-CEFC-454D-93D4-1709EF01BF15.html@@@1.2.1.10.3.10 TCPIP_FTPC_DATA_CONN_TYPE Structure@@@typedef struct { bool ftpcIsPassiveMode; TCPIP_FTPC_TRANSFER_MODE_TYPE ftpcTransferMode; TCPIP_FTPC_DATA_REP_TYPE ftpcDataType; TCPIP_FTPC_DATA_STRUCT_TYPE ftpcDataStructure; IP_MULTI_ADDRESS...","GUID-A803C6A5-EE2D-445A-B1B2-A30DEEAB7D00.html@@@1.2.1.17.2.3 TCPIP_SMTP_Flush Function@@@void TCPIP_SMTP_Flush(); This function flushes the SMTP socket and forces all data to be sent. TCPIP_SMTP_UsageBegin() returned true on a previous call. None. This function should only be called...","GUID-A829F90A-B87E-4D7A-AF95-995663011C53.html@@@1.2.1.6.3.9 TCPIP_DHCPV6_HandlerRegister Function@@@TCPIP_DHCPV6_HANDLE TCPIP_DHCPV6_HandlerRegister( TCPIP_NET_HANDLE hNet, TCPIP_DHCPV6_EVENT_HANDLER handler, const void* hParam ); DHCPv6 event registration...","GUID-A83F474A-DE5B-4880-B658-1F57D6076DC3.html@@@1.2.5.2.24 TCPIP_MAC_LinkCheck Function@@@bool TCPIP_MAC_LinkCheck( DRV_HANDLE hMac ); This is a function that returns the current status of the link. The TCPIP_MAC_Initialize() function should have been called. TCPIP_MAC_Open() should have...","GUID-A87AA6B1-5247-4991-8A28-D960E97CCD32.html@@@1.2.5.4.3.7 DRV_ENCX24J600_EventMaskSet Function@@@bool DRV_ENCX24J600_EventMaskSet(DRV_HANDLE hMac, TCPIP_MAC_EVENT macEvents, bool enable); true - if the mask could be set false - if the mast could not be set ENCX24J600 Set Event Mask Sets the event...","GUID-A8906C8D-A608-4572-AE74-1E517DD2B0BE.html@@@1.2.5.9.3 Library Interface@@@Name Description Macros _DRV_MIIM_CONFIG_H This is macro _DRV_MIIM_CONFIG_H. _DRV_MIIM_H This is macro _DRV_MIIM_H. DRV_MIIM_CLIENT_OP_PROTECTION Enables/Disables Client Operation Protection feature...","GUID-A8B35265-E439-4CEB-94F0-55E2DAF9668D.html@@@1.2.6.1.1.3.98 TCPIP_STACK_NumberOfNetworksGet Function@@@int TCPIP_STACK_NumberOfNetworksGet(); This function returns the number of interfaces currently active in the TCP/IP stack. The TCP/IP stack should have been initialized by TCPIP_STACK_Initialize()...","GUID-A90536A8-B111-481A-9CAE-2D4C8CFB3D5E.html@@@1.2.3.2.3.7 TCPIP_UDP_COMMANDS Macro@@@#define TCPIP_UDP_COMMANDS 0 TCPIP UDP info commands Enables/Disables the UDP command feature. This setting will add a UDP &quot;info&quot; command to the TCP/IP command menu allowing a run time inspection of...","GUID-A93250CC-2629-4D29-8130-EC9504AF4917.html@@@1.2.1.2.3.39 IP_ADDR_ANY Macro@@@#define IP_ADDR_ANY 0x01000000u // IP Address for server binding IP address for server binding...","GUID-A94D80E9-1348-4545-9537-646C42EDC74A.html@@@1.2.1.2.3.81 SO_SNDTIMEO Macro@@@#define SO_SNDTIMEO 21 //Set the Send Timeout - Not yet supported Set the send timeout. Not yet supported...","GUID-A97488A2-3063-4B2C-98A3-085563D4CA3C.html@@@1.2.4.4.3.16 TCPIP_IGMP_Subscribe Function@@@TCPIP_IGMP_RESULT TCPIP_IGMP_Subscribe( UDP_SOCKET socket, TCPIP_NET_HANDLE hNet, IPV4_ADDR mcastAddress, TCPIP_IGMP_FILTER_TYPE filterMode, const IPV4_ADDR* sourceList, size_t* listSize ); This...","GUID-A9829294-E1D9-417B-BA30-4F96F1009538.html@@@1.2.1.10.3.35 TCPIP_FTPC_SetMode Function@@@TCPIP_FTPC_RETURN_TYPE TCPIP_FTPC_SetMode(TCPIP_FTPC_CONN_HANDLE_TYPE ftpcHandle, TCPIP_FTPC_TRANSFER_MODE_TYPE mode); TCPIP_FTPC_RET_OK - if successfully scheduled function TCPIP_FTPC_RET_BUSY...","GUID-A9CD3E3D-0BF0-4167-B5CF-DAF2B1C9577E.html@@@1.2.4.1.3.21 TCPIP_ARP_RESULT Enumeration@@@typedef enum { ARP_RES_OK = 0, ARP_RES_ENTRY_NEW, ARP_RES_ENTRY_SOLVED, ARP_RES_ENTRY_QUEUED, ARP_RES_ENTRY_EXIST, ARP_RES_PERM_QUOTA_EXCEED, ARP_RES_PROBE_OK, ARP_RES_NO_ENTRY = -1...","GUID-A9DBA4C5-DF77-4078-8485-62954C01DD24.html@@@1.2.5.9.2 MIIM Driver Configurations@@@MIIM Driver Specific User Configurations Maximum Number of Clients: MIIM number of clients This definition select the MIIM Maximum Number of Clients per instance. Notes: By default the 1st MIIM client...","GUID-A9EE533F-5EAF-4E72-93FB-1AE557FE2B9E.html@@@1.2.4.1.3.13 TCPIP_ARP_HANDLE Type@@@typedef const void* TCPIP_ARP_HANDLE; Type: TCPIP_ARP_HANDLE. A handle that a client needs to use when deregistering a notification handler. This handle can be used by the client after the event...","GUID-AA215625-E4A7-4921-8AF1-6B318699201A.html@@@1.2.6.1.1.3.39 TCPIP_STACK_EVENT_HANDLER Type@@@typedef void (* TCPIP_STACK_EVENT_HANDLER)(TCPIP_NET_HANDLE hNet, TCPIP_EVENT, const void* fParam); TCPIP event notification handler pointer. Pointer to a function that may be called from within an...","GUID-AA2B2D44-E7CB-4B29-BC69-AD6DD77EB809.html@@@1.2.1.19.3.33 TCPIP_SNMP_ReadCommunityGet Function@@@bool TCPIP_SNMP_ReadCommunityGet( int index, int len, uint8_t * dest ); This function is used to collect READ community string from the global community table with respect to the index value...","GUID-AA37C1CF-735E-41C1-99D3-ADDED9199035.html@@@1.2.2.1.3.22 NET_PRES_INST_DATA Structure@@@typedef struct { const struct _NET_PRES_TransportObject * pTransObject_ss; const struct _NET_PRES_TransportObject * pTransObject_sc; const struct _NET_PRES_TransportObject * pTransObject_ds; const...","GUID-AAA58362-D612-464F-940A-A03BDA302B48.html@@@1.2.1.7.3.28 TCPIP_DNS_HANDLE Type@@@typedef const void* TCPIP_DNS_HANDLE; Type: TCPIP_DNS_HANDLE. A handle that a application needs to use when deregistering a notification handler. This handle can be used by the application after the...","GUID-AAC41CD0-1737-4B46-BDDE-AB089B69ECAB.html@@@1.2.1.9.3.10 TCPIP_DDNS_UpdateForce Function@@@void TCPIP_DDNS_UpdateForce(); This function forces the DDNS Client to execute a full update immediately. Any error message is cleared, and the update will be executed whether the IP address has...","GUID-AAD576E7-85F8-4C15-88C1-266019B0D71B.html@@@1.2.4.1.3.6 TCPIP_ARP_EntryQuery Function@@@TCPIP_ARP_RESULT TCPIP_ARP_EntryQuery( TCPIP_NET_HANDLE hNet, size_t index, TCPIP_ARP_ENTRY_QUERY* pArpQuery ); This function can be used for displaying the cache contents. The ARP module should have...","GUID-AB42E2A0-98A7-4AC7-BCD8-4FEBAD6FD2FD.html@@@1.2.1.4.3.6 TCPIP_DHCPS_LEASE_ENTRY Structure@@@typedef struct { TCPIP_MAC_ADDR hwAdd; IPV4_ADDR ipAddress; uint32_t leaseTime; } TCPIP_DHCPS_LEASE_ENTRY; Structure: TCPIP_DHCPS_LEASE_ENTRY. DHCP server lease data. Members Description hwAdd Client...","GUID-AB48F72E-A95D-4BAB-9EB5-22E2A7B6DAFE.html@@@1.2.1.12.2.15 TCPIP_HTTP_CurrentConnectionDataBufferSizeGet Function@@@uint16_t TCPIP_HTTP_CurrentConnectionDataBufferSizeGet( HTTP_CONN_HANDLE connHandle ); This function returns the size of the HTTP connection internal data buffer. This buffer is created at the HTTP...","GUID-AB4B99E9-A0E7-437B-A009-10C66075F30C.html@@@1.2.3.1.3.45 TCPIP_TCP_SIGNAL_HANDLE Type@@@typedef const void* TCPIP_TCP_SIGNAL_HANDLE; Type: TCPIP_TCP_SIGNAL_HANDLE. A handle that a socket client can use after the signal handler has been registered...","GUID-AB645995-18DD-49C5-8A13-52F35B0D6E60.html@@@1.2.1.24.3.4 TCPIP_MDNS_ServiceUpdate Function@@@MDNSD_ERR_CODE TCPIP_MDNS_ServiceUpdate( TCPIP_NET_HANDLE netH, uint16_t port, const uint8_t * txt_record ); This function is used by the end-user application to update its service, which was...","GUID-AB9D49A8-5234-4C22-A9A7-A9FA8BF21F23.html@@@1.2.1.13.3.27 TCPIP_HTTP_NET_ConncetionNetHandle Function@@@TCPIP_NET_HANDLE TCPIP_HTTP_NET_ConnectionNetHandle( TCPIP_HTTP_NET_CONN_HANDLE connHandle ); This function returns the network handle over which the current HTTP connection communicates. connHandle...","GUID-ABA88D9B-9D58-4C7C-BB13-9E7CF60D028C.html@@@1.2.1.5.3.20 TCPIP_DHCPS_LeaseGetInfoById Function@@@TCPIP_DHCPS_RES TCPIP_DHCPS_LeaseGetInfoById(TCPIP_NET_HANDLE netH, const uint8_t* clientId, size_t idLen, TCPIP_DHCPS_LEASE_INFO* pLeaseInfo); Get the lease entry details for the requested client ID...","GUID-AC14B6B7-E080-427F-8265-8E58085BCD67.html@@@1.2.6.1.1.3.104 TCPIP_STACK_Task Function@@@void TCPIP_STACK_Task( SYS_MODULE_OBJ object ); TCP/IP stack execution state machine. Stack Finite-State Machine (FSM) is executed. The TCP/IP stack should have been initialized by...","GUID-AC2E9422-6951-4421-A4B2-E2560BBD2688.html@@@1.2.4.6.3.58 TCPIP_IPV6_Put Function@@@bool TCPIP_IPV6_Put( IPV6_PACKET * pkt, unsigned char v ); This function writes a character of data to a packet. TCPIP_IPV6_Initialize() is required. TCPIP_IPV6_InterfaceIsReady should be true...","GUID-AC567D86-BC0E-4E7F-B148-0685C3E92119.html@@@1.2.3.2.3.41 TCPIP_UDP_SocketInfoGet Function@@@bool TCPIP_UDP_SocketInfoGet(UDP_SOCKET hUDP, UDP_SOCKET_INFO* pInfo); true - if the call succeeded false - if no such socket or invalid pInfo This function will fill a user passed UDP_SOCKET_INFO...","GUID-AC7B0B1C-815C-406B-8997-8AAFF92AE6CE.html@@@1.2.1.3.3.18 TCPIP_DHCP_Request Function@@@bool TCPIP_DHCP_Request( TCPIP_NET_HANDLE hNet, IPV4_ADDR reqAddress ); If the DHCP client is not enabled on that interface, this call will first try to enable it. If this succeeds or the DHCP client...","GUID-AC8BD761-06A7-4A57-BD01-7E54E6AA9739.html@@@1.2.4.6.3.30 IPV6_TLV_UNREC_OPT_DISCARD_SILENT Macro@@@#define IPV6_TLV_UNREC_OPT_DISCARD_SILENT 0x01 IPv6 action code for the unrecognized option reaction to discard the packet silently...","GUID-ACB6878A-9028-4D7E-A354-7D97A8659D2B.html@@@1.2.5.2.12 TCPIP_MAC_EventPendingGet Function@@@TCPIP_MAC_EVENT TCPIP_MAC_EventPendingGet( DRV_HANDLE hMac ); This function returns the currently MAC pending events. Multiple events will be &quot;ORed&quot; together as they accumulate. MAC processing is...","GUID-ACBCD71A-FDEE-4549-8A29-F4983FD057FA.html@@@1.2.1.20.2 Network Time Protocol (SNTP) Configurations@@@SNTP Specific User Configurations NTP Server Name: The NTP Server to use These are normally available network time servers. The actual IP returned from the pool will vary every minute so as to spread...","GUID-ACE87F26-B6CF-4861-962D-FBCE273FBDDF.html@@@1.2.5.9.3.25 DRV_MIIM_Reinitialize Function@@@void DRV_MIIM_Reinitialize(SYS_MODULE_OBJ object, const SYS_MODULE_INIT * const init); None. This function reinitializes the driver and refreshes any associated hardware settings using the...","GUID-ACECEC62-5566-449B-A63D-70C15556BF2B.html@@@1.2.2.1.3.42 NET_PRES_SocketIsConnected Function@@@bool NET_PRES_SocketIsConnected(NET_PRES_SKT_HANDLE_T handle); This function determines whether a socket has an established connection to a remote node. This function calls directly to the transport...","GUID-AD5DAF5B-5EA9-4CA5-92A2-2AD3E1473A93.html@@@1.2.1.7.3.25 TCPIP_DNS_GetIPAddressesNumber Function@@@int TCPIP_DNS_GetIPAddressesNumber( const char* hostName, IP_ADDRESS_TYPE type ); This function returns the total count of IPv4 and/or IPv6 addresses that exist for a resolved host name...","GUID-AD6ED500-C4C5-4750-9EC0-188C0359646D.html@@@1.2.1.17.2.10 TCPIP_SMTP_UsageBegin Function@@@bool TCPIP_SMTP_UsageBegin(); Call this function before calling any other SMTP Client APIs. This function obtains a lock on the SMTP Client, which can only be used by one stack application at a time...","GUID-AD6F2159-B3A7-412E-A203-89F4E324037F.html@@@1.2.4.1.2 Address Resolution Protocol (ARP) Configurations@@@ARP Specific User Configurations Number of Cache Entries: Default number of entries per interface. Default value 5 Symbol TCPIP_ARP_CACHE_ENTRIES Enable ARP Commands: Enable the ARP TCP/IP Console...","GUID-AD92D49B-6FE0-4B29-9BE9-A77D7F7B3357.html@@@1.2.2.1.3.72 NET_PRES_TransPeek Type@@@typedef bool (* NET_PRES_TransPeek)(NET_PRES_SKT_HANDLE_T handle, uint8_t *vBuffer, uint16_t wLen, uint16_t wStart); true - Indicates success false - Indicates failure Transport Layer Peek Function...","GUID-ADA18ECF-6A56-41A9-B9CD-6F611DB55BA4.html@@@1.2.4.1.1 Abstraction Model@@@This module provides software abstraction of the ARP module existent in any TCP/IP Stack implementation. It removes the overhead of address resolution from all other modules in the stack. The ARP...","GUID-ADB87FB8-A110-467D-9863-27F5B113A7C2.html@@@1.2.1.7.3.17 TCPIP_DNS_ClientTask Function@@@void TCPIP_DNS_ClientTask(); This function performs DNS module tasks in the TCP/IP stack. The DNS module should have been initialized. None. None...","GUID-ADCA5B6A-2E7D-478D-9649-9337CB58837C.html@@@1.2.5.4.1 Abstraction Model@@@The ENCx24J600 Driver library has several different layers to it, as illustrated in the following figure. The interface layer has two main sections that are used the most often: The Tasks function...","GUID-ADDDC06C-ACF4-450E-ADC3-4359BE293DBD.html@@@1.2.1.12.2.11 TCPIP_HTTP_CurrentConnectionByteCountSet Function@@@void TCPIP_HTTP_CurrentConnectionByteCountSet( HTTP_CONN_HANDLE connHandle, uint32_t byteCount ); This function sets the current value of the counter showing the number of bytes available to be read...","GUID-AE3AD187-8B6D-4C12-95E4-57C2C14D5CF1.html@@@1.2.2.1.3.31 NET_PRES_SKT_PORT_T Type@@@typedef uint16_t NET_PRES_SKT_PORT_T; Net Presentation Port Type This data type sets the type for the presentation layer port. None...","GUID-AE6B35B3-8C2A-4FB7-BC76-38B4F9F3CBD5.html@@@1.2.1.1.3.4 TCPIP_ANNOUNCE_MESSAGE_CALLBACK Type@@@typedef void (* TCPIP_ANNOUNCE_MESSAGE_CALLBACK)(TCPIP_NET_HANDLE hNet, UDP_SOCKET s); Type: TCPIP_ANNOUNCE_MESSAGE_CALLBACK - Prototype of an announce callback function that can be registered by the...","GUID-AEA4FBB5-4047-4C09-BA5E-3A8632309804.html@@@1.2.5.3.3.6 DRV_ENC28J60_EventAcknowledge Function@@@bool DRV_ENC28J60_EventAcknowledge(DRV_HANDLE hMac, TCPIP_MAC_EVENT macEvents); true - if successful false - if not successful ENC28J60 Acknowledge Event This function acknowledges an event. The...","GUID-AF4E3FEB-EABB-4A99-AC18-6CD0BAAB7836.html@@@2.1.8 Interrupt Configuration@@@The NVIC (Nested Vectored Interrupt Controller) is the interrupt controller in SAM devices. For other devices, refer the interrupt section in device datasheet. Start NVIC Configuration from Plugins...","GUID-AF9C23DA-AF83-441B-8598-6D10D255B441.html@@@1.2.5.5.3.15 DRV_GMAC_Process Function@@@TCPIP_MAC_RES DRV_GMAC_Process(DRV_HANDLE hMac); TCPIP_MAC_RES_OK if all processing went on OK a TCPIP_MAC_RES error code if processing failed for some reason This is a function that allows for...","GUID-AFDF4187-9B0B-4C3C-9324-7C1F3B0301B7.html@@@1.2.2.1.3.36 NET_PRES_SocketDiscard Function@@@uint16_t NET_PRES_SocketDiscard(NET_PRES_SKT_HANDLE_T handle); The number of bytes that have been discarded from the RX buffer. This function calls the transport layer&apos;s discard function, if it...","GUID-AFECA098-E4EC-4847-AC64-921868BB48BA.html@@@1.2.2.1.3.4 NET_PRES_Deinitialize Function@@@void NET_PRES_Deinitialize(SYS_MODULE_OBJ obj); None. Network Presentation Layer Deinitialization This function deallocates any resources allocated by the initialization function. The layer must be...","GUID-B0009EA6-72FB-445C-A8EE-5129D9684EA5.html@@@1.2.5.2.3 TCPIP_MAC_ACTION Enumeration@@@typedef enum { TCPIP_MAC_ACTION_INIT, TCPIP_MAC_ACTION_REINIT, TCPIP_MAC_ACTION_DEINIT, TCPIP_MAC_ACTION_IF_UP, TCPIP_MAC_ACTION_IF_DOWN } TCPIP_MAC_ACTION; TCP/IP MAC Action. This enumeration defines...","GUID-B019DCF4-7677-4AA0-87CD-94705943F14A.html@@@1.2.1.13.3.15 TCPIP_HTTP_NET_ConnectionDataBufferGet Function@@@uint8_t* TCPIP_HTTP_NET_ConnectionDataBufferGet( TCPIP_HTTP_NET_CONN_HANDLE connHandle ); This function returns a pointer to the HTTP connection internal data buffer. This gives access to the...","GUID-B0247416-AB85-435D-AC83-FCBDE45B9863.html@@@1.2.5.6.3 Library Interface@@@Name Description Client Level Functions MAC_DRVR_Open Opens a client instance of the PIC32 MAC Driver. MAC_DRVR_Close Closes a client instance of the PIC32 MAC Driver. MAC_DRVR_Initialize Initializes...","GUID-B04887D6-7666-4F11-9279-9613EC0EF8F8.html@@@1.2.3.2.3.28 TCPIP_UDP_RemoteBind Function@@@bool TCPIP_UDP_RemoteBind(UDP_SOCKET hUDP, IP_ADDRESS_TYPE addType, UDP_PORT remotePort, IP_MULTI_ADDRESS* remoteAddress); true - Indicates success false - Indicates failure Sockets don&apos;t need...","GUID-B0554782-C0D1-4F61-9058-D2CD5A521A88.html@@@1.2.1.9.3.9 TCPIP_DDNS_Task Function@@@void TCPIP_DDNS_Task(); Performs DDNS module tasks in the TCP/IP stack. DDNS module should have been initialized. None...","GUID-B07757C8-E631-4EFD-80A7-F15B70C51B52.html@@@1.2.5.8.4.17 DRV_ETHPHY_LINK_STATUS Enumeration@@@typedef enum { DRV_ETHPHY_LINK_ST_DOWN, DRV_ETHPHY_LINK_ST_UP, DRV_ETHPHY_LINK_ST_LP_NEG_UNABLE, DRV_ETHPHY_LINK_ST_REMOTE_FAULT, DRV_ETHPHY_LINK_ST_PDF, DRV_ETHPHY_LINK_ST_LP_PAUSE...","GUID-B09E7918-C7C4-45CB-81E2-965D3294E95D.html@@@1.2.4.6.3.29 IPV6_TLV_UNREC_OPT_DISCARD_PP_NOT_MC Macro@@@#define IPV6_TLV_UNREC_OPT_DISCARD_PP_NOT_MC 0x03 IPv6 action code for the unrecognized option reaction to discard the packet and send an ICMP parameter problem message if the destination address...","GUID-B0B218E3-BE98-416E-B734-FC88BB176B7B.html@@@1.2.1.13.3.40 TCPIP_HTTP_NET_ConnectionStringFind Function@@@uint16_t TCPIP_HTTP_NET_ConnectionStringFind( TCPIP_HTTP_NET_CONN_HANDLE connHandle, const char* str, uint16_t startOffs, uint16_t searchLen ); This function searches for an ASCIIZ string in the RX...","GUID-B0DD6AAF-4EE9-4C7C-928F-DC7C132524C5.html@@@1.2.5.8.4.39 DRV_ETHPHY_VENDOR_MII_CONFIGURE Type@@@typedef DRV_ETHPHY_RESULT (* DRV_ETHPHY_VENDOR_MII_CONFIGURE)(const struct DRV_ETHPHY_OBJECT_BASE_TYPE* pBaseObj, DRV_HANDLE handle, DRV_ETHPHY_CONFIG_FLAGS cFlags); DRV_ETHPHY_RES_OK - if success...","GUID-B0FCC6E9-74D8-443B-8F61-7317500EEFF3.html@@@1.2.1.21.3 Library Interface@@@Name Description Macros TCPIP_TELNET_MAX_CONNECTIONS Maximum number of Telnet connections TCPIP_TELNET_LISTEN_PORT Port on which the telnet server is listening Default is TCPIP_TELNET_SERVER_PORT (23)...","GUID-B183E319-7BDA-4453-8677-7D5BD046FB86.html@@@1.2.6.1.1.3.85 TCPIP_STACK_NetIndexGet Function@@@int TCPIP_STACK_NetIndexGet( TCPIP_NET_HANDLE hNet ); This function converts a network interface handle to an interface number. The TCP/IP stack should have been initialized by...","GUID-B1B95E81-E580-41FE-97B9-4C5A476C550D.html@@@1.2.2.1.3.25 NET_PRES_SIGNAL_FUNCTION Type@@@typedef void (* NET_PRES_SIGNAL_FUNCTION)(NET_PRES_SKT_HANDLE_T handle, NET_PRES_SIGNAL_HANDLE hNet, uint16_t sigType, const void* param); Type: NET_PRES_SIGNAL_FUNCTION Prototype of a signal handler...","GUID-B1D8044C-E1A5-4436-8E8E-38D34314BE07.html@@@1.2.1.7.3.14 TCPIP_DNS_CLIENT_TASK_PROCESS_RATE Macro@@@#define TCPIP_DNS_CLIENT_TASK_PROCESS_RATE (200) DNS Client task processing rate, in milliseconds. The DNS Client module will process a timer event with this rate for processing its own state machine...","GUID-B2536AEB-7368-46C6-A52A-C7C64EFECAB8.html@@@1.2.5.8.4.33 DRV_ETHPHY_RestartNegotiation Function@@@DRV_ETHPHY_RESULT DRV_ETHPHY_RestartNegotiation(DRV_HANDLE handle, DRV_ETHPHY_INTERFACE_INDEX portIndex); DRV_ETHPHY_RES_PENDING operation has been scheduled successfully an DRV_ETHPHY_RESULT error...","GUID-B26527F2-8540-497D-8B40-6C8FC2F0C1E2.html@@@1.2.1.5.3.26 TCPIP_DHCPS_RES Enumeration@@@typedef enum { TCPIP_DHCPS_RES_OK = 0, // errors TCPIP_DHCPS_RES_NO_INIT_DATA = -1, TCPIP_DHCPS_RES_IF_CONFIG_ERR = -2, TCPIP_DHCPS_RES_NOT_AVAILABLE = -3, TCPIP_DHCPS_RES_IF_REPEAT_ERR = -4...","GUID-B28545BC-3FF4-43D7-B23D-C8333D64F141.html@@@1.2.1.10.3.7 TCPIP_FTPC_CTRL_CONN_TYPE Structure@@@typedef struct { IP_MULTI_ADDRESS* ftpcServerAddr; IP_ADDRESS_TYPE ftpcServerIpAddrType; uint16_t serverCtrlPort; } TCPIP_FTPC_CTRL_CONN_TYPE; Members Description IP_MULTI_ADDRESS* ftpcServerAddr...","GUID-B2C4C893-00FD-4B14-90F7-6AF0BDB868E7.html@@@1.2.1.22.3.9 TCPIP_TFTPC_MODULE_CONFIG Structure@@@typedef struct { const char* tftpc_interface; uint32_t tftpc_reply_timeout; } TCPIP_TFTPC_MODULE_CONFIG; Structure: TCPIP_TFTPC_MODULE_CONFIG. This structure is a placeholder for TFTP client module...","GUID-B2D4A164-D916-4147-97F9-E2FE88635D17.html@@@1.2.1.5.2 DHCP Server V2 Configurations@@@DHCP Server V2 Specific User Configurations Maximum Number Leases per Interface: Specifies the maximum number of leases that the DHCP server can support for an interface The actual number of leases...","GUID-B2DE133C-C875-40B3-BACE-9073D63DE82C.html@@@1.2.4.6.3.62 TCPIP_IPV6_SourceAddressSet Function@@@void TCPIP_IPV6_SourceAddressSet( IPV6_PACKET * p, const IPV6_ADDR * addr ); This function is used to configure the source address for a IPv6 packet. TCPIP_IPV6_Initialize() is required...","GUID-B2EAF484-B69D-4110-8E12-4F380BCF318B.html@@@1.2.5.6.3.18 MAC_DRVR_ParametersGet Function@@@TCPIP_MAC_RES MAC_DRVR_ParametersGet( DRV_HANDLE hMac, TCPIP_MAC_PARAMETERS * pMacParams ); TCPIP_MAC_RES_OK if pMacParams updated properly a TCPIP_MAC_RES error code if processing failed for some...","GUID-B2F1424A-5396-49FB-89C2-77A497BEF5ED.html@@@1.2.5.2.31 TCPIP_MAC_PACKET_RX_STAT_PIC32C Union@@@typedef union { uint32_t val; struct _TCPRxStatusBM { uint32_t len : 12; uint32_t offset : 2; uint32_t bSof : 1; uint32_t bEof : 1; uint32_t bCFI : 1; uint32_t vlanPriority : 3; uint32_t...","GUID-B320800F-2E77-4D0A-BABE-36E417E0EC71.html@@@1.2.6.1.1.3.30 TCPIP_MODULE_SIGNAL Enumeration@@@typedef enum { TCPIP_MODULE_SIGNAL_NONE = 0x0000, TCPIP_MODULE_SIGNAL_RX_PENDING = 0x0001, TCPIP_MODULE_SIGNAL_TMO = 0x0002, TCPIP_MODULE_SIGNAL_INTERFACE_CONFIG = 0x0004...","GUID-B37C4F4C-DC2D-48D9-9909-AACBA987B57A.html@@@1.2.6.1.1.3 Library Interface@@@Name Description Macros TCPIP_PACKET_LOG_ENABLE Enable the packet logger Simple module that logs the packets as they fly through the stack from creation until acknowledged Default is disabled...","GUID-B37F9580-01DC-4D9C-862B-D001EE912110.html@@@1.2.1.23.3.20 TCPIP_TFTPS_USER_NOTIFICATION Macro@@@#define TCPIP_TFTPS_USER_NOTIFICATION false allow TFTP Server user notification if enabled, the TCPIP_TFTPS_HandlerRegister/TCPIP_TFTPS_HandlerDeRegister functions exist and can be used...","GUID-B3A79EBF-406C-43C7-B0F2-D13F4E136FC4.html@@@1.2.1.10.3.30 TCPIP_FTPC_NameList Function@@@TCPIP_FTPC_RETURN_TYPE TCPIP_FTPC_NameList(TCPIP_FTPC_CONN_HANDLE_TYPE ftpcHandle, TCPIP_FTPC_DATA_CONN_TYPE * pftpcDataConn, TCPIP_FTPC_FILE_OPT_TYPE * pfileOptions...","GUID-B40EC5AF-8799-44D4-A699-8C43DFD55FD1.html@@@1.2.1.6.3.13 TCPIP_DHCPV6_IA_SUBSTATE Enumeration@@@typedef enum { TCPIP_DHCPV6_IA_SUBSTATE_START, TCPIP_DHCPV6_IA_SUBSTATE_IDELAY, TCPIP_DHCPV6_IA_SUBSTATE_TRANSMIT, TCPIP_DHCPV6_IA_SUBSTATE_WAIT_REPLY, TCPIP_DHCPV6_IA_SUBSTATE_NUMBER }...","GUID-B44DE12A-2EE8-40DC-AE07-B8614CEA9C7C.html@@@1.2.5.4.3.23 DRV_ENCX24J600_StackInitialize Function@@@C SYS_MODULE_OBJ DRV_ENCX24J600_StackInitialize(SYS_MODULE_INDEX index, const SYS_MODULE_INIT * const init); Returns a valid handle to the driver instance - If successful SYS_MODULE_OBJ_INVALID - If...","GUID-B451162D-7BB5-486E-90F9-214DC4278290.html@@@1.2.3.1.3.18 TCPIP_TCP_Connect Function@@@bool TCPIP_TCP_Connect( TCP_SOCKET hTCP ); This function will try to initiate a connection on a client socket that is not connected yet. The client socket should have been created with a call to...","GUID-B48BB488-DB27-4BC0-8217-2C2A2E9A2ACA.html@@@1.2.1.13.3.35 TCPIP_HTTP_NET_ConnectionReadBufferSize Function@@@uint16_t TCPIP_HTTP_NET_ConnectionReadBufferSize( TCPIP_HTTP_NET_CONN_HANDLE connHandle ); This function discards data from the connection RX buffer. connHandle - a valid HTTP connection. Parameters...","GUID-B495E926-CE82-4BA1-9D9F-C0072D02AC66.html@@@1.2.1.2.3.46 IP_TTL Macro@@@#define IP_TTL 2 //Time to Live - Not yet supported Time to live. Not yet supported...","GUID-B4BA04F1-F65B-4233-989A-6E18C8EC1CF1.html@@@1.2.4.5.3.25 TCPIP_IPV4_PacketOptionListGet Function@@@int TCPIP_IPV4_PacketOptionListGet( TCPIP_MAC_PACKET* pRxPkt, TCPIP_IPV4_OPTION_DCPT* pOptions, int nOptions ); This function is a helper to allow retrieving a list of options that are present in the...","GUID-B4C4F419-F2B6-48B7-8A05-DFA1051042AC.html@@@1.2.1.10.3.12 TCPIP_FTPC_DATA_EVENT_TYPE Enumeration@@@typedef enum { TCPIP_FTPC_DATA_RCV, TCPIP_FTPC_DATA_RCV_DONE, TCPIP_FTPC_DATA_SEND_READY, TCPIP_FTPC_DATA_SEND_DONE } TCPIP_FTPC_DATA_EVENT_TYPE; Members Description TCPIP_FTPC_DATA_RCV when data...","GUID-B4D41F33-BB5D-4A3F-A2FF-4AEA0FEB2372.html@@@1.2.6.1.1.3.18 TCPIP_Helper_ntohl Function@@@uint32_t TCPIP_Helper_ntohl( uint32_t nLong ); !defined(__mips__)...","GUID-B5AF6611-CC8F-4189-A4A7-1A1B3E1D3218.html@@@1.2.1.10.3.8 TCPIP_FTPC_CTRL_EVENT_CALLBACK_TYPE Type@@@typedef void (* TCPIP_FTPC_CTRL_EVENT_CALLBACK_TYPE)(TCPIP_FTPC_CONN_HANDLE_TYPE ftpcHandle, TCPIP_FTPC_CTRL_EVENT_TYPE ftpcEvent, TCPIP_FTPC_CMD cmd, char * ctrlbuff, uint16_t ctrllen); Type...","GUID-B5B66C8F-584E-4375-B51E-6EBEBAFAE841.html@@@1.2.1.8.3.2 _DNSS_CONFIG_H_ Macro@@@#define _DNSS_CONFIG_H_ This is macro _DNSS_CONFIG_H_...","GUID-B5E4619F-6A29-45B3-B455-EE7FDCF2F1E8.html@@@1.2.4.6.3.22 IPV6_SEGMENT_TYPE Enumeration@@@typedef enum { TYPE_IPV6_HEADER = 1u, TYPE_IPV6_EX_HEADER_HOP_BY_HOP_OPTIONS, TYPE_IPV6_EX_HEADER_DESTINATION_OPTIONS_1, TYPE_IPV6_EX_HEADER_ROUTING, TYPE_IPV6_EX_HEADER_FRAGMENT...","GUID-B5EBA2EA-F93C-474F-B24A-8FB0591EDE55.html@@@1.2.6.1.1.3.69 TCPIP_STACK_NetAddressDnsSecondSet Function@@@bool TCPIP_STACK_NetAddressDnsSecondSet( TCPIP_NET_HANDLE netH, IPV4_ADDR* ipAddress ); If interface sets the network interface secondary IPv4 DNS address. The TCPIP_STACK_Initialize() function must...","GUID-B5F52A34-E409-47D9-A8F9-BBF6FAAF4250.html@@@1.2.5.4.3.25 DRV_ENCX24J600_Status Function@@@SYS_STATUS DRV_ENCX24J600_Status(SYS_MODULE_OBJ obect); SYS_STATUS_ERROR - if an invalid handle has been passed in SYS_STATUS_UNINITIALIZED - if the driver has not completed initialization...","GUID-B615FBBA-3FC3-44D0-B68D-3089877C6720.html@@@1.2.1.12.2.14 TCPIP_HTTP_CurrentConnectionDataBufferGet Function@@@uint8_t* TCPIP_HTTP_CurrentConnectionDataBufferGet( HTTP_CONN_HANDLE connHandle ); This function returns a pointer to the HTTP connection internal data buffer. This gives access to the application to...","GUID-B6638438-1F4E-4F34-89AE-CE42F73FD44F.html@@@1.2.1.20.3.5 TCPIP_SNTP_EVENT_TIME_DATA Structure@@@typedef struct { TCPIP_SNTP_TIME_STAMP tStamp; uint64_t tStampTick; uint32_t tUnixSeconds; uint32_t tMilliseconds; uint32_t nUpdates; } TCPIP_SNTP_EVENT_TIME_DATA; Describes the structure of the data...","GUID-B665DD97-5496-4B2C-88C1-94075F030C7B.html@@@1.2.1.2.3.35 in6_addr Structure@@@struct in6_addr { union { uint8_t u6_addr8[16]; uint16_t u6_addr16[8]; uint32_t u6_addr32[4]; } in6_u; }; This is record in6_addr. Members Description u6_addr8[16] IP address in Bytes. u6_addr16[8] IP...","GUID-B69B050F-701C-41A0-9C16-E6DD1B667FBE.html@@@1.2.1.12.2.29 TCPIP_HTTP_CurrentConnectionUploadBufferCurrGet Function@@@const void* TCPIP_HTTP_CurrentConnectionUploadBufferCurrGet( HTTP_CONN_HANDLE connHandle ); This function will return the current address of current connection upload buffer. None. Parameters...","GUID-B6BBF09F-09E4-49A1-8E06-780429BBEF8D.html@@@1.2.4.6.3.49 TCPIP_IPV6_MODULE_CONFIG Structure@@@typedef struct { uint32_t rxfragmentBufSize; uint32_t fragmentPktRxTimeout; } TCPIP_IPV6_MODULE_CONFIG; Structure: TCPIP_IPV6_MODULE_CONFIG. IPv6 module runtime configuration and initialization...","GUID-B6CFE3F9-30F7-4067-B4FD-735253EC028E.html@@@1.2.1.23.3.6 TCPIP_TFTPS_Disable Function@@@bool TCPIP_TFTPS_Disable(TCPIP_NET_HANDLE hNet); true - if successful false - if unsuccessful This function disables the TFTP server for the specified interface. None. The TFTPS module should have...","GUID-B6FF9242-5A12-42D4-945D-E8B2E5B81A6A.html@@@1.2.5.8.4.2 DRV_ETHPHY_ClientOperationAbort Function@@@DRV_ETHPHY_RESULT DRV_ETHPHY_ClientOperationAbort(DRV_HANDLE handle); DRV_ETHPHY_RESULT value describing the current operation result: DRV_ETHPHY_RES_OK for success; operation has been aborted an...","GUID-B7229C8D-5E90-4347-96DA-B9DC7E138091.html@@@1.2.1.5.3.21 TCPIP_DHCPS_LeaseRemove Function@@@TCPIP_DHCPS_RES TCPIP_DHCPS_LeaseRemove(TCPIP_NET_HANDLE netH, uint16_t leaseIx, bool keepAddBusy); Remove one entry from the DHCP server DB This function is used to remove one entry from the DB of...","GUID-B723237E-484E-42E2-A7DA-CCAC4BBE507B.html@@@1.2.1.19.3.55 TCPIP_SNMPV3_EngineUserDataBaseGet Function@@@bool TCPIP_SNMPV3_EngineUserDataBaseGet( TCPIP_SNMPV3_USERDATABASECONFIG_TYPE userDataBaseType, uint8_t len, uint8_t userIndex, void * val ); This function is used to set SNMPv3 Engine data base...","GUID-B7731681-A36F-473A-AA6E-E35653662542.html@@@1.2.5.2.49 TCPIP_MAC_RX_STATISTICS Structure@@@typedef struct { int nRxOkPackets; int nRxPendBuffers; int nRxSchedBuffers; int nRxErrorPackets; int nRxFragmentErrors; int nRxBuffNotAvailable; } TCPIP_MAC_RX_STATISTICS; MAC RX Statistics Data. This...","GUID-B786C127-6FE1-408B-A56B-C61770D1B058.html@@@1.2.2.1.3.67 NET_PRES_TransDiscard Type@@@typedef uint16_t (* NET_PRES_TransDiscard)(NET_PRES_SKT_HANDLE_T handle); The number of bytes discarded. Transport Layer Discard Function Pointer Prototype This function is called by the presentation...","GUID-B78FDE15-1A3A-42F9-8937-4C7FA5E2D0A0.html@@@1.2.1.12.2.17 TCPIP_HTTP_CurrentConnectionHandleGet Function@@@HTTP_CONN_HANDLE TCPIP_HTTP_CurrentConnectionHandleGet( int connIx ); This function will return the connection handle of the requested HTTP connection index. None. Parameters Description connIx The...","GUID-B7C5B153-34DD-4F63-9D4F-26DA3D8C96C1.html@@@1.2.5.8.4.25 DRV_ETHPHY_OBJECT_BASE Structure@@@typedef struct DRV_ETHPHY_OBJECT_BASE_TYPE { } DRV_ETHPHY_OBJECT_BASE; Ethernet PHY Driver Base Object This data structure identifies the required interface of the Ethernet PHY driver. Any dynamic PHY...","GUID-B7D9F946-C7E1-4054-B8FF-30934B80350E.html@@@1.2.6.1.1.3.65 TCPIP_STACK_NetAddressBcast Function@@@uint32_t TCPIP_STACK_NetAddressBcast( TCPIP_NET_HANDLE netH ); The function returns the network interface broadcast address. The interface should be enabled for this function to work. The...","GUID-B809DB24-044F-4E28-A7B5-594461FB06EE.html@@@1.2.2.1.3.30 NET_PRES_SKT_OPTION_TYPE Enumeration@@@typedef enum { NET_PRES_SKT_OPT_UNKNOWN } NET_PRES_SKT_OPTION_TYPE; Enumeration: NET_PRES_SKT_OPTION_TYPE Enumeration describing all the possible NET_PRES option types None...","GUID-B850CFAA-BB01-48D4-AED8-8DC14C64DB7C.html@@@1.2.1.19.3.13 SNMP_VAL Union@@@typedef union { uint32_t dword; uint16_t word; uint8_t byte; uint8_t v[sizeof(uint32_t)]; } SNMP_VAL; Union: SNMP_VAL. SNMP agent processes different variable types. None...","GUID-B8D82C6A-230F-4068-8959-0393022E26DF.html@@@1.2.5.8.3 Ethernet PHY Driver Configurations@@@PHY Driver Specific User Configurations PHY Address: The address of this PHY on the MIIM bus Default value: 0 Symbol TCPIP_INTMAC_PHY_ADDRESS Use a Function to be called at PHY Reset: Use a callback...","GUID-B8F99ECD-7F8D-4D3F-84DF-6286DEBC968B.html@@@1.2.6.1.1.3.57 TCPIP_STACK_HEAP_USAGE Enumeration@@@typedef enum { TCPIP_STACK_HEAP_USE_DEFAULT = 0x00, TCPIP_STACK_HEAP_USE_GENERIC = 0x01, TCPIP_STACK_HEAP_USE_PACKET = 0x02, TCPIP_STACK_HEAP_USE_SOCKET_TCP = 0x04, TCPIP_STACK_HEAP_USE_SOCKET_UDP =...","GUID-B8FDDB51-973C-4C74-8ACA-C6249AC9EE65.html@@@1.2.4.6.3.54 TCPIP_IPV6_PacketHandlerDeregister Function@@@bool TCPIP_IPV6_PacketHandlerDeregister( TCPIP_IPV6_PROCESS_HANDLE pktHandle ); This function removes a packet processing handler. IPv6 properly initialized. Parameters Description pktHandle TCPIP...","GUID-B936FE71-BC8A-4085-A15E-DE30F33EAB1A.html@@@1.2.1.19.3.3 SNMP_GENERIC_TRAP_NOTIFICATION_TYPE Enumeration@@@typedef enum { COLD_START = 0x0, WARM_START = 0x1, LINK_DOWN = 0x2, LINK_UP = 0x3, AUTH_FAILURE = 0x4, EGP_NEIGHBOR_LOSS = 0x5, ENTERPRISE_SPECIFIC = 0x6 } SNMP_GENERIC_TRAP_NOTIFICATION_TYPE...","GUID-B9758F33-8EC6-4BE2-917F-02B470CDF54F.html@@@1.2.3.1.3.20 TCPIP_TCP_Disconnect Function@@@bool TCPIP_TCP_Disconnect( TCP_SOCKET hTCP ); This function closes the TX side of a connection by sending a FIN (if currently connected) to the remote node of the connection. If the socket has the...","GUID-B97A78AF-FD36-4D79-BF47-F2AE22902F8A.html@@@1.2.1.19.3.37 TCPIP_SNMP_SocketIDGet Function@@@void TCPIP_SNMP_SocketIDGet( UDP_SOCKET * socket ); This function is used to get trap client socket ID for both IPv4 and IPv6 receiver Address. TCPIP_SNMP_Initialize() is already called. Parameters...","GUID-B989C6AC-0744-4F10-8190-825D83D1B360.html@@@1.2.5.10.3.6 PPP_EVENT_HANDLE Type@@@typedef const void* PPP_EVENT_HANDLE; A handle that a client can use after the PPP event handler has been registered...","GUID-B9C2FD26-9793-4F5D-AC70-6D230309EFD0.html@@@1.2.5.2.28 TCPIP_MAC_PACKET_ACK_FUNC Type@@@typedef bool (* TCPIP_MAC_PACKET_ACK_FUNC)(TCPIP_MAC_PACKET* pkt, const void* param); MAC Acknowledge Function. This is the prototype of the function that the MAC calls once the TX/RX packet...","GUID-BA4A38ED-3292-4BDF-9F85-90792F15E9B8.html@@@1.2.1.20.3.9 TCPIP_SNTP_LastErrorGet Function@@@TCPIP_SNTP_RESULT TCPIP_SNTP_LastErrorGet(); This function returns the last NTP error code and clears the current error code. The TCP/IP Stack should have been inititialized. The last error code...","GUID-BA573797-42BC-4075-9DE4-03EF1D9CA99D.html@@@1.2.1.10.3.20 TCPIP_FTPC_FILE_OPT_TYPE Structure@@@typedef struct { const char * serverPathName; const char * clientPathName; bool store_unique; } TCPIP_FTPC_FILE_OPT_TYPE; Members Description const char * serverPathName; pathname/filename to...","GUID-BA8B0B38-6E80-458D-9ACB-50C5273F3B2B.html@@@1.2.5.6.2 SAM9x60 EMAC (EMAC) Configurations@@@EMAC Specific User Configurations MAC Base Address: Selected EMAC peripheral base address Default value: EMACx_BASE_ADDRESS Symbol MAC_BASE_ADDRESS Default Network MAC Driver: Name of the MAC driver...","GUID-BA8E4747-D164-45A3-9E11-9BB8694C4576.html@@@1.2.4.6.3.48 TCPIP_IPV6_MaxDatagramDataSizeGet Function@@@int TCPIP_IPV6_MaxDatagramDataSizeGet( TCPIP_NET_HANDLE netH ); This function is a helper to allow retrieving the MDDS on the specified interface. TCPIP_IPV6_Initialize() should be called...","GUID-BAB3F33C-010D-4328-836A-D7A6955CD441.html@@@1.2.3.2.3.19 TCPIP_UDP_MODULE_CONFIG Structure@@@typedef struct { uint16_t nSockets; uint16_t sktTxBuffSize; uint16_t poolBuffers; uint16_t poolBufferSize; } TCPIP_UDP_MODULE_CONFIG; Members Description uint16_t nSockets; number of sockets to be...","GUID-BB01ECB5-84DA-4275-B40D-DAC07587BA22.html@@@1.2.5.9.3.23 DRV_MIIM_Read Function@@@DRV_MIIM_OPERATION_HANDLE DRV_MIIM_Read(DRV_HANDLE handle, unsigned int rIx, unsigned int phyAdd, DRV_MIIM_OPERATION_FLAGS opFlags, DRV_MIIM_RESULT* pOpResult); A not NULL DRV_MIIM_OPERATION_HANDLE if...","GUID-BB159738-CAC4-4016-BA1F-EA0BC67E6DD7.html@@@2.1.12 Build and Program@@@The demo project will be compiled and programmed to the SAME70 development board. Build the Application. Open the project Properties by Right Clicking on the project name...","GUID-BB4AAF17-373C-48C5-88D6-C15D9E926EBE.html@@@1.2.5.5.3.17 DRV_GMAC_Reinitialize Function@@@void DRV_GMAC_Reinitialize(SYS_MODULE_OBJ object, const SYS_MODULE_INIT * const init); None. This function supports re-initialization of the PIC32 Ethernet MAC (opposite of set up). This function is...","GUID-BB9263C3-5CB5-429E-96AE-4739055A83EE.html@@@1.2.6.1.1.1 How the Library Works@@@The Manager module of the TCP/IP stack is the central module in the stack. It is this module that allows the client to configure and initialize the stack and also to get current status and parameters...","GUID-BB9A0D7A-5766-47C0-8A90-0915F9673A3D.html@@@1.2.5.2.18 TCPIP_MAC_HEAP_HANDLE Type@@@typedef const void* TCPIP_MAC_HEAP_HANDLE; Handle to a heap. This is the handle that&apos;s required for accessing memory allocation functions. None...","GUID-BBC4E95F-45E6-4D2A-9D01-67BB71ACABA2.html@@@1.2.1.17.2.4 TCPIP_SMTP_IsBusy Function@@@bool TCPIP_SMTP_IsBusy(); Call this function to determine if the SMTP client is busy performing background tasks. This function should be called after any call to TCPIP_SMTP_MailSend()...","GUID-BC874760-4FE7-4B02-80FC-AAFC15D4CE0B.html@@@1.2.3.2.3.25 TCPIP_UDP_PROCESS_HANDLE Type@@@typedef const void* TCPIP_UDP_PROCESS_HANDLE; Type: TCPIP_UDP_PROCESS_HANDLE Definition of an packet processing handle used for packet processing registration by the UDP clients...","GUID-BC88FD8C-4760-41FF-8905-F8710FFAC2FB.html@@@1.2.1.2.3.45 IP_TOS Macro@@@#define IP_TOS 1 //Type of Service - Not yet supported Type of service. Not yet supported...","GUID-BC8B9023-E991-4837-87BE-790B9EFA8D2D.html@@@1.2.4.2.3.9 TCPIP_ICMP_EchoRequestCancel Function@@@ICMP_ECHO_RESULT TCPIP_ICMP_EchoRequestCancel( TCPIP_ICMP_REQUEST_HANDLE icmpHandle ); This function allows a stack client to cancel a pending ICMP echo request. The request should have been...","GUID-BC9D600E-E3DA-4EF2-BF9F-24D088A072E2.html@@@1.2.3.2.3.55 UDP_OPTION_MULTICAST_DATA Structure@@@typedef struct { UDP_MULTICAST_FLAGS flagsMask; UDP_MULTICAST_FLAGS flagsValue; } UDP_OPTION_MULTICAST_DATA; Members Description UDP_MULTICAST_FLAGS flagsMask; mask of flags to be touched (changed) by...","GUID-BCFFB578-25A1-4639-90F3-9500380B13A1.html@@@1.2.1.19.3.54 TCPIP_SNMP_WriteCommunitySet Function@@@bool TCPIP_SNMP_WriteCommunitySet( int index, int len, uint8_t * src ); This function is used to collect WRITE community string from user and set the community table with respect to the index value...","GUID-BD005CCF-A9AE-427D-B667-4FC234BE78A2.html@@@1.2.5.7.3.11 DRV_ETHMAC_PIC32MACPacketRx Function@@@TCPIP_MAC_PACKET* DRV_ETHMAC_PIC32MACPacketRx(DRV_HANDLE hMac, TCPIP_MAC_RES* pRes, const TCPIP_MAC_PACKET_RX_STAT** ppPktStat); a valid pointer to an available RX packet 0 if no packet...","GUID-BD267020-02EC-409E-87A1-1698991A5E6C.html@@@1.2.1.2.3.99 TCPIP_BSD_Socket Function@@@int TCPIP_BSD_Socket( SOCKET s ); The function returns the native socket number associated with the BSD socket. Using this call the caller can switch to the native TCP/IP API. The socket() function...","GUID-BD72E118-CD30-4DC9-B225-7D7070380635.html@@@1.2.4.1.3.17 TCPIP_ARP_MODULE_CONFIG Structure@@@typedef struct { size_t cacheEntries; bool deleteOld; int entrySolvedTmo; int entryPendingTmo; int entryRetryTmo; int permQuota; int purgeThres; int purgeQuanta; int retries; int gratProbeCount; }...","GUID-BD9755D4-1089-4F9B-9EDC-84CFFD899191.html@@@1.2.1.12.2.27 TCPIP_HTTP_CurrentConnectionStatusGet Function@@@HTTP_STATUS TCPIP_HTTP_CurrentConnectionStatusGet( HTTP_CONN_HANDLE connHandle ); This function returns the current HTTP status of the selected HTTP connection. None. Parameters Description connHandle...","GUID-BDAD3375-4B9E-475C-A7BE-E51C89360AC8.html@@@1.2.1.13.3.44 TCPIP_HTTP_NET_DynamicWrite Function@@@bool TCPIP_HTTP_NET_DynamicWrite( const TCPIP_HTTP_DYN_VAR_DCPT* varDcpt, const void * buffer, uint16_t size, bool needAck ); This function takes a buffer and sends it over the HTTP connection as part...","GUID-BDCAEFFB-3D1B-44A3-B656-D4A18383E66C.html@@@1.2.1.19.3.38 TCPIP_SNMP_SocketIDSet Function@@@void TCPIP_SNMP_SocketIDSet( UDP_SOCKET socket ); This function is used to update socket value of SNMP trap global structure. TCPIP_SNMP_Initialize() is already called. None. None...","GUID-BE0C1081-916F-4859-90D0-356F5D42E3EE.html@@@1.2.4.6.3.46 TCPIP_IPV6_InterfaceIsReady Function@@@bool TCPIP_IPV6_InterfaceIsReady( TCPIP_NET_HANDLE netH ); Returns the current state of the IPv6 interface (i.e., determines if an interface is ready for IPv6 transactions). None. Parameters...","GUID-BEC868B6-5E68-43CA-B0BD-06EA115D4339.html@@@1.2.1.24.3.7 TCPIP_ZCLL_Enable Function@@@bool TCPIP_ZCLL_Enable( TCPIP_NET_HANDLE hNet ); This API is used by end-user application to enable zero configuration on a specific interface. The TCP/IP stack must be initialized before calling this...","GUID-BECC9C70-ED5D-4797-8467-D87ECDB29B9D.html@@@1.2.1.18.3.19 TCPIP_SMTPC_Task Function@@@void TCPIP_SMTPC_Task(); This function performs SMTPC module tasks in the TCP/IP stack. SMTPC module should have been initialized. None. None...","GUID-BEDE30B8-9E04-45B0-81BF-DFFAF8AE22E9.html@@@1.2.1.2.3.96 SOL_SOCKET Macro@@@#define SOL_SOCKET 1 // Indicates socket level options Indicates socket level options...","GUID-BF0CB5D1-6D57-4E3A-9F66-1C3E4BD80FA8.html@@@1.2.1.19.3.36 TCPIP_SNMP_SendFailureTrap Function@@@void TCPIP_SNMP_SendFailureTrap(); This function is used to send trap notification to previously configured IP address if trap notification is enabled. There are different trap notification code. The...","GUID-BF5EE03E-E65C-484F-8187-39BF7D55A4B3.html@@@1.2.5.6.3.11 MAC_DRVR_EventPendingGet Function@@@TCPIP_MAC_EVENT MAC_DRVR_EventPendingGet( DRV_HANDLE hMac ); The currently stack pending events. This function returns the currently pending Ethernet MAC events. Multiple events will be ORed together...","GUID-BF936DCC-3D24-4119-A9C0-64BCB4DCA45E.html@@@1.2.5.2.44 TCPIP_MAC_PROCESS_FLAGS Enumeration@@@typedef enum { TCPIP_MAC_PROCESS_FLAG_NONE = 0x0000, TCPIP_MAC_PROCESS_FLAG_RX = 0x0001, TCPIP_MAC_PROCESS_FLAG_TX = 0x0002, TCPIP_MAC_PROCESS_FLAG_ANY = 0x0100 } TCPIP_MAC_PROCESS_FLAGS; MAC Process...","GUID-BF9C82C4-9CAB-4E2B-971A-737BFB1E43B1.html@@@1.2.4.1.3.20 TCPIP_ARP_Resolve Function@@@TCPIP_ARP_RESULT TCPIP_ARP_Resolve( TCPIP_NET_HANDLE hNet, IPV4_ADDR* IPAddr ); This function transmits and ARP request to determine the hardware address of a given IP address. Upon the address...","GUID-BFE1CE87-C399-4CF9-A34B-6C31579A4848.html@@@1.2.4.4.2 Internet Management Protocol (IGMP) Configurations@@@IGMP Specific User Configurations Number of IGMP Interfaces: The maximum number of interfaces that support IGMP Should be &lt;= interfaces that are present at the stack initialization Default value: 1...","GUID-C0360366-50E8-4421-B1F3-A8D7A3FC81E2.html@@@1.2.2.1.3.13 NET_PRES_EncProviderOutputSize Type@@@typedef int32_t (* NET_PRES_EncProviderOutputSize)(void * providerData, int32_t inSize); Upon success, the requested size will be returned. Upon error, 0 is returned: if the input size is greater than...","GUID-C036B76E-27A7-4ECC-B7AF-A70B38C64E58.html@@@1.2.5.8.4.18 DRV_ETHPHY_LinkStatusGet Function@@@DRV_ETHPHY_RESULT DRV_ETHPHY_LinkStatusGet(DRV_HANDLE handle, DRV_ETHPHY_INTERFACE_INDEX portIndex, DRV_ETHPHY_LINK_STATUS* pLinkStat, bool refresh); DRV_ETHPHY_RES_PENDING for ongoing, in progress...","GUID-C044EA98-7B3B-4398-B958-889287333022.html@@@1.2.1.19.3.23 TCPIP_SNMP_COMMUNITY_CONFIG Structure@@@typedef struct { const char * communityName; } TCPIP_SNMP_COMMUNITY_CONFIG; Structure: TCPIP_SNMP_COMMUNITY_CONFIG This structure is used to configure community details during run-time. None...","GUID-C06046DF-729E-4D4F-9E86-FB915B181195.html@@@1.2.1.8.3.1 __DNSS_H Macro@@@#define __DNSS_H This is macro __DNSS_H...","GUID-C0A58DE7-266B-456F-A946-2A0B48CC0E00.html@@@1.2.1.18.3.4 TCPIP_SMTPC_ATTACH_TYPE Enumeration@@@typedef enum { TCPIP_SMTPC_ATTACH_TYPE_UNKNOWN = 0x0000, TCPIP_SMTPC_ATTACH_TYPE_APPLICATION = 0x0001, TCPIP_SMTPC_ATTACH_TYPE_TEXT = 0x0002, TCPIP_SMTPC_ATTACH_TYPE_INLINE = 0x8000 }...","GUID-C0C0BEED-30C2-48F5-A0E9-1FD47DC8186C.html@@@1.2.1.3.3.10 TCPIP_DHCP_INFO Structure@@@typedef struct { TCPIP_DHCP_STATUS status; uint32_t dhcpTime; uint32_t leaseStartTime; uint32_t leaseDuration; uint32_t renewTime; uint32_t rebindTime; IPV4_ADDR dhcpAddress; IPV4_ADDR subnetMask...","GUID-C0D40AEB-10C7-401C-AFB5-B8086E0D4BBF.html@@@1.2.1.5.3.24 TCPIP_DHCPS_MODULE_CONFIG Structure@@@typedef struct { const TCPIP_DHCPS_INTERFACE_CONFIG* pIfConfig; uint16_t nConfigs; uint8_t nProbes; uint8_t conflictAttempts; } TCPIP_DHCPS_MODULE_CONFIG; DHCP Server module runtime and initialization...","GUID-C111CBBC-803F-4AC7-8DF9-38CA67D91E57.html@@@1.2.1.3.2 Dynamic Host Configuration Protocol (DCHP) Configurations@@@DCHP Client Specific User Configurations DHCP Request Time-out (in sec): Defines how long to wait before a DHCP lease is acquired when the DHCP module is enabled Value is in seconds Default value: 10...","GUID-C14D5251-C0EE-4297-B04D-039433410F47.html@@@1.2.5.9.3.31 DRV_MIIM_Write Function@@@DRV_MIIM_OPERATION_HANDLE DRV_MIIM_Write(DRV_HANDLE handle, unsigned int rIx, unsigned int phyAdd, uint16_t wData, DRV_MIIM_OPERATION_FLAGS opFlags, DRV_MIIM_RESULT* pOpResult); A not NULL...","GUID-C192D8F2-C86F-4CFE-AFF7-FB63CBB34A78.html@@@1.2.6.1.1.3.71 TCPIP_STACK_NetAddressGatewaySet Function@@@bool TCPIP_STACK_NetAddressGatewaySet( TCPIP_NET_HANDLE netH, IPV4_ADDR* ipAddress ); This function sets the network interface IPv4 gateway address. The TCPIP_STACK_Initialize() function must have...","GUID-C192E44D-BC57-44B0-A3C2-5369D450349E.html@@@1.2.1.2.3.62 NO_DATA Macro@@@#define NO_DATA 4 // Valid name, no data record of requested type Valid name, no data record of requested type...","GUID-C20B6A77-95EC-4BEB-841A-2766919A70AC.html@@@1.2.3.1.1 Abstraction Model@@@This module provides software abstraction of the TCP module existent in any TCP/IP Stack implementation. How the Library Works Connections made over TCP guarantee data transfer at the expense of...","GUID-C22ADF63-1E80-4E6E-8566-7F263E5CA8A3.html@@@1.2.1.13.3.21 TCPIP_HTTP_NET_ConnectionHandleGet Function@@@TCPIP_HTTP_NET_CONN_HANDLE TCPIP_HTTP_NET_ConnectionHandleGet( int connIx ); This function will return the connection handle of the requested HTTP connection index. None. Parameters Description connIx...","GUID-C23CA7A2-1B83-478C-B581-9D989DAD0816.html@@@1.2.4.6.3.32 IPV6_ULA_FLAGS Enumeration@@@typedef enum { IPV6_ULA_FLAG_NTPV4 = 0x01, IPV6_ULA_FLAG_GENERATE_ONLY = 0x02, IPV6_ULA_FLAG_SKIP_DAD = 0x04 } IPV6_ULA_FLAGS; Enumeration: IPV6_ULA_FLAGS. This enumeration provides a list of possible...","GUID-C23F6D57-306D-4C84-B680-871C25109475.html@@@1.2.1.1.1 Abstraction Model@@@Discovering the Board The Announce module provides an easy way to determine useful parameters for your TCP/IP node\u2019s interfaces. This module works in conjunction with the TCP/IP Discoverer personal...","GUID-C26A1C84-59C1-434B-AB56-3FF3DE15FA3F.html@@@1.2.5.2.62 TCPIP_MODULE_MAC_PIC32C_CONFIG Structure@@@typedef struct { TCPIP_MAC_ADDR macAddress; TCPIP_MODULE_GMAC_QUEUE_CONFIG gmac_queue_config[DRV_GMAC_NUMBER_OF_QUEUES]; uint16_t linkInitDelay; TCPIP_ETH_OPEN_FLAGS ethFlags; uintptr_t ethModuleId...","GUID-C2A77639-820F-46A5-A78D-484811F750CE.html@@@1.2.1.10.3.26 TCPIP_FTPC_Logout Function@@@TCPIP_FTPC_RETURN_TYPE TCPIP_FTPC_Logout(TCPIP_FTPC_CONN_HANDLE_TYPE ftpcHandle); TCPIP_FTPC_RET_OK - if successfully scheduled function TCPIP_FTPC_RET_BUSY - could not schedule function as FTP Client...","GUID-C2B672F3-CF8F-44EB-9942-706F420D5CC2.html@@@1.2.4.4.3.19 TCPIP_IGMP_Unsubscribe Function@@@TCPIP_IGMP_RESULT TCPIP_IGMP_Unsubscribe( UDP_SOCKET socket, TCPIP_NET_HANDLE hNet, IPV4_ADDR mcastAddress, const IPV4_ADDR* sourceList, size_t* listSize ); This function removes the subscription of a...","GUID-C2BCE051-E53A-43C0-9C4D-B27359C79AA0.html@@@1.2.1.2.3.68 setsockopt Function@@@int setsockopt( SOCKET s, uint32_t level, uint32_t option_name, const uint8_t * option_value, uint32_t option_length ); Various options can be set at the socket level. This function provides...","GUID-C2EA1D23-D9AF-49CB-85C6-1A4206586850.html@@@2.1.4 TCP/IP Configuration@@@Start TCP/IP Configuration from Plugins drop-down menu TCP/IP Configuration starts with empty Overview window Click Application in TCP/IP Layers on the left side pane Add DHCP CLIENT by drag and drop...","GUID-C3313F6B-E4CF-45D1-B332-0ABB05837C39.html@@@1.2.5.7.3.8 DRV_ETHMAC_PIC32MACInitialize Function@@@C SYS_MODULE_OBJ DRV_ETHMAC_PIC32MACInitialize(const SYS_MODULE_INDEX index, const SYS_MODULE_INIT * const init); a valid handle to a driver object, if successful. SYS_MODULE_OBJ_INVALID if...","GUID-C3332C0B-3712-4AA4-ABCD-74CB266FEDF1.html@@@1.2.6 Basic Configuration Layer@@@The basic configurations for the working of MPLAB\u00AE Harmony TCP/IP Stack are part of this layer...","GUID-C3415D33-F49B-4FAE-8D75-AD7F15A0B60C.html@@@1.2.5.2.39 TCPIP_MAC_PKT_AllocFDbg Type@@@typedef TCPIP_MAC_PACKET* (* TCPIP_MAC_PKT_AllocFDbg)(uint16_t pktLen, uint16_t segLoadLen, TCPIP_MAC_PACKET_FLAGS flags, int moduleId); This is type TCPIP_MAC_PKT_AllocFDbg...","GUID-C341DC5D-0DD5-40D1-B8C1-3DAB33D15327.html@@@1.2.1.13.3.36 TCPIP_HTTP_NET_ConnectionReadIsReady Function@@@uint16_t TCPIP_HTTP_NET_ConnectionReadIsReady( TCPIP_HTTP_NET_CONN_HANDLE connHandle ); This function determines how many bytes can be read from the connection RX buffer. connHandle - a valid HTTP...","GUID-C3770C12-D928-4ACF-97E7-B80D6EB08DCE.html@@@1.2.1.7.3.37 TCPIP_DNS_RESOLVE_TYPE Enumeration@@@typedef enum { TCPIP_DNS_TYPE_A = 1, TCPIP_DNS_TYPE_MX = 15, TCPIP_DNS_TYPE_AAAA = 28u, TCPIP_DNS_TYPE_ANY = 0xff } TCPIP_DNS_RESOLVE_TYPE; Enumeration: TCPIP_DNS_RESOLVE_TYPE. This enumeration lists...","GUID-C3A94F5C-9DFC-4C2E-9F41-F1A449C3BF71.html@@@1.2.1.19.3.16 SNMPV3_PRIV_PROT_TYPE Enumeration@@@typedef enum { SNMPV3_DES_PRIV = 0x0, SNMPV3_AES_PRIV, SNMPV3_NO_PRIV } SNMPV3_PRIV_PROT_TYPE; Enumeration: SNMPV3_PRIV_PROT_TYPE. These below privacy types are supported by the SNMPv3 USM model for...","GUID-C3D5ADDA-C160-4FA9-A43C-02EC4D2B1F17.html@@@1.2.5.2.37 TCPIP_MAC_PKT_AckF Type@@@typedef void (* TCPIP_MAC_PKT_AckF)(TCPIP_MAC_PACKET* pPkt, TCPIP_MAC_PKT_ACK_RES ackRes, int moduleId); Packet Acknowledgment Function: typedef void (*TCPIP_MAC_PKT_AckF)(TCPIP_MAC_PACKET* pPkt...","GUID-C423806D-7DF6-4DF9-A52B-549A08C64B34.html@@@1.2.5.9.3.13 DRV_MIIM_INSTANCE_CLIENTS Macro@@@#define DRV_MIIM_INSTANCE_CLIENTS 2 MIIM number of clients This definition select the MIIM Maximum Number of Clients per instance. By default the 1st MIIM client is the DRV_ETHPHY. An extra client is...","GUID-C4336C08-C6A8-4798-8BD3-C5ACA7BA120C.html@@@1.2.1.12.2.23 TCPIP_HTTP_CurrentConnectionPostSmGet Function@@@uint16_t TCPIP_HTTP_CurrentConnectionPostSmGet( HTTP_CONN_HANDLE connHandle ); This function returns the POST state machine state for the connection defined by connHandle. This state is maintained by...","GUID-C43FFD81-6662-48D3-9E17-6FD5778DA7BB.html@@@1.2.2.1.3.73 NET_PRES_TransportObject Structure@@@typedef struct _NET_PRES_TransportObject { NET_PRES_TransOpen fpOpen; NET_PRES_TransBind fpLocalBind; NET_PRES_TransBind fpRemoteBind; NET_PRES_TransOption fpOptionGet; NET_PRES_TransOption...","GUID-C49934C5-0B2F-44FB-9ADF-80E8563E533A.html@@@1.2.6.2 TCP/IP Stack Commands@@@This module provides TCP/IP commands for run time tuning and status reporting using the system command processor and console...","GUID-C4CD3F53-E57A-4E19-A8BA-ED96180C8ED1.html@@@1.2.1.4.3.3 TCPIP_DHCPS_Enable Function@@@bool TCPIP_DHCPS_Enable( TCPIP_NET_HANDLE hNet ); This function enables the DHCP Server for the specified interface, if it is disabled. If it is already enabled, nothing is done. The DHCP server...","GUID-C4E6D5B7-24EE-45C4-888A-C3A67F4144AA.html@@@1.2.1.5.3.16 TCPIP_DHCPS_LEASE_STATE Enumeration@@@typedef enum { TCPIP_DHCPS_LEASE_STATE_IDLE = 0, TCPIP_DHCPS_LEASE_STATE_SEND_PROBE, TCPIP_DHCPS_LEASE_STATE_WAIT_PROBE, TCPIP_DHCPS_LEASE_STATE_REPROBE, TCPIP_DHCPS_LEASE_STATE_SEND_OFFER...","GUID-C54433C1-2180-430D-953B-46C028083162.html@@@1.2.5.2.43 TCPIP_MAC_Process Function@@@TCPIP_MAC_RES TCPIP_MAC_Process( DRV_HANDLE hMac ); This is a function that allows for internal processing by the MAC driver. It is meant for processing that cannot be done from within ISR. Normally...","GUID-C55588FA-F0B1-4BA1-B875-3C2134BF6312.html@@@1.2.5.8.4.16 DRV_ETHPHY_INTERFACE_TYPE Enumeration@@@typedef enum { DRV_ETHPHY_INF_TYPE_EXTERNAL, DRV_ETHPHY_INF_TYPE_INTERNAL, DRV_ETHPHY_INF_TYPE_NOT_SUPPORTED } DRV_ETHPHY_INTERFACE_TYPE; Members Description DRV_ETHPHY_INF_TYPE_EXTERNAL External...","GUID-C5BA9616-28D3-4E7F-A8A3-93DB479CA06C.html@@@1.2.5.4.3.12 DRV_ENCX24J600_MDIX_TYPE Type@@@typedef enum DRV_ENCX24J600_MDIX_TYPE@1 DRV_ENCX24J600_MDIX_TYPE; ENCX24J600 Driver MDIX Control type This type defines the enumeration for controlling the MDIX select. None...","GUID-C5E9B002-20FC-4712-A0C1-FB75538DA2CC.html@@@1.2.1.13.3.31 TCPIP_HTTP_NET_ConnectionPostSmGet Function@@@uint16_t TCPIP_HTTP_NET_ConnectionPostSmGet( TCPIP_HTTP_NET_CONN_HANDLE connHandle ); This function returns the POST state machine state for the connection defined by connHandle . This state is...","GUID-C642CB71-CF06-46CC-9922-1407077E1B3B.html@@@1.2.1.21.3.1 TCPIP_TELNET_AUTH_HANDLER Type@@@typedef bool (* TCPIP_TELNET_AUTH_HANDLER)(const char* user, const char* password, const TCPIP_TELNET_CONN_INFO* pInfo, const void* hParam); Telnet authentication callback. Pointer to a function that...","GUID-C658EE89-DDA0-4B5F-B8B7-B22FF916284D.html@@@1.2.5.4.3.5 DRV_ENCX24J600_Deinitialize Function@@@void DRV_ENCX24J600_Deinitialize(SYS_MODULE_OBJ object); None. ENCX24J600 Deinitialization This function deallocates any resources allocated by the initialization function. The driver had to be...","GUID-C669F62C-8C6F-4D76-B390-F6DA0E452C6D.html@@@1.2.1.2.3.28 getsockname Function@@@int getsockname( SOCKET s, struct sockaddr * addr, int * addrlen ); The function returns the current address to which the socket is bound, in the buffer pointed to by addr . The socket() function...","GUID-C68AEB26-6C98-47BD-89FB-92838F04FEC7.html@@@1.2.5.4.3.8 DRV_ENCX24J600_EventPendingGet Function@@@TCPIP_MAC_EVENT DRV_ENCX24J600_EventPendingGet(DRV_HANDLE hMac); TCPIP_MAC_EV_NONE - Returned on an error List of events - Returned on event other than an error ENCX24J600 Get Events This function...","GUID-C696821D-AA0B-4D49-9962-3B9EA7323813.html@@@1.2.1.3.3.20 TCPIP_DHCP_STATUS Enumeration@@@typedef enum { TCPIP_DHCP_IDLE = 0, TCPIP_DHCP_WAIT_LINK, TCPIP_DHCP_SEND_DISCOVERY, TCPIP_DHCP_GET_OFFER, TCPIP_DHCP_SEND_REQUEST, TCPIP_DHCP_GET_REQUEST_ACK, TCPIP_DHCP_WAIT_LEASE_CHECK...","GUID-C6A2D6A0-39E1-4427-A87F-128F016036D5.html@@@1.2.3.2.3.40 TCPIP_UDP_SOCKET_POOL_BUFFERS Macro@@@#define TCPIP_UDP_SOCKET_POOL_BUFFERS 4 Number of buffers in the private UDP pool. These are preallocated buffers that are to be used by UDP sockets only. This improves the UDP socket throughput and...","GUID-C6AE4B40-72A3-409B-9BE4-B8D555302C85.html@@@1.2.6.1.1.3.106 TCPIP_STACK_VersionStrGet Function@@@const char * TCPIP_STACK_VersionStrGet( const SYS_MODULE_INDEX index ); This function gets the TCP/IP stack version. The version is returned as major.minor.path[type], where type is optional. The...","GUID-C6B8DB57-E903-42F6-9515-21BB0F5E1070.html@@@1.2.4.1.3.2 TCPIP_ARP_CacheThresholdSet Function@@@TCPIP_ARP_RESULT TCPIP_ARP_CacheThresholdSet( TCPIP_NET_HANDLE hNet, int purgeThres, int purgeEntries ); This function sets the current value of the cache threshold for the selected interface. During...","GUID-C6CC94FF-9D0F-4075-8C4C-A4777AC58474.html@@@1.2.3.1.3.24 TCPIP_TCP_FifoTxFreeGet Function@@@uint16_t TCPIP_TCP_FifoTxFreeGet( TCP_SOCKET hTCP ); Macro: TCPIP_TCP_FifoTxFreeGet(TCP_SOCKET hTCP). This macro returns the number of bytes that are free in the socket TX buffer. Parameters...","GUID-C720F980-BF70-46B0-A03D-727DF79A7714.html@@@1.2.6.1.1.3.63 TCPIP_STACK_ModuleConfigGet Function@@@size_t TCPIP_STACK_ModuleConfigGet( TCPIP_STACK_MODULE modId, void* configBuff, size_t buffSize, size_t* pNeededSize ); This function returns the current configuration data of the stack module...","GUID-C7240DC3-F6D5-4AFA-BD7B-C944004A881B.html@@@1.2.5.8.4.14 DRV_ETHPHY_INSTANCES_NUMBER Macro@@@#define DRV_ETHPHY_INSTANCES_NUMBER 1 Ethernet PHY hardware instance configuration This definition selects the maximum number of hardware instances that can be supported by the dynamic driver. Not...","GUID-C726B4C4-41B2-43E9-BCD1-E6268F980E7E.html@@@1.2.4.1.3.15 TCPIP_ARP_HandlerRegister Function@@@TCPIP_ARP_HANDLE TCPIP_ARP_HandlerRegister( TCPIP_NET_HANDLE hNet, TCPIP_ARP_EVENT_HANDLER handler, const void* hParam ); This function will register a notification handler with the ARP module. The...","GUID-C75ABC2F-EA35-400D-839B-EDEF4F05E892.html@@@1.2.1.8.3.13 TCPIP_DNSS_IsEnabled Function@@@bool TCPIP_DNSS_IsEnabled( TCPIP_NET_HANDLE hNet ); This function returns the current state of the DNS Server on the specified interface. The DNS server must be initialized. Parameters Description...","GUID-C764181E-68C7-495F-A91A-01A2B7B1E8F7.html@@@1.2.5.10.3.13 PPP_EchoRequest Function@@@PPP_ECHO_RESULT PPP_EchoRequest (DRV_HANDLE hMac, PPP_ECHO_REQUEST* pEchoRequest, PPP_REQUEST_HANDLE* pHandle); PPP_ECHO_OK - Indicates the query request was successfully sent PPP_ECHO_RESULT - The...","GUID-C7667A7A-5D60-4688-AC44-EFAB2C5DFC5C.html@@@1.2.3.1.3.57 TCPIP_TCP_WasReset Function@@@bool TCPIP_TCP_WasReset( TCP_SOCKET hTCP ); This function is a self-clearing semaphore indicating whether or not a socket has been reset since the previous call. This function indicates that a RST was...","GUID-C78B7BDE-B79E-463C-BC97-9322BC69D1C4.html@@@1.2.1.3.3.21 TCPIP_DHCP_Task Function@@@void TCPIP_DHCP_Task(); This function performs DHCP module tasks in the TCP/IP stack. DHCP module should have been initialized. None. None...","GUID-C7BB0AD1-75F0-4433-9D7C-275A7198955B.html@@@1.2.1.3.3.13 TCPIP_DHCP_IsBound Function@@@bool TCPIP_DHCP_IsBound( TCPIP_NET_HANDLE hNet ); This functin returns the status of the current IP address lease on the specified interface. None. Parameters Description hNet Interface to query. True...","GUID-C80E17FD-6D59-47C4-A5A2-69318E6F9E3E.html@@@1.2.3.2.3.2 TCPIP_UDP_ArrayPut Function@@@uint16_t TCPIP_UDP_ArrayPut(UDP_SOCKET hUDP, const uint8_t * cData, uint16_t wDataLen); The number of bytes successfully placed in the UDP transmit buffer. If this value is less than wDataLen, then...","GUID-C832BF63-CCA3-42D7-B086-378DC5389728.html@@@1.2.1.13.3.64 TCPIP_HTTP_SSI_NOTIFY_DCPT Structure@@@typedef struct { const char* fileName; char* ssiCommand; int nAttribs; TCPIP_HTTP_SSI_ATTR_DCPT* pAttrDcpt; } TCPIP_HTTP_SSI_NOTIFY_DCPT; Data structure: TCPIP_HTTP_SSI_NOTIFY_DCPT This data type...","GUID-C868486A-6EC9-40EB-B216-5A67901EE666.html@@@1.2.3.1.3.8 TCP_SOCKET_INFO Structure@@@typedef struct { IP_ADDRESS_TYPE addressType; IP_MULTI_ADDRESS remoteIPaddress; IP_MULTI_ADDRESS localIPaddress; TCP_PORT remotePort; TCP_PORT localPort; TCPIP_NET_HANDLE hNet; TCPIP_TCP_STATE state...","GUID-C89ABCA4-B0CE-4510-9C1D-A0E9A15DD1C5.html@@@1.2.6.1.1.3.36 TCPIP_NET_HANDLE Type@@@typedef const void* TCPIP_NET_HANDLE; Type: TCPIP_NET_HANDLE. Definition of the network handle, which clients use to get access to control the interfaces...","GUID-C8C59F10-55E4-44A7-AF63-49F33DBC36D3.html@@@1.2.1.12.1 Abstraction Model@@@Three main components are necessary to understand how the HTTP web server works: the web pages, the MPFS2 Utility, and the source files custom_http_app.c and http_print.h. An overview of the entire...","GUID-C8CCD3C1-DE9B-410F-B924-83D4FAE8ED2C.html@@@1.2.1.19.3.45 TCPIP_SNMP_TrapSpecificNotificationSet Function@@@void TCPIP_SNMP_TrapSpecificNotificationSet( uint8_t specTrap, uint8_t genTrap, SNMP_ID trapID ); The SNMP user needs to call this function before transmitting any traps. This function will set the...","GUID-C944AF34-E0C1-41DA-8C23-370F0FC00578.html@@@1.1.4 Flash and RAM Usage@@@The following figures provide Flash and RAM usage information for the supported devices. PIC32MZEF Memory Usage in bytes (based on net 3.5.0, XC32 v2.30) PIC32MZDAS Memory Usage in bytes (based on net...","GUID-C9B010A5-19EF-4EB3-A7B4-4FC0DC3E1EC4.html@@@1.2.5.4.3.24 DRV_ENCX24J600_StatisticsGet Function@@@TCPIP_MAC_RES DRV_ENCX24J600_StatisticsGet(DRV_HANDLE hMac, TCPIP_MAC_RX_STATISTICS* pRxStatistics, TCPIP_MAC_TX_STATISTICS* pTxStatistics); TCPIP_MAC_RES_TYPE_ERR - if the hMac is invalid...","GUID-C9DF71BD-18FA-485B-BBB6-A2574971D6D3.html@@@1.2.1.10.3.38 TCPIP_FTPC_SetType Function@@@TCPIP_FTPC_RETURN_TYPE TCPIP_FTPC_SetType(TCPIP_FTPC_CONN_HANDLE_TYPE ftpcHandle, TCPIP_FTPC_DATA_REP_TYPE type); TCPIP_FTPC_RET_OK - if successfully scheduled function TCPIP_FTPC_RET_BUSY - could not...","GUID-C9EC53A2-372C-4EE3-8093-316236CFDA93.html@@@1.2.2.1.3.46 NET_PRES_SocketLastError Function@@@NET_PRES_SKT_ERROR_T NET_PRES_SocketLastError(NET_PRES_SKT_HANDLE_T handle); A NET_PRES_SKT_ERROR_T representing the last encountered error for this socket. A socket needs to have been opened by...","GUID-CA22AE73-6689-44DB-8A43-36DF320C8ECC.html@@@1.2.1.24.3.9 TCPIP_ZCLL_Task Function@@@void TCPIP_ZCLL_Task(); This function performs ZCLL module tasks in the TCP/IP stack. The ZCLL module should have been initialized. None. None...","GUID-CA38A3F1-35E3-4E04-B479-20D7D37CBC41.html@@@1.2.5.10.2 PPP MAC Driver Configurations@@@PPP MAC Driver Specific User Configurations PPP Default Configuration for Network Traffic: PPP Default Configuration for Network Traffic. Default value: &quot;Medium&quot; Symbol TCPIP_PPP_TRAFFIC Number of...","GUID-CA3913D4-C1E2-4A14-A6A3-B5A45A97F6C9.html@@@1.2.3.1.3.22 TCPIP_TCP_FifoRxFullGet Macro@@@#define TCPIP_TCP_FifoRxFullGet(a) TCPIP_TCP_GetIsReady(a) Macro: TCPIP_TCP_FifoRxFullGet. Alias to TCPIP_TCP_GetIsReady provided for API completeness. None...","GUID-CA63B30E-EABD-4DDB-B676-1416AB83A279.html@@@1.2.1.24.3.8 TCPIP_ZCLL_IsEnabled Function@@@bool TCPIP_ZCLL_IsEnabled( TCPIP_NET_HANDLE hNet ); This API is used by end-user application check whether or not an interface is enabled for zero configuration. The TCP/IP stack must be initialized...","GUID-CAC0E3EC-B120-4A6A-8574-F17455A01A5E.html@@@1.2.1.21.3.2 TCPIP_TELNET_AuthenticationDeregister Function@@@bool TCPIP_TELNET_AuthenticationDeregister( TCPIP_TELNET_HANDLE authHandle ); This function removes a authentication handler. Telnet properly initialized. Parameters Description authHandler...","GUID-CB1F2EFB-0DB6-4501-A815-67747E613877.html@@@1.2.1.2.3.73 SO_LINGER Macro@@@#define SO_LINGER 13 //Indicates if the system should send any buffered data when a socket is closed Indicates if the system should send any buffered data when a socket is closed...","GUID-CB2C39EF-B05F-4F05-8F23-EFD26506588E.html@@@1.2.1.10.3.3 TCPIP_FTPC_CMD Enumeration@@@typedef enum { TCPIP_FTPC_CMD_NONE = 0, TCPIP_FTPC_CMD_CONNECT, TCPIP_FTPC_CMD_USER, TCPIP_FTPC_CMD_PASS, TCPIP_FTPC_CMD_ACCT, TCPIP_FTPC_CMD_TYPE, TCPIP_FTPC_CMD_STRU, TCPIP_FTPC_CMD_MODE...","GUID-CB39E466-3E36-452E-8B5A-301229849483.html@@@1.2.1.17.2.9 TCPIP_SMTP_StringPut Function@@@uint16_t TCPIP_SMTP_StringPut( char* Data ); This function writes a string to the SMTP client. TCPIP_SMTP_UsageBegin() returned true on a previous call. Parameters Description Data The data to be...","GUID-CB7D4F5F-5213-4E6E-9F9A-ACA1B11A9BD1.html@@@1.2.1.5.3.18 TCPIP_DHCPS_LeaseEntriesGet Function@@@TCPIP_DHCPS_RES TCPIP_DHCPS_LeaseEntriesGet(TCPIP_NET_HANDLE netH, uint16_t* pLeases, uint16_t* pInUse); Get the total and in use number of lease entries for the selected interface. This function...","GUID-CC0DE8A5-7934-4838-97B7-59137819501A.html@@@1.2.1.4.3.2 TCPIP_DHCPS_Disable Function@@@bool TCPIP_DHCPS_Disable( TCPIP_NET_HANDLE hNet ); This function disables the DHCP Server for the specified interface. If it is already disabled, no action is taken. The DHCP server module must be...","GUID-CC23A6F8-F33B-4C02-89EE-3CA21129E750.html@@@1.2.1.1 Announce Module@@@TCP/IP Stack Library Announce Module for Microchip Devices This library provides the API of the Announce Module that is available on the Microchip family of devices with a convenient C language...","GUID-CC405A6D-A3DB-437D-8A1A-A05672F88B06.html@@@1.2.3.2.3.36 TCPIP_UDP_SOCKET_DEFAULT_RX_QUEUE_LIMIT Macro@@@#define TCPIP_UDP_SOCKET_DEFAULT_RX_QUEUE_LIMIT 3 The maximum number of RX packets that can be queued by an UDP socket at a certain time. Note that UDP sockets do not use their own RX buffers but...","GUID-CC4E1A18-4325-47FB-AF6B-FDEED3BA4D8D.html@@@1.2.1.13.3.25 TCPIP_HTTP_NET_ConnectionIsAuthorizedGet Function@@@uint8_t TCPIP_HTTP_NET_ConnectionIsAuthorizedGet( TCPIP_HTTP_NET_CONN_HANDLE connHandle ); This function returns the authorization status for the current HTTP connection. This is one of the values...","GUID-CC9C2877-3B32-4836-AD07-7B7A730FA2D2.html@@@1.2.1.2.3.22 EAI_SOCKTYPE Macro@@@#define EAI_SOCKTYPE -7 /* `ai_socktype&apos; not supported. */ &apos;ai_socktype&apos; not supported...","GUID-CCEB8932-DFFD-42B7-87B7-3CD138098D81.html@@@1.2.1.12.2.40 TCPIP_HTTP_MODULE_CONFIG Structure@@@typedef struct { uint16_t nConnections; uint16_t nTlsConnections; uint16_t dataLen; uint16_t sktTxBuffSize; uint16_t sktRxBuffSize; uint16_t tlsSktTxBuffSize; uint16_t tlsSktRxBuffSize; uint16_t...","GUID-CD1946E6-72CB-4B9E-916C-977488D1C1BF.html@@@1.2.1.19.3.10 SNMP_V1 Macro@@@#define SNMP_V1 (0) This macro is used for SNMP version 1...","GUID-CD3C7839-1D4D-49B7-8B78-BC3BAA58D217.html@@@1.2.5.8.4.46 DRV_ETHPHY_VendorSMIWriteStart Function@@@DRV_ETHPHY_RESULT DRV_ETHPHY_VendorSMIWriteStart(DRV_HANDLE handle, uint16_t rIx, uint16_t wData, int phyAddress); DRV_ETHPHY_RES_OK - if the vendor SMI write transfer is started...","GUID-CD5B40E8-2DB7-4F6A-BC85-4178EC2A05E9.html@@@1.2.4.4.3.10 TCPIP_IGMP_HandlerRegister Function@@@TCPIP_IGMP_HANDLE TCPIP_IGMP_HandlerRegister( IPV4_ADDR mcastAddress, TCPIP_IGMP_EVENT_HANDLER handler, const void* hParam ); This function registers an IGMP client event handler. The IGMP client...","GUID-CD63EC26-3D34-4898-901D-90B16F42BA0E.html@@@1.2.1.7.3.4 TCPIP_DNS_CLIENT_CACHE_ENTRY_TMO Macro@@@#define TCPIP_DNS_CLIENT_CACHE_ENTRY_TMO 0 DNS client cache entry time-out. If this symbol is zero then the entry time-out will be the one specified by the DNS server when the name was solved...","GUID-CD7B84FD-F56B-4DB7-956C-101907684AE5.html@@@1.2.1.13.3.38 TCPIP_HTTP_NET_ConnectionStatusGet Function@@@TCPIP_HTTP_NET_STATUS TCPIP_HTTP_NET_ConnectionStatusGet( TCPIP_HTTP_NET_CONN_HANDLE connHandle ); This function returns the current HTTP status of the selected HTTP connection. None. Parameters...","GUID-CD9D6449-B64A-4A42-82E5-82527E43184B.html@@@1.1.3 Network Metrics@@@Iperf Bandwidth Measurements in TCP Server Mode Table 1-1.\u2000 Commands Hardware Board Computer iperf -s -i 5 -x &lt;speed&gt; iperf -c &lt;board ip addr&gt; -t 50 -i 5 For 100 Mbps test , &lt;speed&gt; = 100M For 1000...","GUID-CDA512D8-0DE4-4672-8716-04CAC681CB38.html@@@Product Change Notification Service@@@Microchip\u2019s product change notification service helps keep customers current on Microchip products. Subscribers will receive email notification whenever there are changes, updates, revisions or errata...","GUID-CDA81419-BA93-4763-804E-1DEB3222E05C.html@@@1.2.1.12.2.19 TCPIP_HTTP_CurrentConnectionHasArgsSet Function@@@void TCPIP_HTTP_CurrentConnectionHasArgsSet( HTTP_CONN_HANDLE connHandle, uint8_t args ); The function sets the value of the &quot;cookies or get arguments&quot; that are present. None. Parameters Description...","GUID-CDAC01F6-8490-46B6-8A2D-678A1F3501AA.html@@@1.2.5.3.3.9 DRV_ENC28J60_Initialize Function@@@SYS_MODULE_OBJ DRV_ENC28J60_Initialize(SYS_MODULE_INDEX index, SYS_MODULE_INIT * init); Valid handle to the driver instance - If successful SYS_MODULE_OBJ_INVALID - If unsuccessful ENC28J60...","GUID-CDEBC92A-C9A5-4332-9D52-BA76395A325C.html@@@1.2.5.7.3.9 DRV_ETHMAC_PIC32MACLinkCheck Function@@@bool DRV_ETHMAC_PIC32MACLinkCheck(DRV_HANDLE hMac); true - If the link is up false - If the link is not up This function checks the link status of the associated network interface. The function will...","GUID-CE11EBFA-49BD-4D91-86C5-FFD24810B03C.html@@@1.2.1.10.3 Library Interface@@@Name Description Macros TCPIP_FTPC_DATA_SKT_RX_BUFF_SIZE_DFLT Specify the Default Receive Buffer Size for the FTP Client Data Socket if 0, the TCP Socket Receive buffer size will be used by FTPC data...","GUID-CE1E6891-8778-4B78-8DF8-98743975C78C.html@@@1.2.1.19.3.50 TCPIP_SNMP_ValidateTrapIntf Function@@@bool TCPIP_SNMP_ValidateTrapIntf( TCPIP_NET_HANDLE pIf ); This function returns true if SNMP module trap interface is a valid interface. TCPIP_SNMP_Initialize() is already called. Parameters...","GUID-CE2CB3C0-3829-4DAB-A4CA-AE4CC4C3E30C.html@@@1.2.5.10.3.17 PPP_StatisticsGet Function@@@bool PPP_StatisticsGet(DRV_HANDLE hMac, PPP_STATISTICS* pStat, bool clear); true - if the call succeeds false - if no such hMac exists This function will copy the current value of the PPP statistics...","GUID-CE587E2A-69CB-4C73-AF12-C5AB810DEE7F.html@@@1.2.1.19.3.17 STD_BASED_SNMP_MESSAGE_PROCESSING_MODEL Enumeration@@@typedef enum { SNMPV1_MSG_PROCESSING_MODEL = 0X00, SNMPV2C_MSG_PROCESSING_MODEL = 0X01, SNMPV2U_V2_MSG_PROCESSING_MODEL = 0X02, SNMPV3_MSG_PROCESSING_MODEL = 0X03 }...","GUID-CE833EBE-8E54-48AE-A78F-733330292EFF.html@@@1.2.4.2 ICMP Module@@@The Internet Control Message Protocol is used to send error and status messages and requests. The ICMP module implements the Echo Reply message type (commonly referred to as a ping) which can be used...","GUID-CE8E1F8C-AD43-4349-90C3-1AB8F2FDAFC3.html@@@1.2.1.13.3.62 TCPIP_HTTP_NET_UserHandlerRegister Function@@@TCPIP_HTTP_NET_USER_HANDLE TCPIP_HTTP_NET_UserHandlerRegister( const TCPIP_HTTP_NET_USER_CALLBACK* userCallback ); The function registers a user callback data structure with the HTTP server. The HTTP...","GUID-CEC95AE4-8643-4D20-AB08-D3B716C13279.html@@@1.2.1.3.3.7 TCPIP_DHCP_HandlerRegister Function@@@TCPIP_DHCP_HANDLE TCPIP_DHCP_HandlerRegister( TCPIP_NET_HANDLE hNet, TCPIP_DHCP_EVENT_HANDLER handler, const void* hParam ); This function registers a DHCP event handler. The DHCP module will call the...","GUID-CEFB5CB1-5314-4015-8BB8-43A7429C0ECB.html@@@1.2.1.17 SMTP Module@@@The SMTP client module in the TCP/IP Stack lets applications send e-mails to any recipient worldwide. These message could include status information or important alerts. Using the e-mail to SMS...","GUID-CF1F5589-30B5-4F40-AFAE-1E182CF264DB.html@@@1.2.3.1.3.7 TCP_SOCKET Type@@@typedef int16_t TCP_SOCKET; Type: TCP_SOCKET. A TCP_SOCKET is stored as a single int16_t number...","GUID-CF54D5B4-557D-4E4B-9457-2F3D6EC15888.html@@@1.2.1.17.2.1 TCPIP_SMTP_ArrayPut Function@@@uint16_t TCPIP_SMTP_ArrayPut( uint8_t* Data, uint16_t Len ); This function writes a series of bytes to the SMTP client. TCPIP_SMTP_UsageBegin() returned true on a previous call. Parameters Description...","GUID-CF81482A-0347-4640-9715-FD9D425BDEEE.html@@@1.2.4.6.3.5 IPV6_DATA_DYNAMIC_BUFFER Macro@@@#define IPV6_DATA_DYNAMIC_BUFFER (0x1u) // Data to transmit is allocated in dynamically allocated RAM Data to transmit is allocated in dynamically allocated RAM...","GUID-CF8FE4AC-0E2A-43A4-AC57-4269D95998AA.html@@@1.2.1.17.2.5 TCPIP_SMTP_IsPutReady Function@@@uint16_t TCPIP_SMTP_IsPutReady(); Use this function to determine how much data can be written to the SMTP client when generating an on-the-fly message. TCPIP_SMTP_UsageBegin() returned true on a...","GUID-CFA6EF68-6547-4D1A-914A-1A61C1AC4615.html@@@1.2.5.9.3.16 DRV_MIIM_OBJECT_BASE Structure@@@struct DRV_MIIM_OBJECT_BASE { SYS_MODULE_OBJ (* DRV_MIIM_Initialize)(const SYS_MODULE_INDEX index, const SYS_MODULE_INIT * const init); void (* DRV_MIIM_Reinitialize)(SYS_MODULE_OBJ object, const...","GUID-CFB606B7-ADFE-4011-BC93-3FBF6E56C544.html@@@1.2.4.6.3.9 IPV6_DATA_SEGMENT_HEADER Structure@@@typedef struct _IPV6_DATA_SEGMENT_HEADER { uint8_t* dataLocation; unsigned short segmentSize; unsigned short segmentLen; unsigned char memory; unsigned char segmentType; struct...","GUID-CFC1B350-191B-49F9-9623-D76D3191F19C.html@@@1.2.5.2.11 TCPIP_MAC_EventMaskSet Function@@@bool TCPIP_MAC_EventMaskSet( DRV_HANDLE hMac, TCPIP_MAC_EVENT macEvents, bool enable ); This is a function that enables or disables the events to be reported to the MAC client (TCP/IP stack). All...","GUID-CFF83565-2B45-45E6-98B4-818917BFDA20.html@@@1.2.1.9.3.6 TCPIP_DDNS_LastIPGet Function@@@uint32_t TCPIP_DDNS_LastIPGet(); This function returns the last known external IP address of the device. None. The last known external IP address of the device...","GUID-D059B873-04CB-4F6C-B2D7-2D87A82824D6.html@@@1.2.1.7.3.29 TCPIP_DNS_HandlerDeRegister Function@@@bool TCPIP_DNS_HandlerDeRegister( TCPIP_DNS_HANDLE hDns ); This function deregisters the DNS client event handler. The DNS module must be initialized. Parameters Description hDns A handle returned by...","GUID-D0C43765-EA61-42CD-864E-6E702DA69D18.html@@@1.2.1.2.3.34 in_addr Structure@@@struct in_addr { union { struct { uint8_t s_b1, s_b2, s_b3, s_b4; } S_un_b; struct { uint16_t s_w1, s_w2; } S_un_w; uint32_t S_addr; } S_un; }; Members Description union S_un Union of IP address...","GUID-D0E31302-0F9D-4BFD-AE81-A5EFB7F8D7E2.html@@@1.2.4.5.3.18 TCPIP_IPV4_PacketFormatTx Function@@@void TCPIP_IPV4_PacketFormatTx( IPV4_PACKET* pPkt, uint8_t protocol, uint16_t ipLoadLen, TCPIP_IPV4_PACKET_PARAMS* pParams ); The necessary fields are set into the IPv4 packet. Properly allocated pPkt...","GUID-D0E98345-8F2F-493D-8EEF-76D4FBE8E04A.html@@@1.2.1.10.3.23 TCPIP_FTPC_GetFile Function@@@TCPIP_FTPC_RETURN_TYPE TCPIP_FTPC_GetFile(TCPIP_FTPC_CONN_HANDLE_TYPE ftpcHandle, TCPIP_FTPC_DATA_CONN_TYPE * pftpcDataConn, TCPIP_FTPC_FILE_OPT_TYPE * pfileOptions...","GUID-D0FE5558-9D5D-4C64-8BD1-41B78C1EF43E.html@@@1.2.1.5 DHCP Server Module (V2)@@@The DHCP Server module is used to assign IP addresses to DHCP clients from the configured IP address database. When the server receives a request from a client, the DHCP server determines the network...","GUID-D10776E9-7D95-489F-83B9-FE9816F3B5C6.html@@@1.2.1.6.1 Abstraction Model@@@This module provides software abstraction of the DHCPv6 module existent in the TCP/IP Stack implementation. The DHCPv6 module works together with the IPv6 Stateless Address Auto-configuration protocol...","GUID-D10D7083-A933-42A7-BA90-CB60C95FC6F6.html@@@1.2.4.6.3.64 TCPIP_IPV6_TxIsPutReady Function@@@unsigned short TCPIP_IPV6_TxIsPutReady( IPV6_PACKET * pkt, unsigned short count ); This function determines whether a TX packet can be written to. This function will allocate additional space to the...","GUID-D12487C5-F4A3-4080-8723-1D1D011FC0FF.html@@@1.2.1.10.3.39 TCPIP_FTPC_STATUS_TYPE Structure@@@C typedef struct { NET_PRES_SKT_HANDLE_T ctrlSocket; NET_PRES_SKT_HANDLE_T dataSocket; TCPIP_FTPC_CMD cmd; TCPIP_FTPC_ERROR_TYPE error; uint32_t dataRxLen; uint32_t dataTxLen; uint16_t ctrlRxLen...","GUID-D15C8F84-C30C-451F-8AB7-F8E62AD494C2.html@@@1.2.1.7.3 Library Interface@@@Name Description General Functions TCPIP_DNS_HandlerDeRegister Deregisters a previously registered DNS client handler. TCPIP_DNS_HandlerRegister Registers a DNS client Handler. TCPIP_DNS_IsEnabled...","GUID-D1800DEF-337A-453D-B99A-B192DA6019A0.html@@@1.2.5.5 Ethernet GMAC Driver Library@@@The Ethernet Media Access Controller (GMAC) module implements a 10/100 Mbps Ethernet MAC, compatible with the IEEE 802.3 standard. The GMAC can operate in either half or full duplex mode at all...","GUID-D1946042-EB7D-493D-ABEA-97744814C4FE.html@@@1.2.5.6.3.7 MAC_DRVR_PacketRx Function@@@TCPIP_MAC_PACKET * MAC_DRVR_PacketRx( DRV_HANDLE hMac, TCPIP_MAC_RES * pRes, const TCPIP_MAC_PACKET_RX_STAT ** ppPktStat ); a valid pointer to an available RX packet 0 if no packet pending/available...","GUID-D1BAA1C2-EC47-4DD3-8F9E-F57F42EA215C.html@@@1.2.1.5.3.14 TCPIP_DHCPS_LEASE_INFO Structure@@@typedef struct { IPV4_ADDR ipAddress; uint32_t leaseTime; uint8_t leaseState; uint8_t clientIdLen; uint8_t clientId[]; }TCPIP_DHCPS_LEASE_INFO; Structure: TCPIP_DHCPS_LEASE_INFO DHCP Server module...","GUID-D2535796-AE16-4FA5-AE47-F3B133B92327.html@@@1.2.1.22.3.12 TCPIP_TFTPC_SetServerAddress Function@@@void TCPIP_TFTPC_SetServerAddress( IP_MULTI_ADDRESS* ipAddr, IP_ADDRESS_TYPE ipType ); This function is used to set the TFTP server address (either it will be IPv4 address or IPv5 address). This...","GUID-D253B912-3678-4674-894E-241ADF9B0F34.html@@@1.2.1.2.3.11 bind Function@@@int bind( SOCKET s, const struct sockaddr* name, int namelen ); The bind function assigns a name to an unnamed socket. The name represents the local address of the communication endpoint. For sockets...","GUID-D257BC7E-C3ED-427F-8A98-AF136AF09534.html@@@1.2.1.12.2.3 HTTP_IO_RESULT Enumeration@@@typedef enum { HTTP_IO_DONE = 0u, HTTP_IO_NEED_DATA, HTTP_IO_WAITING } HTTP_IO_RESULT; Result states for execution callbacks. Members Description HTTP_IO_DONE = 0u Finished with procedure...","GUID-D287E269-82F2-43B8-A149-F8D3BDCC32AB.html@@@1.2.6.1.1.3.47 TCPIP_STACK_HEAP_HANDLE Type@@@typedef const void* TCPIP_STACK_HEAP_HANDLE; Type: TCPIP_STACK_HEAP_HANDLE. Definition of the heap handle which clients use to get access to heap statistics functions. None...","GUID-D2A63E8F-58CD-497A-B5ED-1EC612BFBDD4.html@@@1.2.1.23 TFTP Server Module@@@The TCP/IP Stack Library Trivial File Transfer Protocol (TFTP) module is a simple protocol used to transfer files. The TFTP server waits for client requests to read and write files...","GUID-D2B619C5-F5F0-4E41-93A6-87E3B886BE8E.html@@@1.2.1.12.2.5 HTTP_READ_STATUS Enumeration@@@typedef enum { HTTP_READ_OK = 0u, HTTP_READ_TRUNCATED, HTTP_READ_INCOMPLETE } HTTP_READ_STATUS; Result states for TCPIP_HTTP_PostNameRead, TCPIP_HTTP_PostValueRead and TCPIP_HTTP_PostReadPair. Members...","GUID-D2D8E9C8-0778-41E2-8F0B-194954B92250.html@@@1.2.3.2.3 Library Interface@@@Name Description Macros TCPIP_UDP_MAX_SOCKETS Maximum number of UDP sockets that can be opened simultaneously These sockets will be created when the module is initialized...","GUID-D2E00968-3614-40B6-80DE-4CF03F6EA822.html@@@1.2.1.21.3.8 TCPIP_TELNET_HANDLE Type@@@typedef const void* TCPIP_TELNET_HANDLE; Type: TCPIP_TELNET_HANDLE. Definition of an processing handle used for registration of callbacks with the telnet module...","GUID-D2E5A710-25A0-4A46-8838-728A17478011.html@@@1.2.4.6.3.52 TCPIP_IPV6_PACKET_HANDLER Type@@@typedef bool (* TCPIP_IPV6_PACKET_HANDLER)(TCPIP_NET_HANDLE hNet, struct _tag_TCPIP_MAC_PACKET* rxPkt, const void* hParam); IPv6 packet handler pointer. Pointer to a function that will be called by...","GUID-D2E8B76C-19A7-4B1D-9DA1-735E139DB379.html@@@1.2.1.8.3.6 TCPIP_DNSS_CACHE_PER_IPV6_ADDRESS Macro@@@#define TCPIP_DNSS_CACHE_PER_IPV6_ADDRESS 1 Maximum and default number of IPv6 entries will be allowed to be configured from command prompt. and these many entries will be allowed to be sent in...","GUID-D36E9D14-1163-4F21-BACE-C60999AF05D9.html@@@1.2.4.7.2 Neighbor Discovery Protocol (NDP) Configurations@@@NDP Specific User Configurations NDP Task Rate (in msec): NDP task processing rate, in milliseconds. The NDP module will process a timer event with this rate for maintaining its own queues, processing...","GUID-D370C4A1-35A2-4EB4-ADFA-DE554D8B6A6D.html@@@1.2.4.2.2 Internet Control Message Protocol (ICMP) Configurations@@@ICMP Specific User Configurations Use ICMPv4 Server: Build with the ICMP server support Default value: true Symbol TCPIP_STACK_USE_ICMP_SERVER Allow Replies to Echo Broadcast Requests: Allow replies...","GUID-D3D86CBE-00BE-4BD6-BAB0-1EB678789ED2.html@@@1.2.5.8.4.5 DRV_ETHPHY_ClientStatus Function@@@DRV_ETHPHY_CLIENT_STATUS DRV_ETHPHY_ClientStatus(DRV_HANDLE handle); DRV_ETHPHY_CLIENT_STATUS value describing the current status of the driver. This function gets the client-specific status of the...","GUID-D3E8DC00-9719-4B3D-85DC-524ABF583017.html@@@1.2.1.23.1 Abstraction Model@@@The TFTP communication is based on a client/server model. The process of transferring a file consists of three main phases. In highly generalized terms, these phases are: Initial Connection: The TFTP...","GUID-D439489A-2A5E-4B7A-A234-0F06CC87FB08.html@@@1.2.3.2.3.51 TCPIP_UDP_USE_POOL_BUFFERS Macro@@@#define TCPIP_UDP_USE_POOL_BUFFERS false enable the build of the pre-allocated pool buffers option...","GUID-D4956D34-D487-4FBC-A935-A544006FAFCA.html@@@1.2.1.6.3.12 TCPIP_DHCPV6_IA_STATE Enumeration@@@typedef enum { TCPIP_DHCPV6_IA_STATE_SOLICIT, TCPIP_DHCPV6_IA_STATE_REQUEST, TCPIP_DHCPV6_IA_STATE_DAD, TCPIP_DHCPV6_IA_STATE_DECLINE, TCPIP_DHCPV6_IA_STATE_BOUND, TCPIP_DHCPV6_IA_STATE_RENEW...","GUID-D4AB047B-AA57-433C-9975-88FC7E7798B0.html@@@1 TCP/IP Stack Libraries Help@@@This section provides information on MPLAB Harmony TCP/IP Stack Library modules...","GUID-D4D7486A-7AD8-44E9-874D-F8569A499FE4.html@@@1.2.6.1.1.3.33 TCPIP_MODULE_SignalFunctionDeregister Function@@@bool TCPIP_MODULE_SignalFunctionDeregister( TCPIP_MODULE_SIGNAL_HANDLE signalHandle ); This function deregisters a previous signal function. The caller will no longer be notified of stack internal...","GUID-D5524C05-886B-46E1-89D1-D874C4B3B4AB.html@@@1.2.1.2.3.25 getaddrinfo Function@@@int getaddrinfo( const char * node, const char * service, const struct addrinfo * hints, struct addrinfo ** res ); This function deprecates gethostbyname(). It handles both IPv4 and IPv6. The MPLAB...","GUID-D5945F28-7CC8-4B2F-B01A-629BE62ADD3D.html@@@1.2.6.2.2.2 TCPIP_COMMAND_MODULE_CONFIG Type@@@typedef struct { void* reserved; }TCPIP_COMMAND_MODULE_CONFIG; TCP/IP command configuration/initialization...","GUID-D599570A-2578-409D-B308-AE742264674F.html@@@1.2.5.10.3.23 PPP_GetState Function@@@bool PPP_GetState(DRV_HANDLE hMac, PPP_STATE state[2]); true - if the call succeeded false - if there was an error This function gets the PPP current state for the LCP and IPCP None The PPP module...","GUID-D5B3BDBA-488D-457F-B721-83161B869C1D.html@@@1.2.3.2.3.54 UDP_MULTICAST_FLAGS Enumeration@@@typedef enum { UDP_MCAST_FLAG_LOOSE_NET_SOURCE_PORT = 0x0001, UDP_MCAST_FLAG_IGNORE_SOURCE_ADD = 0x0002, UDP_MCAST_FLAG_IGNORE_SOURCE_PORT = 0x0004, UDP_MCAST_FLAG_IGNORE_UNICAST = 0x0008...","GUID-D5C12573-4019-4ACB-B1C5-A96167AA626F.html@@@1.2.5.9.3.3 DRV_MIIM_CLIENT_STATUS Enumeration@@@typedef enum { DRV_MIIM_CLIENT_STATUS_ERROR, DRV_MIIM_CLIENT_STATUS_READY } DRV_MIIM_CLIENT_STATUS; Members Description DRV_MIIM_CLIENT_STATUS_ERROR Unspecified error condition. Client does not exist...","GUID-D5D5D104-2594-4929-85AC-245B1DD88A4B.html@@@1.2.1.9.1 Abstraction Model@@@...","GUID-D5DE007C-B070-4908-9A30-8975397F8873.html@@@1.2.1.2.3.13 connect Function@@@int connect( SOCKET s, struct sockaddr* name, int namelen ); The connect function assigns the address of the peer communications endpoint. For stream sockets, connection is established between the...","GUID-D601F033-B6C7-4C41-A24D-D681019A86F4.html@@@1.2.1.12.2.32 TCPIP_HTTP_CurrentConnectionUploadBufferEndSet Function@@@void TCPIP_HTTP_CurrentConnectionUploadBufferEndSet( HTTP_CONN_HANDLE connHandle, uint8_t* uploadBufferEnd ); This function sets the end address of current connection upload buffer. None. Parameters...","GUID-D61246B7-D771-4B3D-BEEB-66589A4A45D8.html@@@1.2.1.5.3.1 TCPIP_DHCPS_CLIENT_OPTION_CONFIG Structure@@@typedef struct { TCPIP_DHCPS_CLIENT_OPTION_TYPE optType; union { const char* ipStr; uint32_t uintVal; struct { uint16_t mult; uint16_t div; }; }; }TCPIP_DHCPS_CLIENT_OPTION_CONFIG; Structure...","GUID-D67F9164-CEE8-4AA7-904D-D4972A674516.html@@@1.2.1.2.3.18 EAI_MEMORY Macro@@@#define EAI_MEMORY -10 /* Memory allocation failure. */ Memory allocation failure...","GUID-D6A955EE-27C0-4F98-9209-C85349A88C7E.html@@@1.2.5.9.3.19 DRV_MIIM_OPERATION_FLAGS Enumeration@@@typedef enum { DRV_MIIM_OPERATION_FLAG_NONE, DRV_MIIM_OPERATION_FLAG_DISCARD } DRV_MIIM_OPERATION_FLAGS; Members Description DRV_MIIM_OPERATION_FLAG_NONE No flag specified...","GUID-D74284FF-5065-4BC5-9E60-7D08C942CDBC.html@@@1.2.1.2.3.42 IP_MULTICAST_LOOP Macro@@@#define IP_MULTICAST_LOOP 34 //Specify a copy of multicast packets should be delivered to the sending host - Not yet supported Specify a copy of multicast packets that should be delivered to the...","GUID-D76B51D2-8422-4DEA-BA25-6106A4C02D7A.html@@@1.2.6.1.1.3.61 TCPIP_STACK_InitializeDataGet Function@@@bool TCPIP_STACK_InitializeDataGet( SYS_MODULE_OBJ object, TCPIP_STACK_INIT* pStackInit ); This function returns the data that was used for the last call to the TCPIP_STACK_Initialize(). The TCP/IP...","GUID-D76DC993-4CD3-4C65-92DB-14DEAB57BB27.html@@@1.2.1.23.3 Library Interface@@@Name Description Macros TCPIP_TFTPS_CLIENT_NUMBER The number of Clients requests will be processed for the TFTP server stack. TCPIP_TFTPS_DEFAULT_BLOCK_SIZE The maximum value for the file name size...","GUID-D7AE1DC7-DE3F-4CFC-9D48-10072E5BB3D2.html@@@1.2.3.2.3.35 TCPIP_UDP_SignalHandlerRegister Function@@@TCPIP_UDP_SIGNAL_HANDLE TCPIP_UDP_SignalHandlerRegister(UDP_SOCKET s, TCPIP_UDP_SIGNAL_TYPE sigMask, TCPIP_UDP_SIGNAL_FUNCTION handler, const void* hParam); Returns a valid handle if the call...","GUID-D7AFD2EF-A67F-417D-B3F2-B430B5EEB050.html@@@1.2.1.3.3.1 TCPIP_DHCP_Disable Function@@@bool TCPIP_DHCP_Disable( TCPIP_NET_HANDLE hNet ); This function disables the DHCP client for the specified interface. If it is already disabled, no action is taken. The DHCP module must be...","GUID-D7DD45C0-B121-407E-B796-36FBC02DBF1A.html@@@1.2.1.5.3.7 TCPIP_DHCPS_EVENT_TYPE Type@@@typedef const void* TCPIP_DHCPS_EVENT_HANDLE; DHCP Server Event handle A handle that a client can use after the event handler has been registered...","GUID-D8008A28-B2A8-49D1-A41E-3B47217C042D.html@@@1.2.1.10.3.40 TCPIP_FTPC_Task Function@@@void TCPIP_FTPC_Task(); None. this function performs FTPC module tasks in the TCP/IP stack. None. FTPC module should have been initialized...","GUID-D879B0D8-C229-4375-B515-581659067E0B.html@@@1.2.4.3.3.1 TCPIP_ICMPV6_CallbackDeregister Function@@@bool TCPIP_ICMPV6_CallbackDeregister(ICMPV6_HANDLE hIcmpv6); true - On Success false - On Failure (If no such handler registered) This function deregisters a previously registered function from the...","GUID-D8879307-6878-418A-9A76-492EB5093D5D.html@@@1.2.2.1.3.28 NET_PRES_SKT_ERROR_T Enumeration@@@typedef enum { NET_PRES_SKT_OK = 0, NET_PRES_SKT_OP_NOT_SUPPORTED = -1, NET_PRES_SKT_OP_OUT_OF_HANDLES = -2, NET_PRES_SKT_OP_INVALID_INDEX = -3, NET_PRES_SKT_UNKNOWN_ERROR = -4...","GUID-D8AA42C0-A142-490C-85FA-0CED7BA562CF.html@@@1.2.1.5.3.12 TCPIP_DHCPS_INTERFACE_CONFIG Structure@@@typedef struct { uint8_t ifIndex; uint8_t configFlags; uint16_t leaseEntries; uint32_t leaseDuration; uint32_t minLeaseDuration; uint32_t maxLeaseDuration; uint32_t unreqOfferTmo; const char*...","GUID-D8D0D1D6-ECAA-40CF-B09C-90F06AE6107F.html@@@1.2.2.1.3.19 NET_PRES_INDEX Type@@@typedef uint8_t NET_PRES_INDEX; Net Presentation Index Type This data type sets the type for the presentation layer index. None...","GUID-D8E507AA-5287-43A5-8758-6D848C86325C.html@@@1.2.1.5.3.22 TCPIP_DHCPS_LeaseRemoveAll Function@@@TCPIP_DHCPS_RES TCPIP_DHCPS_LeaseRemoveAll(TCPIP_NET_HANDLE netH, bool keepPerm, bool keepAddBusy); Remove all entries from the DHCP server DB This function is used to remove all entries from the DB...","GUID-D8ECB653-53B3-4CF9-A369-8B9AEDE8A2C8.html@@@1.2.1.2.3.43 IP_MULTICAST_TTL Macro@@@#define IP_MULTICAST_TTL 33 //Set the Time to Live option for multicast packets - Not yet supported Set the time to live option for multicast packets. Not yet supported...","GUID-D8FE96DB-44FF-4D34-BFAD-65D10AAE0F8C.html@@@1.2.1.3.3.6 TCPIP_DHCP_HandlerDeRegister Function@@@bool TCPIP_DHCP_HandlerDeRegister( TCPIP_DHCP_HANDLE hDhcp ); This function deregisters the DHCP event handler. The DHCP module must be initialized. Parameters Description hDhcp A handle returned by a...","GUID-D95F67A0-5843-427A-A9CA-3FC6F4BDEF9C.html@@@1.2.1.2.3.72 SO_KEEPALIVE Macro@@@#define SO_KEEPALIVE 9 //Keep the connection alive by sending periodic transmissions - Not yet supported Keep the connection alive by sending periodic transmissions. Not yet supported...","GUID-DA0AF76A-1428-4889-AAAF-21FE2A10B2FC.html@@@1.2.6.1.1.3.22 TCPIP_Helper_htohs Macro@@@#define TCPIP_Helper_ntohs(n) TCPIP_Helper_htons(n) This is macro TCPIP_Helper_ntohs...","GUID-DA99B668-971A-44F2-9FE4-E9A146633CB0.html@@@1.2.3.1.3.50 TCPIP_TCP_SocketNetGet Function@@@TCPIP_NET_HANDLE TCPIP_TCP_SocketNetGet( TCP_SOCKET hTCP ); This function returns the interface handle associated to a TCP socket. TCP socket should have been opened with...","GUID-DADB5E8F-E2DC-4576-A61F-0BC748BE85A9.html@@@1.2.1.17.2.8 TCPIP_SMTP_PutIsDone Function@@@void TCPIP_SMTP_PutIsDone(); This function indicates that the on-the-fly message is complete. TCPIP_SMTP_UsageBegin() returned true on a previous call, and the SMTP client is generated an on-the-fly...","GUID-DADC5D14-FCC3-4828-A33C-063C8D9FF47F.html@@@1.2.1.19.2 Simple Network Management Protocol (SNMP) Configurations@@@SNMP Specific User Configurations SNMP Server Root Directory Path: The mount point for the files used by SNMP Default value: &quot;/mnt/mchpSite1/&quot; Symbol TCPIP_SNMP_MOUNT_POINT BIB file name: The...","GUID-DAF10DAD-5926-45EC-BB04-536107AB5DD9.html@@@1.2.5.8.4.34 DRV_ETHPHY_RESULT Enumeration@@@typedef enum { } DRV_ETHPHY_RESULT; Ethernet PHY Driver Operation Result * PHY Driver Operation Result Codes This enumeration defines the possible results of any of the PHY driver operations that have...","GUID-DB15F232-017B-45BE-9812-DC886F1B7F10.html@@@1.2.5.4.3.18 DRV_ENCX24J600_Process Function@@@TCPIP_MAC_RES DRV_ENCX24J600_Process(DRV_HANDLE hMac); TCPIP_MAC_RES_TYPE_ERR - if the hMac is invalid TCPIP_MAC_RES_OP_ERR - if the hMac is valid ENCX24J600 Process This function does additional...","GUID-DB7FF793-16EC-4766-8C2F-F53C44BD44A9.html@@@1.2.6.1.1.3.31 TCPIP_MODULE_SIGNAL_FUNC Type@@@typedef void (* TCPIP_MODULE_SIGNAL_FUNC)(TCPIP_MODULE_SIGNAL_HANDLE sigHandle, TCPIP_STACK_MODULE moduleId, TCPIP_MODULE_SIGNAL signal, uintptr_t signalParam); TCPIP module signal function. Pointer...","GUID-DBB5E017-A0FD-400E-BB4C-E19495836520.html@@@1.2.4 Network Layer@@@The network layer is responsible for addressing, packaging, and routing functions. The main protocols of the network layer are IP, ARP, ICMP, and IGMP...","GUID-DBD0596C-894B-4108-964E-E51E43D9EF22.html@@@1.2.6.1.1.3.45 TCPIP_STACK_HEAP_FLAGS Enumeration@@@typedef enum { TCPIP_STACK_HEAP_FLAG_NONE = 0x00, TCPIP_STACK_HEAP_FLAG_ALLOC_UNCACHED = 0x01, TCPIP_STACK_HEAP_FLAG_NO_MTHREAD_SYNC = 0x02, TCPIP_STACK_HEAP_FLAG_ALLOC_UNALIGN = 0x04...","GUID-DBD7F5E4-D8F8-4709-946B-43721484684F.html@@@1.2.1.3.3.9 TCPIP_DHCP_HostNameCallbackRegister Function@@@bool TCPIP_DHCP_HostNameCallbackRegister( TCPIP_NET_HANDLE hNet, TCPIP_DHCP_HOST_NAME_CALLBACK nameCallback, bool writeBack ); This function registers a DHCP host name callback function. The DHCP...","GUID-DC4CB281-3F3A-4F1C-BD5D-0DC0C4A94259.html@@@1.2.1.5.3.6 TCPIP_DHCPS_Enable Function@@@TCPIP_DHCPS_RES TCPIP_DHCPS_Enable(TCPIP_NET_HANDLE hNet) Enables the DHCP Server for the specified interface. This function enables the DHCP Server for the specified interface, if it is disabled. If...","GUID-DCA5AACB-EA99-4554-A53F-75E1CC5D3F8B.html@@@1.2.1.2.1 Abstraction Model@@@The following illustration shows a typical interaction for a TCP server or client using the Berkeley_socket_APIs...","GUID-DCB13BC6-B7A2-45CA-89E7-9474EAF05EFB.html@@@1.2.4.4.3 Library Interface@@@Name Description Macros IGMP_CONFIG_H This is macro IGMP_CONFIG_H . TCPIP_IGMP_INTERFACES the maximum number of interfaces that support IGMP Should be &lt;= interfaces that are present at the stack...","GUID-DCEBAF5C-5CC2-44B7-AB7C-CEA8D11A491D.html@@@1.2.6.1.1.3.42 TCPIP_STACK_HandlerRegister Function@@@TCPIP_EVENT_HANDLE TCPIP_STACK_HandlerRegister( TCPIP_NET_HANDLE hNet, TCPIP_EVENT evMask, TCPIP_STACK_EVENT_HANDLER notifyHandler, const void* notifyfParam ); This function sets a new event...","GUID-DCFB2B85-E195-41FA-96E6-15B74024A91B.html@@@1.2.1.2.3.44 IP_OPTIONS Macro@@@#define IP_OPTIONS 4 //IP Header Options - Not yet supported IP header options. Not yet supported...","GUID-DD1359E2-FCD4-4F82-8E75-EB78A2E1E7EF.html@@@1.2.1.1.3.2 TCPIP_ANNOUNCE_CallbackRegister Function@@@bool TCPIP_ANNOUNCE_CallbackRegister( TCPIP_ANNOUNCE_MESSAGE_CALLBACK callback ); This function registers an application callback. The callback will be called when the Announce module needs to send a...","GUID-DDD32672-28E9-4E86-9C2E-4FC04877C4E9.html@@@1.2.6.1.1.3.84 TCPIP_STACK_NetHandleGet Function@@@TCPIP_NET_HANDLE TCPIP_STACK_NetHandleGet( const char* interface ); This function resolves a network interface name to a handle. The TCP/IP stack should have been initialized by...","GUID-DDDF381F-DB67-450E-92F3-E5811C712FC6.html@@@1.2.1.14.3.1 TCPIP_IPERF_Task Function@@@void TCPIP_IPERF_Task(); This function performs iPerf module tasks in the TCP/IP stack. The iPerf module should have been initialized. None. None...","GUID-DDF2F979-BF4C-44FD-BB0E-DEFE99C8E1DA.html@@@1.2.1.22.3.13 TCPIP_TFTPC_Task Function@@@void TCPIP_TFTPC_Task(); This function performs TFTP module tasks in the TCP/IP stack. The TFTP module should have been initialized. None. None...","GUID-DE4EAC23-7B9E-4852-88D2-FFAE4BD54CEA.html@@@1.2.5.6.3.6 MAC_DRVR_RxFilterHashTableEntrySet Function@@@TCPIP_MAC_RES MAC_DRVR_RxFilterHashTableEntrySet( DRV_HANDLE hMac, const TCPIP_MAC_ADDR * DestMACAddr ); TCPIP_MAC_RES_OK if success a TCPIP_MAC_RES error value if failed This function sets the MAC...","GUID-DE5D0B5D-ED16-49B2-88CB-1E28C0CFF915.html@@@1.2.5.4.3.20 DRV_ENCX24J600_Reinitialize Function@@@void DRV_ENCX24J600_Reinitialize(SYS_MODULE_OBJ object, const SYS_MODULE_INIT * const init); None ENCX24J600 Reinitialization This function will deinitialize and initialize the driver instance. As...","GUID-DE71AB16-2E33-4DC2-B6EF-8E07416A46B5.html@@@1.2.1.2.3.92 SOCKET Type@@@typedef int16_t SOCKET; Socket descriptor...","GUID-DEBA081A-E861-4901-8C83-D90C5C05A50D.html@@@1.2.2.1.3.55 NET_PRES_SocketSignalHandlerRegister Function@@@NET_PRES_SIGNAL_HANDLE NET_PRES_SocketSignalHandlerRegister(NET_PRES_SKT_HANDLE_T handle, uint16_t sigMask, NET_PRES_SIGNAL_FUNCTION handler, const void* hParam); valid handle - Indicates the call...","GUID-DED3F85C-11E1-4A7F-B94B-9FECDBD0893E.html@@@1.2.1.19.3.9 SNMP_TRAP_IP_ADDRESS_TYPE Enumeration@@@typedef enum { IPV4_SNMP_TRAP = 1, IPV6_SNMP_TRAP } SNMP_TRAP_IP_ADDRESS_TYPE; Enumeration: SNMP_TRAP_IP_ADDRESS_TYPE. SNMP agent supports both IPv4 and IPv6 trap address type and is able to transmit...","GUID-DEE3AF7D-97B4-4A2D-8A1E-279868DC0C5B.html@@@1.2.1.21.3.3 TCPIP_TELNET_AuthenticationRegister Function@@@TCPIP_TELNET_HANDLE TCPIP_TELNET_AuthenticationRegister( TCPIP_TELNET_AUTH_HANDLER authHandler, const void* handlerParam ); This function registers a new authentication handler. telnet module will...","GUID-DEEB88DB-09E4-49D3-9C30-8AE37EFDAB61.html@@@1.2.1.6.3.2 TCPIP_DHCPV6_CLIENT_STATE Enumeration@@@typedef enum { TCPIP_DHCPV6_CLIENT_STATE_INIT = 0, TCPIP_DHCPV6_CLIENT_STATE_IDLE, TCPIP_DHCPV6_CLIENT_STATE_RUN, TCPIP_DHCPV6_CLIENT_STATE_WAIT_LINK, TCPIP_DHCPV6_CLIENT_STATE_NUMBER }...","GUID-DEF9BEE7-666A-4C41-8A10-C06A45D0294D.html@@@1.2.3.1.3.38 TCPIP_TCP_PROCESS_HANDLE Type@@@typedef const void* TCPIP_TCP_PROCESS_HANDLE; Type: TCPIP_TCP_PROCESS_HANDLE. Definition of an packet processing handle used for packet processing registration by the TCP clients...","GUID-DEFFE509-AA4D-46A6-AFD7-C6679F415C62.html@@@1.2.4.6.3.38 TCPIP_IPV6_DefaultRouterDelete Function@@@void TCPIP_IPV6_DefaultRouterDelete( TCPIP_NET_HANDLE netH ); This function deletes all default routers on a given interface. The IPv6 stack is initialized and the interface is up and configured...","GUID-DFB63280-015A-471A-9A04-C11C47F9A6A5.html@@@1.2.6.1.1.3.9 TCPIP_Helper_htonll Function@@@TCPIP_Helper_htonll( uint64_t hLLong ); This is function TCPIP_Helper_htonll...","GUID-E050327D-2B28-4D55-91CA-AB3E34DCB3A6.html@@@1.2.1.19 SNMP Module@@@SNMP is one of the key components of a Network Management System (NMS). SNMP is an application layer protocol that facilitates the exchange of management information among network devices. It is a...","GUID-E0BAEEB0-E90D-43E5-80F6-B01432C82D69.html@@@1.2.4.2.3.6 TCPIP_ICMP_ECHO_REQUEST Structure@@@typedef struct _tag_TCPIP_ICMP_ECHO_REQUEST { TCPIP_NET_HANDLE netH; IPV4_ADDR targetAddr; uint16_t sequenceNumber; uint16_t identifier; uint8_t* pData; uint16_t dataSize; void (* callback)(const...","GUID-E10CF207-A406-40AA-AC13-A6C69CF32285.html@@@1.2.6.1.1.3.34 TCPIP_MODULE_SignalFunctionRegister Function@@@TCPIP_MODULE_SIGNAL_HANDLE TCPIP_MODULE_SignalFunctionRegister( TCPIP_STACK_MODULE moduleId, TCPIP_MODULE_SIGNAL_FUNC signalF ); This function registers a new signal function. This function will be...","GUID-E11BC382-BE0D-43B8-9E90-7F3679B1355F.html@@@1.2.3.1.3.51 TCPIP_TCP_SocketNetSet Function@@@bool TCPIP_TCP_SocketNetSet( TCP_SOCKET hTCP, TCPIP_NET_HANDLE hNet ); This function sets the network interface for an TCP socket TCP socket should have been opened with...","GUID-E1712D45-7A1B-41B6-A61D-4DD50A9FDB02.html@@@1.2.1.5.3.17 TCPIP_DHCPS_LeaseAddById Function@@@TCPIP_DHCPS_RES TCPIP_DHCPS_LeaseAddById(TCPIP_NET_HANDLE netH, const TCPIP_DHCPS_LEASE_SET* pLeaseSet); Add a lease to the DHCP server DB This function is used to add one entry to the DB of the...","GUID-E175BD21-9F77-4C9D-BD7C-D093AE02D6BC.html@@@1.2.3.1 TCP Module@@@TCP is a standard transport layer_protocol described in RFC 793. It provides reliable stream-based connections over unreliable networks, and forms the foundation for HTTP, SMTP, and many other...","GUID-E1DDC267-1A89-4277-9F1F-90D0C7AE6C9B.html@@@1.2.3 Transport Layer@@@The core protocols of the transport layer are Transmission Control Protocol (TCP) and the User Datagram Protocol (UDP)...","GUID-E239D12D-E914-46ED-9318-A0F9EBEEB570.html@@@1.2.5.6.3.3 MAC_DRVR_Initialize Function@@@SYS_MODULE_OBJ MAC_DRVR_Initialize( const SYS_MODULE_INDEX index, const SYS_MODULE_INIT * const init ); a valid handle to a driver object, if successful. SYS_MODULE_OBJ_INVALID if initialization...","GUID-E2791B70-E859-4754-A3CA-AACC0BFE9DF1.html@@@1.2.1.12.2.44 TCPIP_HTTP_PostValueRead Function@@@HTTP_READ_STATUS TCPIP_HTTP_PostValueRead( HTTP_CONN_HANDLE connHandle, uint8_t* cData, uint16_t wLen ); This function reads a value from a URL encoded string in the TCP buffer. This function is meant...","GUID-E2A46EF2-2C2A-4D82-B4CB-CB48A6470410.html@@@1.2.3.1.3.44 TCPIP_TCP_SIGNAL_FUNCTION Type@@@typedef void (* TCPIP_TCP_SIGNAL_FUNCTION)(TCP_SOCKET hTCP, TCPIP_NET_HANDLE hNet, TCPIP_TCP_SIGNAL_TYPE sigType, const void* param); Type: TCPIP_TCP_SIGNAL_FUNCTION. Prototype of a TCP signal...","GUID-E2B08BBC-2E3A-4DBB-95EB-875C36F4A35E.html@@@1.2.3.1.3.5 TCP_OPTION_THRES_FLUSH_TYPE Enumeration@@@typedef enum { TCP_OPTION_THRES_FLUSH_AUTO, TCP_OPTION_THRES_FLUSH_OFF, TCP_OPTION_THRES_FLUSH_ON } TCP_OPTION_THRES_FLUSH_TYPE; Enumeration: TCP_OPTION_THRES_FLUSH_TYPE. Describes the possible types...","GUID-E2DEB76F-6641-4D1B-B4EC-51928467F76B.html@@@1.2.1.6.3.17 TCPIP_DHCPV6_SERVER_STATUS_CODE Enumeration@@@typedef enum { TCPIP_DHCPV6_SERVER_STAT_SUCCESS = 0, TCPIP_DHCPV6_SERVER_STAT_UNSPEC_FAIL = 1, TCPIP_DHCPV6_SERVER_STAT_NO_ADDRS_AVAIL = 2, TCPIP_DHCPV6_SERVER_STAT_NO_BINDING = 3...","GUID-E2E8B3F6-F88A-4869-9429-FB7C7B050578.html@@@1.2.1.8.3.3 TCPIP_DNSS_AddressCntGet Function@@@TCPIP_DNSS_RESULT TCPIP_DNSS_AddressCntGet( int index, uint8_t * hostName, uint8_t * ipCount ); This function is used to get the number of IPv4 and IPv6 address entry details from hash entry table...","GUID-E315EB00-D610-404F-9F5C-F62B206F19B5.html@@@1.2.1.24.3.10 ZCLL_MODULE_CONFIG Structure@@@typedef struct { void* reserved; } ZCLL_MODULE_CONFIG; Placeholder for zero configuration link layer module configuration...","GUID-E3405C68-FC4C-4ED2-973D-F46A684D7956.html@@@1.2.4.5.1 Abstraction Model@@@This module provides software abstraction of the IPv4 module existent in any TCP/IP Stack implementation. The typical usage of the IP layer_in a TCP/IP stack for transmitting a packet is shown in the...","GUID-E368D60C-EFC5-494D-B7C8-4852FE635F54.html@@@1.2.1.2.3.76 SO_RCVLOWAT Macro@@@#define SO_RCVLOWAT 18 //Receive Low Water mark - Not yet supported Receive low water mark. Not yet supported...","GUID-E36D97BD-C847-4199-95DA-E0AF04A11C0D.html@@@1.2.1.23.3.19 TCPIP_TFTPS_TASK_TICK_RATE Macro@@@#define TCPIP_TFTPS_TASK_TICK_RATE (60) The TFTP server task rate in milliseconds. The default value is 100 milliseconds. The lower the rate (higher the frequency) the higher the module priority and...","GUID-E374AB9C-2664-4786-B6FC-5B5C88311005.html@@@1.2.2.1.3.60 NET_PRES_Tasks Function@@@void NET_PRES_Tasks(SYS_MODULE_OBJ obj); None. MPLAB Harmony Networking Presentation Layer Tasks This function is called by the main loop. It is used to pump encryption connections during...","GUID-E3B76693-13F4-4614-93C6-B8679E7B4982.html@@@1.2.1.8.3.16 TCPIP_DNSS_RESULT Enumeration@@@typedef enum { TCPIP_DNSS_RES_OK = 0, TCPIP_DNSS_RES_NO_SERVICE = -1, TCPIP_DNSS_RES_CACHE_FULL = -2, TCPIP_DNSS_RES_NO_ENTRY = -3, TCPIP_DNSS_RES_NO_IPADDRESS = -4, TCPIP_DNSS_RES_MEMORY_FAIL = -5...","GUID-E3BE0396-DB19-45C0-AD96-5107E203D006.html@@@1.2.5.8.4.8 DRV_ETHPHY_Deinitialize Function@@@void DRV_ETHPHY_Deinitialize(SYS_MODULE_OBJ object); None. This function deinitializes the specified instance of the Ethernet PHY driver module, disabling its operation (and any hardware) and...","GUID-E3F25204-AFB7-438F-AAF4-126896DC2171.html@@@1.2.4.6.3.43 TCPIP_IPV6_Get Function@@@uint8_t TCPIP_IPV6_Get( TCPIP_MAC_PACKET* pRxPkt, uint8_t* pData ); This function is used to read the next byte of data from a packet. TCPIP_IPV6_Initialize() should be called...","GUID-E41F0EA9-8A66-494D-BFC1-C0E99B96F259.html@@@1.2.6.2.2.1 __TCPIP_COMMANDS_H Macro@@@#define __TCPIP_COMMANDS_H This is macro __TCPIP_COMMANDS_H...","GUID-E4878DAF-5DCA-47B5-A1ED-0F358153A9CA.html@@@1.2.5.8.4.6 DRV_ETHPHY_Close Function@@@void DRV_ETHPHY_Close(DRV_HANDLE handle); None This function closes an opened instance of the Ethernet PHY driver, invalidating the handle. After calling this routine, the handle passed in &quot;handle&quot...","GUID-E4B2C61A-89A3-4D7B-A7B1-A35443FD57AE.html@@@1.2.6.1.1.3.40 TCPIP_STACK_EventsPendingGet Function@@@TCPIP_EVENT TCPIP_STACK_EventsPendingGet( TCPIP_NET_HANDLE hNet ); This function returns the currently pending events. Multiple events can be ORed together as they accumulate. The TCP/IP stack should...","GUID-E4C52DC2-E752-4537-9468-4AE1C0C9FEFF.html@@@1.2.4.6.3.25 IPV6_TLV_OPTION_TYPE Union@@@typedef union { unsigned char b; struct { unsigned option : 6; unsigned unrecognizedAction : 2; } bits; } IPV6_TLV_OPTION_TYPE; Type: IPV6_TLV_OPTION_TYPE. This type defines the data structure for...","GUID-E4DF3595-C450-47FD-A097-39A8A57C54F6.html@@@1.2.4.5.3.14 TCPIP_IPV4_PACKET_PARAMS Structure@@@typedef struct { TCPIP_IPV4_TOS_FLAGS tosFlags; uint8_t ttl; uint8_t df; } TCPIP_IPV4_PACKET_PARAMS; IPv4 packet parameters. This is the structure describing parameters that can be specified for the...","GUID-E4E2AC3E-7D56-4051-A3BD-91424F6BD8AD.html@@@1.2.1.10.3.2 TCPIP_FTPC_ChangeToParentDir Function@@@TCPIP_FTPC_RETURN_TYPE TCPIP_FTPC_ChangeToParentDir(TCPIP_FTPC_CONN_HANDLE_TYPE ftpcHandle); TCPIP_FTPC_RET_OK - if successfully scheduled function TCPIP_FTPC_RET_BUSY - could not schedule function as...","GUID-E57BDE76-15C6-471D-9ED1-20BE3799E496.html@@@1.2.1.12.2.48 TCPIP_HTTP_UserAuthenticate Function@@@uint8_t TCPIP_HTTP_UserAuthenticate( HTTP_CONN_HANDLE connHandle, uint8_t* cUser, uint8_t* cPass ); This function is implemented by the application developer. Its function is to determine if the user...","GUID-E58E8D41-415B-4D3A-889A-039690926BB8.html@@@1.2.4.6.3.12 IPV6_HANDLE Type@@@typedef const void * IPV6_HANDLE; Pointer to IPv6 object...","GUID-E58EF65B-97FD-46B4-A696-0A6B6F120F77.html@@@1.2.1.19.3.59 TCPIP_SNMPv3_TrapConfigDataGet Function@@@void TCPIP_SNMPv3_TrapConfigDataGet( uint8_t userIndex, uint8_t * msgModelType, uint8_t * securityModelType ); This function is used to get SNMPv3 message model type and security model type using user...","GUID-E5FEA58A-6877-488F-A347-63728F777CDC.html@@@1.2.6.1.1.3.62 TCPIP_STACK_MACObjectGet Function@@@const TCPIP_MAC_OBJECT* TCPIP_STACK_MACObjectGet( TCPIP_NET_HANDLE netH ); This function returns the MAC driver object that&apos;s associated with the interface handle. The TCP/IP stack should have been...","GUID-E64B3C2D-C626-4B06-B081-9BECE00C6AD2.html@@@1.2.2.1.3.7 NET_PRES_EncProviderDeinit Type@@@typedef bool (* NET_PRES_EncProviderDeinit)(void); true - Deinitialization succeeded false - Deinitialization did not succeed Presentation Encryption Provider Close Function Pointer Prototype This...","GUID-E66A0D7F-2E87-45A4-9EBE-6EC9E53E76EF.html@@@1.2.5.2.15 TCPIP_MAC_HEAP_CallocFDbg Type@@@typedef void* (* TCPIP_MAC_HEAP_CallocFDbg)(TCPIP_MAC_HEAP_HANDLE heapH, size_t nElems, size_t elemSize, int moduleId, int lineNo); This is type TCPIP_MAC_HEAP_CallocFDbg...","GUID-E685F7FD-F66F-46C5-AA31-23417CB67780.html@@@1.2.6.1.1.3.13 TCPIP_Helper_IsBcastAddress Function@@@TCPIP_Helper_IsBcastAddress( const IPV4_ADDR* IPAddress ); This is function TCPIP_Helper_IsBcastAddress...","GUID-E73CA8C2-726A-4E9D-92E3-6DA5C65BF105.html@@@1.2.5.9.3.17 DRV_MIIM_Open Function@@@DRV_HANDLE DRV_MIIM_Open(const SYS_MODULE_INDEX drvIndex, const DRV_IO_INTENT intent); valid open-instance handle if successful (a number identifying both the caller and the module instance)...","GUID-E7A44303-FFAE-49EC-B989-02201197DE9E.html@@@1.2.6.1.1.3.68 TCPIP_STACK_NetAddressDnsSecond Function@@@uint32_t TCPIP_STACK_NetAddressDnsSecond( TCPIP_NET_HANDLE netH ); If interface is enabled then the function will return the IPv4 address of the secondary DNS of the network interface. The...","GUID-E7A711DE-6A93-43F1-8966-0205520C0CCE.html@@@1.2.1.12.2.42 TCPIP_HTTP_PostNameRead Function@@@HTTP_READ_STATUS TCPIP_HTTP_PostNameRead( HTTP_CONN_HANDLE connHandle, uint8_t* cData, uint16_t wLen ); This function reads a name from a URL encoded string in the TCP buffer. This function is meant...","GUID-E7E0ABF5-033A-43C4-A9FB-9E2D62AFFCB4.html@@@2.1.2 Hardware Requirements@@@The hardware development boards supported by Harmony 3 TCP/IP applications are as follows: SAME70 Xplained Ultra SAMV71 Xplained Ultra SAME54 Xplained PRO SAMA5D2 Xplained Ultra SAM9X60-EK Evaluation...","GUID-E7F98138-D21D-4905-BDB8-A8B43E45D4C2.html@@@1.2.1.10.3.1 TCPIP_FTPC_Change_Dir Function@@@TCPIP_FTPC_RETURN_TYPE TCPIP_FTPC_Change_Dir(TCPIP_FTPC_CONN_HANDLE_TYPE ftpcHandle, const char * pathname); TCPIP_FTPC_RET_OK - if successfully scheduled function TCPIP_FTPC_RET_BUSY - could not...","GUID-E8063A4C-9310-4E83-9C87-00408C02C74A.html@@@1.2.1.2.3.33 ICMP6_FILTER Macro@@@#define ICMP6_FILTER 1 //SEt the IPv6 Filtering options - Not yet supported Set the IPv6 filtering options. Not yet supported...","GUID-E8251634-7B15-4073-A103-5A5F128B8699.html@@@Microchip Devices Code Protection Feature@@@Note the following details of the code protection feature on Microchip products: Microchip products meet the specifications contained in their particular Microchip Data Sheet. Microchip believes that...","GUID-E860EE8B-FC6B-4445-B88E-DFF5660B8141.html@@@1.2.4.7.1 Abstraction Model@@@This module provides software abstraction of the IPv6 module existent in any TCP/IP Stack implementation. It removes the overhead of address resolution from all other modules in the stack. Link Layer...","GUID-E88A18CC-16AB-4D37-9942-356483BC10D0.html@@@1.2.2.1.3.53 NET_PRES_SocketRemoteBind Function@@@bool NET_PRES_SocketRemoteBind(NET_PRES_SKT_HANDLE_T handle, NET_PRES_SKT_ADDR_T addrType, NET_PRES_SKT_PORT_T port, NET_PRES_ADDRESS * addr); true - Indicates success false - Indicates failure This...","GUID-E8A317C5-C50B-4396-A5E3-0341C85CA736.html@@@1.2.1.18.3.14 TCPIP_SMTPC_MESSAGE_STATUS Enumeration@@@typedef enum { TCPIP_SMTPC_MESSAGE_STAT_NONE, TCPIP_SMTPC_MESSAGE_STAT_DNS, TCPIP_SMTPC_MESSAGE_STAT_CONNECT, TCPIP_SMTPC_MESSAGE_STAT_HELLO, TCPIP_SMTPC_MESSAGE_STAT_TLS...","GUID-E8BBC278-0227-40A6-AD91-354FC3A588EC.html@@@1.2.2.1.3.24 NET_PRES_Reinitialize Function@@@void NET_PRES_Reinitialize(SYS_MODULE_OBJ obj, const SYS_MODULE_INIT * const init); None. Network Presentation Layer Reinitialization This function will deinitialize and initialize the layer instance...","GUID-E8DD11CF-127A-464E-8684-3F9602872DA8.html@@@1.2.1.13.3.4 TCPIP_HTTP_DYN_PRINT_RES Enumeration@@@typedef enum { TCPIP_HTTP_DYN_PRINT_RES_DONE = 0, TCPIP_HTTP_DYN_PRINT_RES_DEFAULT, TCPIP_HTTP_DYN_PRINT_RES_PROCESS_AGAIN, TCPIP_HTTP_DYN_PRINT_RES_AGAIN } TCPIP_HTTP_DYN_PRINT_RES; Enumeration...","GUID-E8EEC0F0-1924-451B-ABCF-1BBAD449C4F5.html@@@1.2.4.1.3.11 TCPIP_ARP_EVENT_HANDLER Type@@@typedef void (* TCPIP_ARP_EVENT_HANDLER)(TCPIP_NET_HANDLE hNet, const IPV4_ADDR* ipAdd, const TCPIP_MAC_ADDR* MACAddr, TCPIP_ARP_EVENT_TYPE evType, const void* param); Type: TCPIP_ARP_EVENT_HANDLER...","GUID-E938DC01-4BA2-4CD7-B16F-BDA586847122.html@@@1.2.6.1.1.3.59 TCPIP_STACK_IndexToNet Function@@@TCPIP_NET_HANDLE TCPIP_STACK_IndexToNet( int netIx ); This function converts an interface number to a network interface handle. The TCP/IP stack should have been initialized by...","GUID-E9805013-EAB9-4597-8A21-4E0CCF4BDC0D.html@@@1.2.1.2.3.88 sockaddr_in6 Structure@@@struct sockaddr_in6 { short sin6_family; uint16_t sin6_port; uint32_t sin6_flowinfo; struct in6_addr sin6_addr; uint32_t sin6_scope_id; }; In the Internet address family. Members Description...","GUID-EA29E72F-4194-41F9-9F19-D8BBA00D62F2.html@@@1.2.4.5.3 Library Interface@@@Name Description Macros TCPIP_IPV4_FRAGMENT_MAX_NUMBER Upper limit for the number of fragments in a fragmented stream This also imposes a limit on how large a packet could be depending on the MTU and...","GUID-EA4EEF60-25F7-4135-B144-5A6A01DB1D0B.html@@@1.2.4.6.3.24 IPV6_TLV_HBHO_ROUTER_ALERT Macro@@@#define IPV6_TLV_HBHO_ROUTER_ALERT 0x05u IPv6 Type-length-value type code for the Hop-by-hop &quot;Router Alert&quot; option...","GUID-EA8A7724-BE94-4AB6-8E67-B271C3019D9D.html@@@1.2.5.4.3.13 DRV_ENCX24J600_Open Function@@@DRV_HANDLE DRV_ENCX24J600_Open(SYS_MODULE_INDEX index, DRV_IO_INTENT intent); Returns a valid handle - If successful INVALID_HANDLE - If unsuccessful The client will call this function to open a...","GUID-EB26FB22-0929-4685-BB76-2AA971E75DB0.html@@@1.2.3.2.3.4 TCPIP_UDP_Bind Function@@@bool TCPIP_UDP_Bind(UDP_SOCKET hUDP, IP_ADDRESS_TYPE addType, UDP_PORT localPort, IP_MULTI_ADDRESS* localAddress); true - Indicates success false - Indicates failure Sockets don&apos;t need specific...","GUID-EB30034A-A50E-47CB-9753-F903E96E269B.html@@@1.2.1.8 DNS Server Module@@@A step-by-step analysis of the DNS Server is as follows: DNS server can be enabled or disabled at run time. If the TCP/IP commands module is built in, it contains a &quot;dnss&quot; command that could be used...","GUID-EB4703E7-B19F-4204-B20F-7806F4FECFEC.html@@@1.2.4.1.3.22 TCPIP_ARP_Task Function@@@void TCPIP_ARP_Task(); Performs ARP module tasks in the TCP/IP stack. The ARP module should have been initialized. None. None...","GUID-EB4FEDE2-B865-4A2B-A345-CE10E6447167.html@@@1.2.4.4.3.8 TCPIP_IGMP_HANDLE Type@@@typedef const void* TCPIP_IGMP_HANDLE; Type: TCPIP_IGMP_HANDLE. A handle that an application needs to use when deregistering a notification handler. This handle can be used by the application after...","GUID-EBE5A9E5-00B5-4EDE-94A9-0A5EF7151066.html@@@1.2.3.2.1 Abstraction Model@@@This module provides software abstraction of the UDP module existent in any TCP/IP Stack implementation. It allows a user to UDP network traffic by opening and using UDP sockets How the Library Works...","GUID-EBF7C270-D8FA-48AE-8F0F-BB49142CADCE.html@@@1.2.1.5.3.2 TCPIP_DHCPS_CLIENT_OPTION_TYPE Enumeration@@@typedef enum { TCPIP_DHCPS_CLIENT_OPTION_ROUTER = 0, TCPIP_DHCPS_CLIENT_OPTION_DNS, TCPIP_DHCPS_CLIENT_OPTION_TIME_SERVER, TCPIP_DHCPS_CLIENT_OPTION_NAME_SERVER, TCPIP_DHCPS_CLIENT_OPTION_T1_RENEWAL...","GUID-EC147DB3-37CB-4CFA-9AE2-2396C7F3E8C9.html@@@1.2.2.1.3.26 NET_PRES_SIGNAL_HANDLE Type@@@typedef const void* NET_PRES_SIGNAL_HANDLE; Net Presentation Signal Handle Type This data type sets the type for the presentation layer signal handle. None...","GUID-EC1B96C9-CB91-4719-A5FC-CEA7FD9CCFC8.html@@@1.2.2.1.3.56 NET_PRES_SocketWasReset Function@@@bool NET_PRES_SocketWasReset(NET_PRES_SKT_HANDLE_T handle); This function is a self-clearing semaphore indicating whether or not a socket has been reset since the previous call. This function calls...","GUID-EC27AF9F-AF72-4DD7-A104-8E7991699A1B.html@@@1.2.4.6.3.60 TCPIP_IPV6_RouterAddressAdd Function@@@bool TCPIP_IPV6_RouterAddressAdd( TCPIP_NET_HANDLE netH, IPV6_ADDR * rAddress, unsigned long validTime, int flags ); This function adds a unicast address as a routing address to a specified interface...","GUID-EC3A55D6-CC2A-4167-A05C-9B7714D8B9F0.html@@@1.2.1.2.3.23 EAI_SYSTEM Macro@@@#define EAI_SYSTEM -11 /* System error returned in `errno&apos;. */ System error returned in &apos;errno&apos...","GUID-EC61BBAA-3FFC-47B7-A661-55E1062B46CF.html@@@1.2.1.6.2 IPv6 Dynamic Host Configuration Protocol (DCHPv6) Configurations@@@DCHPv6 Specific User Configurations Select DHCP Unique Identifier Type: Default DUID type to be used by the client Default value:TCPIP_DHCPV6_DUID_TYPE_LL Symbol TCPIP_DHCPV6_CLIENT_DUID_TYPE...","GUID-EC8A3595-7DFF-45A8-8617-C0FD34EC5F90.html@@@1.2.6.1 TCP/IP Stack Core@@@The core functions for the working of MPLAB\u00AE Harmony TCP/IP Stack is part of this component...","GUID-EC961F58-4F67-4CB1-A47F-22AEE2FC3327.html@@@1.2.5.5.3.8 DRV_GMAC_Initialize Function@@@SYS_MODULE_OBJ DRV_GMAC_Initialize(const SYS_MODULE_INDEX index, const SYS_MODULE_INIT * const init); a valid handle to a driver object, if successful. SYS_MODULE_OBJ_INVALID if initialization failed...","GUID-ECBD9274-F169-4E39-A7B9-378AF111097E.html@@@1.2.2.1.3.41 NET_PRES_SocketInfoGet Function@@@bool NET_PRES_SocketInfoGet(NET_PRES_SKT_HANDLE_T handle, void * info); true - Indicates success false - Indicates failure This function calls the transport layer&apos;s SocketInfoGet, if it exists. A...","GUID-ECDC8391-8950-4819-A1A9-C9961FAA4A28.html@@@1.2.1.22.3.2 TCPIP_TFTP_CMD_TYPE Enumeration@@@typedef enum _TFTP_CMD_TYPE { TFTP_CMD_PUT_TYPE = 0, TFTP_CMD_GET_TYPE, TFTP_CMD_NONE } TCPIP_TFTP_CMD_TYPE; Enumeration: TCPIP_TFTP_CMD_TYPE. These enum values are issued from the command line...","GUID-ECDD8777-5AD1-4A94-993F-7822E2DD61FB.html@@@1.2.1.5.3.5 TCPIP_DHCPS_Disable Function@@@TCPIP_DHCPS_RES TCPIP_DHCPS_Disable(TCPIP_NET_HANDLE hNet) Disables the DHCP Server for the specified interface. This function disables the DHCP Server for the specified interface. If it is already...","GUID-ECE26595-BE89-43D8-99A6-EED06D60F483.html@@@1.2.4.6.3.50 TCPIP_IPV6_MulticastListenerAdd Function@@@IPV6_ADDR_STRUCT * TCPIP_IPV6_MulticastListenerAdd( TCPIP_NET_HANDLE hNet, IPV6_ADDR * address ); This function is used to add the IPv6 multicast address to an interface. TCPIP_IPV6_Initialize()...","GUID-ED10528A-46BF-49A7-ABB6-16E47CAC99E5.html@@@1.2.1.22.1 Abstraction Model@@@TFTP Client Server Communication TFTP Write Request (WRQ) The following diagram illustrates a write request. TFTP Read Request (RRQ) The following diagram illustrates a read request...","GUID-ED18B0C0-F614-4B29-8EA7-114DBFAA74CF.html@@@1.2.3.1.3.26 TCPIP_TCP_Find Function@@@uint16_t TCPIP_TCP_Find( TCP_SOCKET hTCP, uint8_t cFind, uint16_t wStart, uint16_t wSearchLen, bool bTextCompare ); This function finds the first occurrence of a byte in the TCP RX buffer. It can be...","GUID-ED1CD7AF-39DA-44D2-9B94-837CA0567DC6.html@@@1.2.5.2.23 TCPIP_MAC_LINK_MTU Enumeration@@@typedef enum { TCPIP_MAC_LINK_MTU_DEFAULT = 1500, TCPIP_MAC_LINK_MTU_ETH = 1500, TCPIP_MAC_LINK_MTU_WLAN = 1500 } TCPIP_MAC_LINK_MTU; Link MTU per MAC Type. Lists the Maximum Transmission Unit...","GUID-ED48CCA1-93DB-4F99-8ECB-CE1874AE2414.html@@@1.2.1.13.3.24 TCPIP_HTTP_NET_ConnectionIndexGet Function@@@int TCPIP_HTTP_NET_ConnectionIndexGet( TCPIP_HTTP_NET_CONN_HANDLE connHandle ); This function will return the index of the requested HTTP connection. None. Parameters Description connHandle The HTTP...","GUID-ED554FEC-7E5C-4C06-AC60-077D458A16B1.html@@@1.2.2.1.3.38 NET_PRES_SocketEncryptSocket Function@@@bool NET_PRES_SocketEncryptSocket(NET_PRES_SKT_HANDLE_T handle); true - If the call was successful false - If the call was unsuccessful A socket needs to have been opened by NET_PRES_SocketOpen...","GUID-ED921CF6-88DA-4AA8-95D6-66595A339764.html@@@1.2.5.2.9 TCPIP_MAC_EventAcknowledge Function@@@bool TCPIP_MAC_EventAcknowledge( DRV_HANDLE hMac, TCPIP_MAC_EVENT macEvents ); This function acknowledges and re-enables processed events. Multiple events can be &quot;ORed&quot; together as they are processed...","GUID-ED950733-AA0B-4753-8DDD-F7A3B209C381.html@@@1.2.5.9.3.7 DRV_MIIM_Deinitialize Function@@@void DRV_MIIM_Deinitialize(SYS_MODULE_OBJ object); None. This function deinitializes the specified instance of the MIIM driver module, disabling its operation (and any hardware)and invalidates all of...","GUID-EDB7B286-21C6-4C78-A40C-3F49946A933E.html@@@1.2.6.1.1.3.76 TCPIP_STACK_NetBIOSName Function@@@const char* TCPIP_STACK_NetBIOSName( TCPIP_NET_HANDLE netH ); This function returns the network interface NetBIOS name. The TCP/IP stack should have been initialized by TCPIP_STACK_Initialize() and...","GUID-EE09064C-478A-4CE7-85A7-5D304FE2A8D4.html@@@1.2.4.1.3.8 TCPIP_ARP_EntryRemoveAll Function@@@TCPIP_ARP_RESULT TCPIP_ARP_EntryRemoveAll( TCPIP_NET_HANDLE hNet ); This function removes all existent mappings from the selected interface cache. The ARP module should have been initialized...","GUID-EE292D18-2DE6-478E-AAE1-74C69A31459E.html@@@1.2.1.5.3 Library Interface@@@Name Description Macros TCPIP_DHCPS_TASK_PROCESS_RATE DHCPS task processing rate, in milliseconds. The DHCPS module will process a timer event with this rate for maintaining its own queues, processing...","GUID-EE9E9526-FB8A-4498-BF96-F820EE9C40CF.html@@@1.2.5.9.3.21 DRV_MIIM_OperationAbort Function@@@DRV_MIIM_RESULT DRV_MIIM_OperationAbort(DRV_HANDLE handle, DRV_MIIM_OPERATION_HANDLE opHandle); DRV_MIIM_RES_OK for success; operation has been aborted &lt; 0 - an error has occurred and the operation...","GUID-EF46A6E9-E73E-4228-BD7E-FFFF27B07096.html@@@1.2.6.1.1.3.80 TCPIP_STACK_NetDefaultGet Function@@@TCPIP_NET_HANDLE TCPIP_STACK_NetDefaultGet(); This function returns the current default network interface in the TCP/IP stack. This is the interface on which packets will be transmitted when the...","GUID-EF627C2D-2775-4DFF-B619-37C3AE56660C.html@@@1.2.3.2.3.22 TCPIP_UDP_PACKET_HANDLER Type@@@typedef bool (* TCPIP_UDP_PACKET_HANDLER)(TCPIP_NET_HANDLE hNet, struct _tag_TCPIP_MAC_PACKET* rxPkt, const void* hParam); true - if the packet is processed by the external handler. In this case the...","GUID-EF8AE58F-3351-4E3E-AE4B-E3A4517DCEB8.html@@@1.2.1.8.3.11 TCPIP_DNSS_EntryGet Function@@@TCPIP_DNSS_RESULT TCPIP_DNSS_EntryGet( uint8_t * hostName, IP_ADDRESS_TYPE type, int index, IP_MULTI_ADDRESS* pGetAdd, uint32_t * ttltime ); This function is used to get the DNS server IPv4 or IPv6...","GUID-EFC0FD43-C80F-4CE7-9D42-978140E3F09C.html@@@1.2.3.2 UDP Module@@@UDP is a standard transport layer_protocol described in RFC 768. It provides fast but unreliable data-gram based transfers over networks, and forms the foundation SNTP, SNMP, DNS, and many other...","GUID-EFCA359C-66A7-42E1-A094-E41854A9C37F.html@@@1.2.5.8.4.37 DRV_ETHPHY_Tasks Function@@@void DRV_ETHPHY_Tasks(SYS_MODULE_OBJ object); None This function is used to maintain the driver&apos;s internal state machine and implement its ISR for interrupt-driven implementations. This function is...","GUID-EFE56862-9029-465A-8CE5-BE62D3B4655E.html@@@1.2.5.8.4.29 DRV_ETHPHY_Reinitialize Function@@@void DRV_ETHPHY_Reinitialize(SYS_MODULE_OBJ object, const SYS_MODULE_INIT * const init); None. This function reinitializes the driver and refreshes any associated hardware settings using the...","GUID-F05182E4-B102-4775-A746-1FF37F465312.html@@@Customer Support@@@Users of Microchip products can receive assistance through several channels: Distributor or Representative Local Sales Office Embedded Solutions Engineer (ESE) Technical Support Customers should...","GUID-F0687E5F-50D9-4E2D-8281-39B30D488230.html@@@1.2.6.1.1.3.15 TCPIP_Helper_IsPrivateAddress Function@@@bool TCPIP_Helper_IsPrivateAddress( uint32_t ipv4Address ); This function checks if the passed in IPv4 address is a private or a routable address. None. Parameters Description ipv4Address IPv4 address...","GUID-F072945C-8587-42FA-B473-E2D96465A622.html@@@1.2.1.10.3.33 TCPIP_FTPC_RETURN_TYPE Enumeration@@@C typedef enum { TCPIP_FTPC_RET_OK = 0, TCPIP_FTPC_RET_BUSY = 1, TCPIP_FTPC_RET_FAILURE = -1, TCPIP_FTPC_RET_NOT_CONNECT = -2, TCPIP_FTPC_RET_NOT_LOGIN = -3 } TCPIP_FTPC_RETURN_TYPE; Enumeration...","GUID-F0ACFDB6-C345-4549-A292-A001FFC4C503.html@@@1.2.1.12.2.13 TCPIP_HTTP_CurrentConnectionCallbackPosSet Function@@@void TCPIP_HTTP_CurrentConnectionCallbackPosSet( HTTP_CONN_HANDLE connHandle, uint32_t callbackPos ); This function will set the current value of the callback position indicator for the HTTP...","GUID-F1036B24-FE86-4897-BC92-70F7118DECB1.html@@@1.2.5.2.1 _tag_MAC_DATA_SEGMENT Structure@@@struct _tag_MAC_DATA_SEGMENT { struct _tag_MAC_DATA_SEGMENT* next; uint8_t* segLoad; uint16_t segLen; uint16_t segSize; uint16_t segFlags; uint16_t segLoadOffset; uint16_t segAllocSize; uint8_t...","GUID-F246FB89-BF12-48D4-B25C-AE8239E4C104.html@@@1.2.5.5.3.19 DRV_GMAC_StatisticsGet Function@@@TCPIP_MAC_RES DRV_GMAC_StatisticsGet(DRV_HANDLE hMac, TCPIP_MAC_RX_STATISTICS* pRxStatistics, TCPIP_MAC_TX_STATISTICS* pTxStatistics); TCPIP_MAC_RES_OK if all processing went on OK...","GUID-F2484EF9-7914-43EE-A5B7-4FFDC27C8135.html@@@1.2.4.6.3 Library Interface@@@Name Description Functions TCPIP_IPV6_HandlerRegister Registers an IPv6 event handler callback function. TCPIP_IPV6_HandlerDeregister Deregisters an IPv6 event handler callback function...","GUID-F2866270-6C0F-4DD8-8F21-629B5D01F42D.html@@@1.2.4.6.3.37 TCPIP_IPV6_DASSourceAddressSelect Function@@@IPV6_ADDR_STRUCT * TCPIP_IPV6_DASSourceAddressSelect( TCPIP_NET_HANDLE hNetIf, const IPV6_ADDR * dest, IPV6_ADDR * requestedSource ); The IPv6 policy table is used to select the destination address...","GUID-F29B2C4E-4AA6-4FE2-8931-6D59E301C921.html@@@1.2.1.24 Zeroconf Module@@@Zero configuration (Zeroconf), provides a mechanism to ease the configuration of a device on a network. It also provides for a more human-like naming convention, instead of relying on IP addresses...","GUID-F35BADF5-5469-4970-B3C5-52AB1E2287AB.html@@@1.2.5.4.3 Library Interface@@@Name Description System Interaction FunctionsFunctions DRV_ENCX24J600_Deinitialize Deinitializes the ENCx24J600 Driver Instance. DRV_ENCX24J600_Initialize Initializes the ENCx24J600 Driver Instance...","GUID-F3938B34-ED7E-4E29-BA14-7A320B60F587.html@@@1.2.4.5.3.27 TCPIP_IPV4_PROCESS_HANDLE Type@@@typedef const void* TCPIP_IPV4_PROCESS_HANDLE; Type: TCPIP_IPV4_PROCESS_HANDLE. Definition of a packet processing handle used for packet processing registration by the IPv4 clients...","GUID-F3D092A1-8D3D-467E-AF78-3AAE439474C9.html@@@1.2.1.10.3.21 TCPIP_FTPC_Get_Status Function@@@void TCPIP_FTPC_Get_Status(TCPIP_FTPC_CONN_HANDLE_TYPE ftpcHandle, TCPIP_FTPC_STATUS_TYPE * ftpcStatus); None This function returns the current state of FTP Client None FTPC module should have been...","GUID-F3E078F7-6F1D-4D25-A999-F0F3E40A5971.html@@@1.2.4.2.3 Library Interface@@@Name Description Macros TCPIP_ICMP_CLIENT_USER_NOTIFICATION allow ICMP client user notification if enabled, the TCPIP_ICMP_CallbackRegister/TCPIP_ICMP_CallbackDeregister functions exist and can be...","GUID-F42A84D9-F584-41BA-9185-E2B4AD880031.html@@@1.2.3.1.3.9 TCP_SOCKET_OPTION Enumeration@@@typedef enum { TCP_OPTION_LINGER, TCP_OPTION_KEEP_ALIVE, TCP_OPTION_RX_BUFF, TCP_OPTION_TX_BUFF, TCP_OPTION_RX_TMO, TCP_OPTION_TX_TMO, TCP_OPTION_NODELAY, TCP_OPTION_EXCLUSIVE_ADDRESS...","GUID-F42E69C0-5551-4CA3-B79B-968F2860F2F5.html@@@1.2.4.6.2 Internet Protocol (IP) Version 6 Configurations@@@IPv6 Specific User Configurations IPv6 Task Rate (in msec): IPv6 task processing rate, in milliseconds. The IPv6 module will process a timer event with this rate for maintaining its own queues...","GUID-F45EEB2E-070E-474F-BFFA-1ACB41751BB2.html@@@1.2.1.13.3.26 TCPIP_HTTP_NET_ConnectionHasArgsSet Function@@@void TCPIP_HTTP_NET_ConnectionIsAuthorizedSet( TCPIP_HTTP_NET_CONN_HANDLE connHandle, uint8_t auth ); This function sets the authorization status for the current HTTP connection. This has to be one of...","GUID-F4967D82-E900-429B-900D-A7C6E07A5E11.html@@@1.2.5.2.6 TCPIP_MAC_DATA_SEGMENT Structure@@@typedef struct _tag_MAC_DATA_SEGMENT { struct _tag_MAC_DATA_SEGMENT* next; uint8_t* segLoad; uint16_t segLen; uint16_t segSize; uint16_t segFlags; uint16_t segLoadOffset; uint16_t segAllocSize...","GUID-F497CC64-1974-4B8D-A611-F22E1AAF2917.html@@@1.2.1.2.3.77 SO_RCVTIMEO Macro@@@#define SO_RCVTIMEO 20 //Set the Receive Timeout - Not yet supported Set the receive timeout. Not yet supported...","GUID-F498D777-A055-406B-9DF6-6F0AA6502AED.html@@@1.2.4.2.3.11 TCPIP_ICMP_MODULE_CONFIG Structure@@@typedef struct { void* reserved; } TCPIP_ICMP_MODULE_CONFIG; ICMP Module Configuration Structure Typedef. Provides a placeholder for ICMP module configuration. None...","GUID-F4B6992A-1C29-48A9-9EA3-EDE9F88B7677.html@@@1.2.1.5.3.9 TCPIP_DHCPS_EVENT_TYPE Enumeration@@@typedef enum { TCPIP_DHCPS_EVENT_NONE = 0, TCPIP_DHCPS_EVENT_ECHO_PROBE_SENT, TCPIP_DHCPS_EVENT_DISCOVER, TCPIP_DHCPS_EVENT_REQUEST_OFFERRED, TCPIP_DHCPS_EVENT_REQUEST_RENEW...","GUID-F4DF749A-0F8C-4482-8661-C005A0BE0CF4.html@@@1.2.5.8.4 Library Interface@@@Name Description Macros DRV_ETHPHY_CLIENTS_NUMBER Selects the maximum number of clients. DRV_ETHPHY_INDEX Ethernet PHY static index selection. DRV_ETHPHY_INSTANCES_NUMBER Selects the maximum number of...","GUID-F53C26EA-02E1-4A28-AFDE-D6899CC24A82.html@@@1.2.1.13.3.14 TCPIP_HTTP_NET_ConnectionCallbackPosSet Function@@@void TCPIP_HTTP_NET_ConnectionCallbackPosSet( TCPIP_HTTP_NET_CONN_HANDLE connHandle, uint32_t callbackPos ); This function will set the current value of the callback position indicator for the HTTP...","GUID-F54F388D-F63E-44C5-8F04-CC6ADEE3E514.html@@@1.2.2.1.3.23 NET_PRES_INVALID_SOCKET Macro@@@C #define NET_PRES_INVALID_SOCKET (-1) Macro: NET_PRES_INVALID_SOCKET Indicates that the socket is invalid or could not be opened...","GUID-F54F6813-6646-4E0C-A080-B168BC161ED5.html@@@1.2.1.3.3.12 TCPIP_DHCP_IsActive Function@@@bool TCPIP_DHCP_IsActive( TCPIP_NET_HANDLE hNet ); This function returns the current state of the DHCP client on the specified interface. DHCP module should have been initialized. Parameters...","GUID-F5A63CE1-2732-41BE-9F62-8284FBDE4FFD.html@@@1.2.4.6.3.20 IPV6_PACKET_ACK_FNC Type@@@typedef bool (* IPV6_PACKET_ACK_FNC)(void*, bool, const void*); Type: IPV6_PACKET_ACK_FNC. Packet allocation and deallocation acknowledgment callback function. Parameters Description void * Pointer to...","GUID-F61FBFCB-7367-4392-A4CE-28F4D9281FAA.html@@@1.2.3.2.3.34 TCPIP_UDP_SignalHandlerDeregister Function@@@bool TCPIP_UDP_SignalHandlerDeregister(UDP_SOCKET s, TCPIP_UDP_SIGNAL_HANDLE hSig); true - if the call succeeds false - if no such handler is registered Deregisters the UDP socket signal handler. hSig...","GUID-F684C26E-366D-47B0-8E91-BC5409837F2F.html@@@1.2.1.12.2.36 TCPIP_HTTP_CurrentConnectionUserDataSet Function@@@void TCPIP_HTTP_CurrentConnectionUserDataSet( HTTP_CONN_HANDLE connHandle, const void* uData ); This function will set the user data value for the current HTTP connection. This data belongs to the...","GUID-F68CA77D-0C0A-4E0F-97E6-75F85EB415B9.html@@@1.2.1.20.3.2 TCPIP_SNTP_ConnectionParamSet Function@@@TCPIP_SNTP_RESULT TCPIP_SNTP_ConnectionParamSet( TCPIP_NET_HANDLE netH, IP_ADDRESS_TYPE ntpConnType, const char* ntpServer ); This function sets the parameters for the next SNTP connections. The...","GUID-F6B8C2BE-93BB-482F-9546-12FB7912C865.html@@@1.2.1.21.3.5 TCPIP_TELNET_ConnectionInfoGet Function@@@bool TCPIP_TELNET_ConnectionInfoGet( uint16_t connIx, TCPIP_TELNET_CONN_INFO* pInfo ); This function gets information about a telnet connection. The Telnet module should have been initialized...","GUID-F6CD1F7F-172B-4867-A730-A12658524A73.html@@@1.2.1.2.3.8 AF_INET Macro@@@#define AF_INET 2 // Internet Address Family - IPv4, UDP, TCP, etc. Internet Address Family - IPv4, UDP, TCP, etc...","GUID-F6FBEB43-2BBC-4541-A1FD-E600DDA99D87.html@@@1.2.1.18.2 Simple Mail Transfer Protocol Client (SMTPC) Configurations@@@SMTPC Specific User Configurations Number of Mail Connections to be Created: Number of mail connections (sockets) to be created Each mail message requires a mail connection Adjust based on the number...","GUID-F77D6148-BF49-4712-B38A-0A482554D783.html@@@1.2.2.1.3.63 NET_PRES_TRANS_OPTION_T Enumeration@@@typedef enum { NET_PRES_OPT_UNKNOWN } NET_PRES_TRANS_OPTION_T; MPLAB Harmony Networking Presentation Layer Option type Defines the enumeration for the type of options. This enumeration is not used...","GUID-F7821B0E-C02F-483A-9E79-51A96DA28785.html@@@1.2.3.2.3.13 TCPIP_UDP_Flush Function@@@uint16_t TCPIP_UDP_Flush(UDP_SOCKET hUDP); The number of bytes that currently were in the socket TX buffer and have been flushed. Otherwise, 0 if the packet could not be transmitted: invalid socket...","GUID-F7839D3A-8587-4692-9177-B06FA803FF4D.html@@@1.2.5.7.1 Abstraction Model@@@The Ethernet Controller provides the modules needed to implement a 10/100 Mbps Ethernet node using an external Ethernet PHY chip. The PHY chip provides a digital-analog interface as part of the...","GUID-F7857D7E-1D81-43D5-B705-788309082A19.html@@@1.2.1.13.3.47 TCPIP_HTTP_NET_IO_RESULT Enumeration@@@typedef enum { TCPIP_HTTP_NET_IO_RES_DONE = 0u, TCPIP_HTTP_NET_IO_RES_NEED_DATA, TCPIP_HTTP_NET_IO_RES_WAITING, TCPIP_HTTP_NET_IO_RES_ERROR } TCPIP_HTTP_NET_IO_RESULT; Result states for execution...","GUID-F7BE1385-D779-4113-849A-912F8FB3A552.html@@@1.2.5.8.4.9 DRV_ETHPHY_HWConfigFlagsGet Function@@@DRV_ETHPHY_RESULT DRV_ETHPHY_HWConfigFlagsGet(DRV_HANDLE handle, DRV_ETHPHY_CONFIG_FLAGS* pFlags); DRV_ETHPHY_RES_OK - if the configuration flags successfully stored at pFlags DRV_ETHPHY_RESULT error...","GUID-F811235C-7F42-45CF-8A73-2BC279A97F08.html@@@1.2.1.13.3.29 TCPIP_HTTP_NET_ConnectionPostNameRead Function@@@TCPIP_HTTP_NET_READ_STATUS TCPIP_HTTP_NET_ConnectionPostNameRead( TCPIP_HTTP_NET_CONN_HANDLE connHandle, uint8_t* cData, uint16_t wLen ); This function reads a name from a URL encoded string in the...","GUID-F8369E46-D7EB-4FC0-810C-BC5641CFC4BA.html@@@1.2.1.12.2.9 TCPIP_HTTP_CurrentConnectionByteCountDec Function@@@void TCPIP_HTTP_CurrentConnectionByteCountDec( HTTP_CONN_HANDLE connHandle, uint32_t byteCount ); This function decrements the current value of the counter showing the number of bytes available to be...","GUID-F837EC61-F4E6-458F-8B87-ED8158565C14.html@@@1.2.6.1.1.3.103 TCPIP_STACK_Status Function@@@SYS_STATUS TCPIP_STACK_Status( SYS_MODULE_OBJ object ); This function provides the current status of the TCPIP stack moodule. The TCPIP_STACK_Initialize() function must have been called before calling...","GUID-F8590EEC-B394-4BEE-8F0A-6C4D04BDB52B.html@@@1.2.1.12.2.1 HTTP_CONN_HANDLE Type@@@typedef const void* HTTP_CONN_HANDLE; HTTP connection identifier, handle of a HTTP connection...","GUID-F8AB0C58-73BC-4599-95E1-8450595209AB.html@@@1.2.5.9.3.11 DRV_MIIM_INIT Structure@@@struct DRV_MIIM_INIT { SYS_MODULE_INIT moduleInit; uintptr_t ethphyId; }; Members Description SYS_MODULE_INIT moduleInit; System module initialization uintptr_t ethphyId; Identifies peripheral...","GUID-F8D3500E-80D6-419C-958A-CCB9C85B6CAF.html@@@1.2.1.22.3.11 TCPIP_TFTPC_SetCommand Function@@@TCPIP_TFTPC_OPERATION_RESULT TCPIP_TFTPC_SetCommand( IP_MULTI_ADDRESS* mAddr, IP_ADDRESS_TYPE ipType, TCPIP_TFTP_CMD_TYPE cmdType, const char * fileName ); This function is used to set the client...","GUID-F93D3025-155A-4C6B-B235-4389B8A6BE59.html@@@1.2.5.8.4.13 DRV_ETHPHY_Initialize Function@@@SYS_MODULE_OBJ DRV_ETHPHY_Initialize(const SYS_MODULE_INDEX index, const SYS_MODULE_INIT * const init); a valid handle to a driver object, if successful. SYS_MODULE_OBJ_INVALID if initialization...","GUID-F93DE752-D623-45C5-B9E3-70E0ACB0AAAC.html@@@1.2.1.10.3.11 TCPIP_FTPC_DATA_EVENT_CALLBACK_TYPE Type@@@typedef bool (* TCPIP_FTPC_DATA_EVENT_CALLBACK_TYPE)(TCPIP_FTPC_CONN_HANDLE_TYPE ftpcHandle, TCPIP_FTPC_DATA_EVENT_TYPE ftpcEvent, TCPIP_FTPC_CMD cmd, char * databuff, uint16_t * datalen); Return...","GUID-F9553E4B-4160-4AF0-A3DC-3054A3C2FAF1.html@@@1.2.5.6.3.20 MAC_DRVR_ConfigGet Function@@@size_t MAC_DRVR_ConfigGet( DRV_HANDLE hMac, void * configBuff, size_t buffSize, size_t * pConfigSize ); number of bytes copied into the supplied storage buffer This function will get the current MAC...","GUID-F9677C23-CF61-4D8D-98C0-BDF0783F8A01.html@@@1.2.1.13.3.52 TCPIP_HTTP_NET_SSIVariableGet Function@@@const char* TCPIP_HTTP_NET_SSIVariableGet( const char* varName, TCPIP_HTTP_DYN_ARG_TYPE* pVarType, int32_t* pVarInt ); This function performs a search for the corresponding SSI variable name and...","GUID-F975E40B-3D00-4C7D-B0B3-8049012CF086.html@@@1.2.1.11.2.2 TCPIP_FTP_ServerTask Function@@@void TCPIP_FTP_ServerTask(); This function performs FTP module tasks in the TCP/IP stack. The FTP module should have been initialized. None. None...","GUID-F9877B54-0920-42F5-BF63-A234CAAF3673.html@@@1.2.4.6.3.47 TCPIP_IPV6_IsFragmentationEnabled Function@@@TCPIP_IPV6_IsFragmentationEnabled(); This function is a helper to return the IPv6 fragmentation support. IPv6 properly initialized. True - If the fragmentation is enabled and supported by the IPv6...","GUID-F993B8B1-BE2B-42E7-85BC-D5D6D2EA611B.html@@@1.2.5.2.21 TCPIP_MAC_INIT Structure@@@typedef struct { SYS_MODULE_INIT moduleInit; const TCPIP_MAC_MODULE_CTRL* const macControl; const void* const moduleData; } TCPIP_MAC_INIT; MAC Device Driver Initialization Data. This data structure...","GUID-F9C670E7-75A9-43A9-ACC5-B3E73B1B404F.html@@@1.2.5.9.3.6 DRV_MIIM_COMMANDS Macro@@@#define DRV_MIIM_COMMANDS 0 MIIM PHY Commands Adds a MIIM command to the TCP/IP command menu allowing to read/write a PHY register. Set the value to 1 to enable, 0 to disable the feature. Currently...","GUID-F9E03BA6-6E20-4AB5-8F60-9C17E98E36FD.html@@@1.2.1.13.3.53 TCPIP_HTTP_NET_SSIVariableGetByIndex Function@@@const char* TCPIP_HTTP_NET_SSIVariableGetByIndex( int varIndex, const char** pVarName, TCPIP_HTTP_DYN_ARG_TYPE* pVarType, int32_t* pVarInt ); This function accesses the corresponding SSI variable by...","GUID-FA483390-6E11-410E-8160-6FC21629B27A.html@@@1.2.1.15.2 NetBIOS Name Service (NBNS) Configurations@@@NBNS Specific User Configurations NBNS Task Rate (in msec): NBNS task processing rate, in milliseconds. The NBNS module will process a timer event with this rate for maintaining its own queues...","GUID-FA70041E-B99C-45F8-A3CB-B80D6F5B5052.html@@@1.2.1.10.3.41 TCPIP_FTPC_TASK_TICK_RATE Macro@@@#define TCPIP_FTPC_TASK_TICK_RATE (5) The FTP Client task rate in milliseconds. The lower the rate (higher the frequency) the higher the module priority and higher module performance can be obtained...","GUID-FAB54690-5400-44CA-879C-52C16B4B9745.html@@@1.2.1.12.2.33 TCPIP_HTTP_CurrentConnectionUploadBufferStartGet Function@@@const void* TCPIP_HTTP_CurrentConnectionUploadBufferStartGet( HTTP_CONN_HANDLE connHandle ); This function will return the start address of current connection upload buffer. None. Parameters...","GUID-FB1FB11A-61F5-4B63-9F79-57A68BD28438.html@@@1.2.5.2.52 TCPIP_MAC_STATISTICS_REG_ENTRY Structure@@@typedef struct { char registerName[36]; uint32_t registerValue; } TCPIP_MAC_STATISTICS_REG_ENTRY; MAC Hardware Statistics Register Entry. This structure defines an interface for gathering the MAC...","GUID-FBB9A9D7-3D9D-468A-BB42-2F9C7BC65FB3.html@@@1.2.5.8.4.23 DRV_ETHPHY_NegotiationResultGet Function@@@C DRV_ETHPHY_RESULT DRV_ETHPHY_NegotiationResultGet(DRV_HANDLE handle, DRV_ETHPHY_INTERFACE_INDEX portIndex, DRV_ETHPHY_NEGOTIATION_RESULT* pNegResult); DRV_ETHPHY_RES_PENDING operation is ongoing an...","GUID-FBBEF335-E6EC-41FA-A1D2-0FBC410116DE.html@@@1.2.1.8.3.7 TCPIP_DNSS_CacheEntryRemove Function@@@TCPIP_DNSS_RESULT TCPIP_DNSS_CacheEntryRemove( const char* name, IP_ADDRESS_TYPE type, IP_MULTI_ADDRESS* pAdd ); This function is used for command prompt dnsDelSrv and to delete a entry IPv4 or IPv6...","GUID-FBD41634-4315-405A-9D6D-7AF2296096AF.html@@@1.2.1.6.3.16 TCPIP_DHCPV6_MODULE_CONFIG Structure@@@typedef struct { TCPIP_DHCPV6_CONFIG_FLAGS configFlags; uint16_t dhcpCliPort; uint16_t dhcpSrvPort; uint16_t duidType; uint16_t nIanaDcpts; uint16_t nIataDcpts; uint16_t nFreeDcpts; uint32_t...","GUID-FC4974C8-56F6-430F-AE98-9409FDE066CF.html@@@1.2.6.1.1.3.97 TCPIP_STACK_NetUp Function@@@bool TCPIP_STACK_NetUp( TCPIP_NET_HANDLE netH, const TCPIP_NETWORK_CONFIG* pUsrConfig ); This function brings a network interface up and perform its initialization. The TCP/IP stack should have been...","GUID-FC6E0701-F309-47D1-9F2D-0253AADF48FC.html@@@1.2.1.16.3 Library Interface@@@Name Description Macros TCPIP_REBOOT_MESSAGE the mesage needed to be sent accross the net to reboot the machine TCPIP_REBOOT_SAME_SUBNET_ONLY For improved security, you might want to limit reboot...","GUID-FC9335FB-6AE1-4F4A-B484-45B19D882B5A.html@@@1.2.3.1.3.53 TCPIP_TCP_SocketTraceSet Function@@@bool TCPIP_TCP_SocketTraceSet( TCP_SOCKET sktNo, bool enable ); This function enables or disables the trace status of the specified socket. The trace functionality needs to be enabled in the TCP...","GUID-FC9871E4-046B-4E18-B026-4B0237848D30.html@@@1.2.6.1.1.3.25 TCPIP_Helper_StringToIPAddress Function@@@bool TCPIP_Helper_StringToIPAddress( const char* str, IPV4_ADDR* IPAddress ); This function parses a dotted-quad decimal IP address string into an IPV4_ADDR struct. The output result is big-endian. IP...","GUID-FCA5F18C-18CF-436D-9050-AD57B705A8E9.html@@@1.2.6.1.1.3.6 TCPIP_Helper_Base64Encode Function@@@uint16_t TCPIP_Helper_Base64Encode( const uint8_t* sourceData, uint16_t sourceLen, uint8_t* destData, uint16_t destLen ); This function encodes a binary array to base-64. sourceData, destData - valid...","GUID-FCAE4AE8-9FF9-46FC-AA47-3AF9E35F1763.html@@@1.2.1.13.3.7 TCPIP_HTTP_NET_ActiveConnectionCountGet Function@@@int TCPIP_HTTP_NET_ActiveConnectionCountGet( int* pOpenCount ); This function will return the number of active and total opened HTTP connections at the current time. None. Parameters Description...","GUID-FCD1F6D0-6FA9-4EDF-8230-0F122BB3AB89.html@@@1.2.1.20.3.11 TCPIP_SNTP_RESULT Enumeration@@@typedef enum { SNTP_RES_OK, SNTP_RES_PROGRESS, SNTP_RES_BUSY = -1, SNTP_RES_TSTAMP_ERROR = -2, SNTP_RES_TSTAMP_STALE = -3, SNTP_RES_SKT_ERR = -4, SNTP_RES_SKT_BIND_ERR = -5, SNTP_RES_NTP_SERVER_TMO =...","GUID-FCEED70A-C1F4-4CF9-8EB4-07C69A30F3B0.html@@@1.2.5.8.4.27 DRV_ETHPHY_PERIPHERAL_ID Macro@@@#define DRV_ETHPHY_PERIPHERAL_ID ETHPHY_ID_1 Ethernet PHY Peripheral ID Selection Defines an override of the peripheral ID, using macros. Some devices also support ETHPHY_ID_0...","GUID-FD6BE11C-630D-410B-9A3B-D3EC1B499916.html@@@1.2.1.19.3.18 STD_BASED_SNMP_SECURITY_MODEL Enumeration@@@typedef enum { ANY_SECUTIRY_MODEL = 0x00, SNMPV1_SECURITY_MODEL = 0X01, SNMPV2C_SECURITY_MODEL = 0X02, SNMPV3_USM_SECURITY_MODEL = 0X03 } STD_BASED_SNMP_SECURITY_MODEL; Enumeration...","GUID-FDC47A16-9CB8-4026-BC5A-6BA077766D9B.html@@@1.2.1.2.3.30 h_errno Variable@@@int h_errno; Error location for host lookup errors...","GUID-FDCC89BA-55AA-441D-B734-CB3EA482EDE4.html@@@1.2.1.7.3.7 TCPIP_DNS_CLIENT_CACHE_UNSOLVED_ENTRY_TMO Macro@@@#define TCPIP_DNS_CLIENT_CACHE_UNSOLVED_ENTRY_TMO (10) Time-out for the a unsolved name, in seconds. The name resolution will be aborted if the TMO elapsed and the name could not be solved Should be...","GUID-FE08C0E8-8C57-4909-A9B7-CED7BD8CBDC4.html@@@1.2.4.5.3.16 TCPIP_IPV4_PacketFilterClear Function@@@TCPIP_IPV4_FILTER_TYPE TCPIP_IPV4_PacketFilterClear( TCPIP_IPV4_FILTER_TYPE filtType ); The function will clear the IPv4 packet filters. The filters that are present in the mask will be cleared. Other...","GUID-FE739F59-787D-4D3E-8A4C-DD7DD7405D5E.html@@@1.2.1.12.2.24 TCPIP_HTTP_CurrentConnectionPostSmSet Function@@@void TCPIP_HTTP_CurrentConnectionPostSmSet( HTTP_CONN_HANDLE connHandle, uint16_t state ); This function sets the POST state machine state for the connection defined by connHandle. This state is...","GUID-FEB9C976-2A25-4731-82E3-FFD3FD7B1EB2.html@@@1.2.5.10.3.7 PPP_EVENT_HANDLER Type@@@typedef void (*PPP_EVENT_HANDLER)(DRV_HANDLE hMac, PPP_EVENT event, const uint8_t* pppFrame, const void* param); Prototype of a PPP event handler. Clients can register a handler with the PPP...","GUID-FEBA79BB-883C-4FC8-81A5-7E2AF9C95557.html@@@1.2.1.2.3.56 IPV6_MULTICAST_IF Macro@@@#define IPV6_MULTICAST_IF 17 //Set the Interface that multicast IPv6 packets should be sent on - Not yet supported Set the interface that multicast IPv6 packets should be sent on. Not yet supported...","GUID-FF2D219A-C393-4997-BB07-0E154846FA02.html@@@1.2.4.4.3.2 TCPIP_IGMP_EVENT_TYPE Enumeration@@@typedef enum { TCPIP_IGMP_EVENT_NONE = 0x0000, TCPIP_IGMP_EVENT_PACKET_EXCEED_MTU = 0x0001, TCPIP_IGMP_EVENT_PACKET_ALLOC_ERROR = 0x0002, TCPIP_IGMP_EVENT_PACKET_TRANSMIT_ERROR = 0x0004...","GUID-FF3F4B34-30C8-46CE-9DC1-B161BBFC621B.html@@@1.2.3.1.3.41 TCPIP_TCP_PutIsReady Function@@@uint16_t TCPIP_TCP_PutIsReady( TCP_SOCKET hTCP ); Call this function to determine how many bytes can be written to the TCP TX buffer. If this function returns zero, the application must return to the...","GUID-FF621AC4-11D0-4795-90D5-CEA88A3AC282.html@@@1.2.5.7.3.18 DRV_ETHMAC_PIC32MACRxFilterHashTableEntrySet Function@@@drv_ethmac.h TCPIP_MAC_RES DRV_ETHMAC_PIC32MACRxFilterHashTableEntrySet(DRV_HANDLE hMac, const TCPIP_MAC_ADDR* DestMACAddr); TCPIP_MAC_RES_OK if success a TCPIP_MAC_RES error value if failed This...","GUID-FF74BB5A-2DAB-4D3B-847D-0D5CA0734D98.html@@@1.2.1.12.2.30 TCPIP_HTTP_CurrentConnectionUploadBufferCurrSet Function@@@void TCPIP_HTTP_CurrentConnectionUploadBufferCurrSet( HTTP_CONN_HANDLE connHandle, uint8_t* uploadBufferCurr ); This function sets the current address of current connection upload buffer. None...","GUID-FFA052F9-19D3-42BA-8C32-2844E4D7AF9E.html@@@1.2.3.2.3.12 TCPIP_UDP_EXTERN_PACKET_PROCESS Macro@@@#define TCPIP_UDP_EXTERN_PACKET_PROCESS true This setting enables/disables the processing of the RX packets by an external handler The user of the UDP can register an external function to process the...","GUID-FFC1E0FE-AB66-4ED9-AE44-7EF3701F920E.html@@@1.2.1.16.1 Abstraction Model@@@...","GUID-FFCA82E1-BD8B-4E37-88A0-A2EEFD1C1B47.html@@@1.2.4.6.3.13 IPV6_HEADER_OFFSET_DEST_ADDR Macro@@@#define IPV6_HEADER_OFFSET_DEST_ADDR (0x08u + sizeof (IPV6_ADDR)) Header offset for destination address...","GUID-FFE97C7D-C926-45F2-ADDC-8DABCD225421.html@@@1.2.1.2.3.19 EAI_NONAME Macro@@@#define EAI_NONAME -2 /* NAME or SERVICE is unknown. */ NAME or SERVICE is unknown...","cshelp.html@@@Context Sensitive Help@@@..."];
});